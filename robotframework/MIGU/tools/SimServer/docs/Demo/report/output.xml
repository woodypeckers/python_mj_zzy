<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20160901 16:21:52.426" generator="Robot 3.0 (Python 2.7.10 on win32)">
<suite source="D:\project\SVN\mock\mockv1\SimServer\docs\Demo\接口案例" id="s1" name="接口案例">
<suite source="D:\project\SVN\mock\mockv1\SimServer\docs\Demo\接口案例\json" id="s1-s1" name="Json">
<suite source="D:\project\SVN\mock\mockv1\SimServer\docs\Demo\接口案例\json\01.HTTP简单请求测试.robot" id="s1-s1-s1" name="01.HTTP简单请求测试">
<test id="s1-s1-s1-t1" name="向URL发起POST请求">
<kw name="模拟器调用_test_json_utf8接口" library="NNN接口">
<arguments>
<arg>13500000000</arg>
<arg>中文姓名</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:53.975" level="TRACE">Arguments: [ ${MobNum}='13500000000' | ${UserID}='中文姓名' | ${BusiCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"MobNum":"${MobNum}","UserID":"${UserID}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:53.976" level="TRACE">Arguments: [ '{"MobNum":"13500000000","UserID":"中文姓名"}' ]</msg>
<msg timestamp="20160901 16:21:53.977" level="TRACE">Return: '{"MobNum":"13500000000","UserID":"中文姓名"}'</msg>
<msg timestamp="20160901 16:21:53.977" level="INFO">${request} = {"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<status status="PASS" endtime="20160901 16:21:53.977" starttime="20160901 16:21:53.976"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"BusiCode":"${BusiCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:53.977" level="TRACE">Arguments: [ '{"BusiCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:53.977" level="TRACE">Return: '{"BusiCode":"0"}'</msg>
<msg timestamp="20160901 16:21:53.978" level="INFO">${response} = {"BusiCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:53.978" starttime="20160901 16:21:53.977"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/json/utf8</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:53.979" level="TRACE">Arguments: [ ${msgType}='/test/json/utf8' | ${timeOut}='3' | ${request}='{"MobNum":"13500000000","UserID":"中文姓名"}' | ${response}='{"BusiCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:53.980" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/json/utf8' | '{"MobNum":"13500000000","UserID":"中文姓名"}' | '{"BusiCode":"0"}' | '0' | b'' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:53.980" level="INFO">{"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<msg timestamp="20160901 16:21:53.980" level="INFO">{"BusiCode":"0"}</msg>
<msg timestamp="20160901 16:21:53.980" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:53.981" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓...</msg>
<status status="PASS" endtime="20160901 16:21:53.981" starttime="20160901 16:21:53.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:53.981" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:53.982" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:53.982" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:53.982" starttime="20160901 16:21:53.981"></status>
</kw>
<msg timestamp="20160901 16:21:53.982" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:53.982" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓...</msg>
<status status="PASS" endtime="20160901 16:21:53.982" starttime="20160901 16:21:53.978"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:53.983" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:53.983" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:53.984" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:53.984" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:53.984" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:53.984" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:53.996" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/json/utf8
validTime is:3
startTime is:1472718113.99
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d
response parameter  total of 1
    BusiCode:0
</msg>
<msg timestamp="20160901 16:21:53.996" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/json/utf8\nvalidTime is:3\nstartTime is:1472718113.99\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n'</msg>
<msg timestamp="20160901 16:21:53.996" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/json/utf8
validTime is:3
startTime is:1472718113.99
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:1...</msg>
<status status="PASS" endtime="20160901 16:21:53.997" starttime="20160901 16:21:53.983"></status>
</kw>
<msg timestamp="20160901 16:21:53.997" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/json/utf8\nvalidTime is:3\nstartTime is:1472718113.99\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n'</msg>
<msg timestamp="20160901 16:21:53.997" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/json/utf8
validTime is:3
startTime is:1472718113.99
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:1...</msg>
<status status="PASS" endtime="20160901 16:21:53.997" starttime="20160901 16:21:53.982"></status>
</kw>
<msg timestamp="20160901 16:21:53.998" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/json/utf8
validTime is:3
startTime is:1472718113.99
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:ä¸­æå§å
response parameter  total of 1
    BusiCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:53.998" starttime="20160901 16:21:53.975"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/utf8.json</arg>
<arg>encoding=utf-8</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:53.999" level="TRACE">Arguments: [ 'Template/utf8.json' | encoding='utf-8' ]</msg>
<msg timestamp="20160901 16:21:53.999" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.json"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.json&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:54.000" level="TRACE">Return: '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}'</msg>
<msg timestamp="20160901 16:21:54.000" level="INFO">${unicode_request_body} = {
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
   ...</msg>
<status status="PASS" endtime="20160901 16:21:54.000" starttime="20160901 16:21:53.999"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:10001/test/json/utf8</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=utf-8</arg>
</arguments>
<msg timestamp="20160901 16:21:54.005" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:10001/test/json/utf8' | ${request_body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='utf-8' | ${custom_headers}=b'' ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:54.006" level="TRACE">Arguments: [ 'http://127.0.0.1:10001/test/json/utf8' ]</msg>
<msg timestamp="20160901 16:21:54.006" level="TRACE">Return: '127.0.0.1:10001'</msg>
<msg timestamp="20160901 16:21:54.006" level="INFO">${host} = 127.0.0.1:10001</msg>
<status status="PASS" endtime="20160901 16:21:54.006" starttime="20160901 16:21:54.006"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:54.007" level="TRACE">Arguments: [ 'http://127.0.0.1:10001/test/json/utf8' ]</msg>
<msg timestamp="20160901 16:21:54.007" level="TRACE">Return: '/test/json/utf8'</msg>
<msg timestamp="20160901 16:21:54.007" level="INFO">${uri} = /test/json/utf8</msg>
<status status="PASS" endtime="20160901 16:21:54.007" starttime="20160901 16:21:54.007"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.008" level="TRACE">Arguments: [ ${host}='127.0.0.1:10001' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.008" level="TRACE">Arguments: [ '127.0.0.1:10001' | 'http' ]</msg>
<msg timestamp="20160901 16:21:54.008" level="INFO">Host for next HTTP request set to '127.0.0.1:10001'</msg>
<msg timestamp="20160901 16:21:54.009" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:54.009" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.009" starttime="20160901 16:21:54.008"></status>
</kw>
<msg timestamp="20160901 16:21:54.009" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.009" starttime="20160901 16:21:54.007"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:54.010" level="TRACE">Arguments: [ b'' ]</msg>
<msg timestamp="20160901 16:21:54.010" level="TRACE">Return: {}</msg>
<msg timestamp="20160901 16:21:54.010" level="INFO">${customs_headers_dict} = {}</msg>
<status status="PASS" endtime="20160901 16:21:54.010" starttime="20160901 16:21:54.009"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:54.011" level="TRACE">Arguments: [ {} ]</msg>
<msg timestamp="20160901 16:21:54.011" level="TRACE">Return: []</msg>
<msg timestamp="20160901 16:21:54.011" level="INFO">@{key_list} = [ ]</msg>
<status status="PASS" endtime="20160901 16:21:54.011" starttime="20160901 16:21:54.010"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<status status="PASS" endtime="20160901 16:21:54.011" starttime="20160901 16:21:54.011"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.012" level="TRACE">Arguments: [ ${body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='utf-8' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.013" level="TRACE">Arguments: [ 'utf-8' ]</msg>
<msg timestamp="20160901 16:21:54.013" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:54.013" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:54.013" level="INFO">&lt;HttpLibrary.HTTP instance at 0x044D1148&gt;</msg>
<msg timestamp="20160901 16:21:54.013" level="INFO">utf-8</msg>
<msg timestamp="20160901 16:21:54.013" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.013" starttime="20160901 16:21:54.012"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.014" level="TRACE">Arguments: [ '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' ]</msg>
<msg timestamp="20160901 16:21:54.014" level="INFO">Request body set to "{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}".</msg>
<msg timestamp="20160901 16:21:54.014" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.014" starttime="20160901 16:21:54.013"></status>
</kw>
<msg timestamp="20160901 16:21:54.014" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.014" starttime="20160901 16:21:54.012"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.015" level="TRACE">Arguments: [ ${url}='/test/json/utf8' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.016" level="TRACE">Arguments: [ '/test/json/utf8' ]</msg>
<msg timestamp="20160901 16:21:54.016" level="DEBUG">Performing POST request on http://127.0.0.1:10001/test/json/utf8</msg>
<msg timestamp="20160901 16:21:54.016" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:54.016" level="DEBUG">Host: 127.0.0.1:10001</msg>
<msg timestamp="20160901 16:21:54.016" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:54.016" level="DEBUG">{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}</msg>
<msg timestamp="20160901 16:21:54.167" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:54.167" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:54.167" level="DEBUG">date: Thu, 01 Sep 2016 08:21:54 GMT</msg>
<msg timestamp="20160901 16:21:54.167" level="DEBUG">content-length: 263</msg>
<msg timestamp="20160901 16:21:54.167" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:54.167" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:54.167" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:54.167" level="DEBUG"> {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}</msg>
<msg timestamp="20160901 16:21:54.167" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.168" starttime="20160901 16:21:54.015"></status>
</kw>
<msg timestamp="20160901 16:21:54.168" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.168" starttime="20160901 16:21:54.014"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:54.168" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:54.169" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:54.169" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:54.169" level="INFO">${Response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<status status="PASS" endtime="20160901 16:21:54.169" starttime="20160901 16:21:54.169"></status>
</kw>
<msg timestamp="20160901 16:21:54.170" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:54.170" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<status status="PASS" endtime="20160901 16:21:54.170" starttime="20160901 16:21:54.168"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.171" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:54.171" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<msg timestamp="20160901 16:21:54.171" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.171" starttime="20160901 16:21:54.170"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.172" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:54.172" level="INFO">${custom_headers} = </msg>
<msg timestamp="20160901 16:21:54.172" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.172" starttime="20160901 16:21:54.172"></status>
</kw>
<msg timestamp="20160901 16:21:54.173" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<status status="PASS" endtime="20160901 16:21:54.173" starttime="20160901 16:21:54.005"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.173" critical="yes" starttime="20160901 16:21:53.971"></status>
</test>
<status status="PASS" endtime="20160901 16:21:54.175" starttime="20160901 16:21:52.472"></status>
</suite>
<suite source="D:\project\SVN\mock\mockv1\SimServer\docs\Demo\接口案例\json\02.自定义头.robot" id="s1-s1-s2" name="02.自定义头">
<test id="s1-s1-s2-t1" name="服务端原值返回自定义头">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}</arg>
</arguments>
<assign>
<var>${custom_header}</var>
</assign>
<msg timestamp="20160901 16:21:54.201" level="TRACE">Arguments: [ '{"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}' ]</msg>
<msg timestamp="20160901 16:21:54.201" level="TRACE">Return: '{"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}'</msg>
<msg timestamp="20160901 16:21:54.201" level="INFO">${custom_header} = {"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}</msg>
<status status="PASS" endtime="20160901 16:21:54.201" starttime="20160901 16:21:54.201"></status>
</kw>
<kw name="模拟器调用_test_json_customheader接口" library="NNN接口">
<arguments>
<arg>13500000000</arg>
<arg>中文姓名</arg>
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<arg>${custom_header}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.202" level="TRACE">Arguments: [ ${MobNum}='13500000000' | ${UserID}='中文姓名' | ${BusiCode}='0' | ${validTime}='3' | ${delay}='0' | ${custom_header}='{"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"MobNum":"${MobNum}","UserID":"${UserID}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:54.203" level="TRACE">Arguments: [ '{"MobNum":"13500000000","UserID":"中文姓名"}' ]</msg>
<msg timestamp="20160901 16:21:54.203" level="TRACE">Return: '{"MobNum":"13500000000","UserID":"中文姓名"}'</msg>
<msg timestamp="20160901 16:21:54.204" level="INFO">${request} = {"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<status status="PASS" endtime="20160901 16:21:54.204" starttime="20160901 16:21:54.203"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"BusiCode":"${BusiCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:54.204" level="TRACE">Arguments: [ '{"BusiCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:54.204" level="TRACE">Return: '{"BusiCode":"0"}'</msg>
<msg timestamp="20160901 16:21:54.204" level="INFO">${response} = {"BusiCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:54.205" starttime="20160901 16:21:54.204"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/json/default_utf8</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:54.205" level="TRACE">Arguments: [ ${msgType}='/test/json/default_utf8' | ${timeOut}='3' | ${request}='{"MobNum":"13500000000","UserID":"中文姓名"}' | ${response}='{"BusiCode":"0"}' | ${delay}='0' | ${custom_header}='{"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:54.207" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/json/default_utf8' | '{"MobNum":"13500000000","UserID":"中文姓名"}' | '{"BusiCode":"0"}' | '0' | '{"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:54.207" level="INFO">{"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}</msg>
<msg timestamp="20160901 16:21:54.207" level="INFO">{"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<msg timestamp="20160901 16:21:54.207" level="INFO">{"BusiCode":"0"}</msg>
<msg timestamp="20160901 16:21:54.207" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:54.208" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPL...</msg>
<status status="PASS" endtime="20160901 16:21:54.208" starttime="20160901 16:21:54.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.208" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:54.209" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:54.209" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.209" starttime="20160901 16:21:54.208"></status>
</kw>
<msg timestamp="20160901 16:21:54.209" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:54.209" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPL...</msg>
<status status="PASS" endtime="20160901 16:21:54.209" starttime="20160901 16:21:54.205"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:54.210" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:54.211" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:54.211" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:54.211" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:54.211" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:54.211" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:54.218" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/json/default_utf8
validTime is:3
startTime is:1472718114.21
matchStatus: False
delay: 0
custom_header:{'customheader3': 'REPLY', 'customheader2': 'REPLY', 'customheader1': 'REPLY'}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d
response parameter  total of 1
    BusiCode:0
</msg>
<msg timestamp="20160901 16:21:54.218" level="TRACE">Return: b"hostIp is: 127.0.0.1\nmsgType is: /test/json/default_utf8\nvalidTime is:3\nstartTime is:1472718114.21\nmatchStatus: False\ndelay: 0\ncustom_header:{'customheader3': 'REPLY', 'customheader2': 'REPLY', 'customheader1': 'REPLY'}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n"</msg>
<msg timestamp="20160901 16:21:54.219" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/json/default_utf8
validTime is:3
startTime is:1472718114.21
matchStatus: False
delay: 0
custom_header:{'customheader3': 'REPLY', 'customheader2': 'REPLY', 'custo...</msg>
<status status="PASS" endtime="20160901 16:21:54.219" starttime="20160901 16:21:54.210"></status>
</kw>
<msg timestamp="20160901 16:21:54.219" level="TRACE">Return: b"hostIp is: 127.0.0.1\nmsgType is: /test/json/default_utf8\nvalidTime is:3\nstartTime is:1472718114.21\nmatchStatus: False\ndelay: 0\ncustom_header:{'customheader3': 'REPLY', 'customheader2': 'REPLY', 'customheader1': 'REPLY'}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n"</msg>
<msg timestamp="20160901 16:21:54.219" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/json/default_utf8
validTime is:3
startTime is:1472718114.21
matchStatus: False
delay: 0
custom_header:{'customheader3': 'REPLY', 'customheader2': 'REPLY', 'custo...</msg>
<status status="PASS" endtime="20160901 16:21:54.219" starttime="20160901 16:21:54.209"></status>
</kw>
<msg timestamp="20160901 16:21:54.220" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b"hostIp is: 127.0.0.1
msgType is: /test/json/default_utf8
validTime is:3
startTime is:1472718114.21
matchStatus: False
delay: 0
custom_header:{'customheader3': 'REPLY', 'customheader2': 'REPLY', 'customheader1': 'REPLY'}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:ä¸­æå§å
response parameter  total of 1
    BusiCode:0
"]</msg>
<status status="PASS" endtime="20160901 16:21:54.220" starttime="20160901 16:21:54.202"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/utf8.json</arg>
<arg>encoding=utf-8</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:54.222" level="TRACE">Arguments: [ 'Template/utf8.json' | encoding='utf-8' ]</msg>
<msg timestamp="20160901 16:21:54.222" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.json"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.json&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:54.222" level="TRACE">Return: '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}'</msg>
<msg timestamp="20160901 16:21:54.223" level="INFO">${unicode_request_body} = {
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
   ...</msg>
<status status="PASS" endtime="20160901 16:21:54.223" starttime="20160901 16:21:54.221"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
<arg>customheader2=22222</arg>
<arg>customheader3=33333</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:54.224" level="TRACE">Arguments: [ 'customheader1=12345' | 'customheader2=22222' | 'customheader3=33333' ]</msg>
<msg timestamp="20160901 16:21:54.224" level="TRACE">Return: {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'}</msg>
<msg timestamp="20160901 16:21:54.224" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'customheader2': u'22222', u'customheader3': u'33333'}</msg>
<status status="PASS" endtime="20160901 16:21:54.224" starttime="20160901 16:21:54.223"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:10002/test/json/default_utf8</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=utf-8</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.228" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:10002/test/json/default_utf8' | ${request_body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='utf-8' | ${custom_headers}={'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:54.229" level="TRACE">Arguments: [ 'http://127.0.0.1:10002/test/json/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:54.229" level="TRACE">Return: '127.0.0.1:10002'</msg>
<msg timestamp="20160901 16:21:54.229" level="INFO">${host} = 127.0.0.1:10002</msg>
<status status="PASS" endtime="20160901 16:21:54.229" starttime="20160901 16:21:54.229"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:54.230" level="TRACE">Arguments: [ 'http://127.0.0.1:10002/test/json/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:54.230" level="TRACE">Return: '/test/json/default_utf8'</msg>
<msg timestamp="20160901 16:21:54.230" level="INFO">${uri} = /test/json/default_utf8</msg>
<status status="PASS" endtime="20160901 16:21:54.230" starttime="20160901 16:21:54.230"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.231" level="TRACE">Arguments: [ ${host}='127.0.0.1:10002' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.232" level="TRACE">Arguments: [ '127.0.0.1:10002' | 'http' ]</msg>
<msg timestamp="20160901 16:21:54.232" level="INFO">Host for next HTTP request set to '127.0.0.1:10002'</msg>
<msg timestamp="20160901 16:21:54.232" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:54.232" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.232" starttime="20160901 16:21:54.231"></status>
</kw>
<msg timestamp="20160901 16:21:54.233" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.233" starttime="20160901 16:21:54.230"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:54.233" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'} ]</msg>
<msg timestamp="20160901 16:21:54.233" level="TRACE">Return: {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'}</msg>
<msg timestamp="20160901 16:21:54.234" level="INFO">${customs_headers_dict} = {u'customheader3': u'33333', u'customheader2': u'22222', u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:54.234" starttime="20160901 16:21:54.233"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:54.235" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'} ]</msg>
<msg timestamp="20160901 16:21:54.235" level="TRACE">Return: ['customheader1', 'customheader2', 'customheader3']</msg>
<msg timestamp="20160901 16:21:54.235" level="INFO">@{key_list} = [ customheader1 | customheader2 | customheader3 ]</msg>
<status status="PASS" endtime="20160901 16:21:54.235" starttime="20160901 16:21:54.234"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:54.236" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:54.236" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:54.236" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:54.237" starttime="20160901 16:21:54.236"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.237" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.238" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:54.238" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:54.238" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.238" starttime="20160901 16:21:54.237"></status>
</kw>
<msg timestamp="20160901 16:21:54.238" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.238" starttime="20160901 16:21:54.237"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.238" starttime="20160901 16:21:54.235"></status>
</kw>
<kw type="foritem" name="${key} = customheader2">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:54.239" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'} | 'customheader2' ]</msg>
<msg timestamp="20160901 16:21:54.239" level="TRACE">Return: '22222'</msg>
<msg timestamp="20160901 16:21:54.239" level="INFO">${value} = 22222</msg>
<status status="PASS" endtime="20160901 16:21:54.240" starttime="20160901 16:21:54.239"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.240" level="TRACE">Arguments: [ ${header_name}='customheader2' | ${header_value}='22222' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.241" level="TRACE">Arguments: [ 'customheader2' | '22222' ]</msg>
<msg timestamp="20160901 16:21:54.241" level="INFO">Set request header "customheader2" to "22222"</msg>
<msg timestamp="20160901 16:21:54.241" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.241" starttime="20160901 16:21:54.240"></status>
</kw>
<msg timestamp="20160901 16:21:54.241" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.241" starttime="20160901 16:21:54.240"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.241" starttime="20160901 16:21:54.239"></status>
</kw>
<kw type="foritem" name="${key} = customheader3">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:54.242" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'} | 'customheader3' ]</msg>
<msg timestamp="20160901 16:21:54.242" level="TRACE">Return: '33333'</msg>
<msg timestamp="20160901 16:21:54.242" level="INFO">${value} = 33333</msg>
<status status="PASS" endtime="20160901 16:21:54.242" starttime="20160901 16:21:54.242"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.243" level="TRACE">Arguments: [ ${header_name}='customheader3' | ${header_value}='33333' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.244" level="TRACE">Arguments: [ 'customheader3' | '33333' ]</msg>
<msg timestamp="20160901 16:21:54.244" level="INFO">Set request header "customheader3" to "33333"</msg>
<msg timestamp="20160901 16:21:54.244" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.244" starttime="20160901 16:21:54.243"></status>
</kw>
<msg timestamp="20160901 16:21:54.244" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.244" starttime="20160901 16:21:54.243"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.244" starttime="20160901 16:21:54.241"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.244" starttime="20160901 16:21:54.235"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.245" level="TRACE">Arguments: [ ${body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='utf-8' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.246" level="TRACE">Arguments: [ 'utf-8' ]</msg>
<msg timestamp="20160901 16:21:54.246" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:54.246" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:54.246" level="INFO">&lt;HttpLibrary.HTTP instance at 0x0453BBE8&gt;</msg>
<msg timestamp="20160901 16:21:54.246" level="INFO">utf-8</msg>
<msg timestamp="20160901 16:21:54.246" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.246" starttime="20160901 16:21:54.245"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.247" level="TRACE">Arguments: [ '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' ]</msg>
<msg timestamp="20160901 16:21:54.247" level="INFO">Request body set to "{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}".</msg>
<msg timestamp="20160901 16:21:54.247" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.247" starttime="20160901 16:21:54.247"></status>
</kw>
<msg timestamp="20160901 16:21:54.247" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.247" starttime="20160901 16:21:54.245"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.248" level="TRACE">Arguments: [ ${url}='/test/json/default_utf8' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.249" level="TRACE">Arguments: [ '/test/json/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:54.249" level="DEBUG">Performing POST request on http://127.0.0.1:10002/test/json/default_utf8</msg>
<msg timestamp="20160901 16:21:54.249" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:54.249" level="DEBUG">Host: 127.0.0.1:10002</msg>
<msg timestamp="20160901 16:21:54.249" level="DEBUG">customheader3: 33333</msg>
<msg timestamp="20160901 16:21:54.249" level="DEBUG">customheader2: 22222</msg>
<msg timestamp="20160901 16:21:54.249" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:54.249" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:54.250" level="DEBUG">{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}</msg>
<msg timestamp="20160901 16:21:54.403" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:54.403" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:54.403" level="DEBUG">content-length: 263</msg>
<msg timestamp="20160901 16:21:54.403" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:54.403" level="DEBUG">customheader3: 33333</msg>
<msg timestamp="20160901 16:21:54.403" level="DEBUG">customheader2: 22222</msg>
<msg timestamp="20160901 16:21:54.404" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:54.404" level="DEBUG">date: Thu, 01 Sep 2016 08:21:54 GMT</msg>
<msg timestamp="20160901 16:21:54.404" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:54.404" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:54.404" level="DEBUG"> {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}</msg>
<msg timestamp="20160901 16:21:54.404" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.404" starttime="20160901 16:21:54.249"></status>
</kw>
<msg timestamp="20160901 16:21:54.404" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.405" starttime="20160901 16:21:54.248"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:54.405" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:54.406" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:54.406" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:54.406" level="INFO">${Response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<status status="PASS" endtime="20160901 16:21:54.406" starttime="20160901 16:21:54.405"></status>
</kw>
<msg timestamp="20160901 16:21:54.406" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:54.407" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<status status="PASS" endtime="20160901 16:21:54.407" starttime="20160901 16:21:54.405"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.407" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:54.408" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<msg timestamp="20160901 16:21:54.408" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.408" starttime="20160901 16:21:54.407"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.408" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:54.409" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'customheader2': u'22222', u'customheader3': u'33333'}</msg>
<msg timestamp="20160901 16:21:54.409" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.409" starttime="20160901 16:21:54.408"></status>
</kw>
<msg timestamp="20160901 16:21:54.409" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<status status="PASS" endtime="20160901 16:21:54.409" starttime="20160901 16:21:54.228"></status>
</kw>
<kw name="获取返回包头" library="HttpLibrary.HTTP">
<arguments>
<arg>customheader1</arg>
</arguments>
<assign>
<var>${rsp_header1}</var>
</assign>
<msg timestamp="20160901 16:21:54.410" level="TRACE">Arguments: [ ${header_name}='customheader1' ]</msg>
<kw name="Get Response Header" library="HttpLibrary.HTTP">
<doc>Get the response header with the name `header_name`</doc>
<arguments>
<arg>${header_name}</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:54.411" level="TRACE">Arguments: [ 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:54.411" level="TRACE">Return: [b'12345']</msg>
<msg timestamp="20160901 16:21:54.411" level="INFO">${Response_header_value} = ['12345']</msg>
<status status="PASS" endtime="20160901 16:21:54.411" starttime="20160901 16:21:54.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"type(${Response_header_value})"=="type([])"</arg>
<arg>Return From Keyword</arg>
</arguments>
<msg timestamp="20160901 16:21:54.412" level="TRACE">Arguments: [ '"type([\'12345\'])"=="type([])"' | 'Return From Keyword' ]</msg>
<msg timestamp="20160901 16:21:54.413" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.413" starttime="20160901 16:21:54.412"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Response_header_value}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:54.414" level="TRACE">Arguments: [ [b'12345'] | '0' ]</msg>
<msg timestamp="20160901 16:21:54.414" level="TRACE">Return: b'12345'</msg>
<msg timestamp="20160901 16:21:54.414" level="INFO">${Response_header_value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:54.414" starttime="20160901 16:21:54.413"></status>
</kw>
<msg timestamp="20160901 16:21:54.414" level="TRACE">Return: b'12345'</msg>
<msg timestamp="20160901 16:21:54.414" level="INFO">${rsp_header1} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:54.415" starttime="20160901 16:21:54.410"></status>
</kw>
<kw name="获取返回包头" library="HttpLibrary.HTTP">
<arguments>
<arg>customheader2</arg>
</arguments>
<assign>
<var>${rsp_header2}</var>
</assign>
<msg timestamp="20160901 16:21:54.416" level="TRACE">Arguments: [ ${header_name}='customheader2' ]</msg>
<kw name="Get Response Header" library="HttpLibrary.HTTP">
<doc>Get the response header with the name `header_name`</doc>
<arguments>
<arg>${header_name}</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:54.417" level="TRACE">Arguments: [ 'customheader2' ]</msg>
<msg timestamp="20160901 16:21:54.417" level="TRACE">Return: [b'22222']</msg>
<msg timestamp="20160901 16:21:54.417" level="INFO">${Response_header_value} = ['22222']</msg>
<status status="PASS" endtime="20160901 16:21:54.417" starttime="20160901 16:21:54.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"type(${Response_header_value})"=="type([])"</arg>
<arg>Return From Keyword</arg>
</arguments>
<msg timestamp="20160901 16:21:54.418" level="TRACE">Arguments: [ '"type([\'22222\'])"=="type([])"' | 'Return From Keyword' ]</msg>
<msg timestamp="20160901 16:21:54.419" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.419" starttime="20160901 16:21:54.417"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Response_header_value}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:54.419" level="TRACE">Arguments: [ [b'22222'] | '0' ]</msg>
<msg timestamp="20160901 16:21:54.419" level="TRACE">Return: b'22222'</msg>
<msg timestamp="20160901 16:21:54.420" level="INFO">${Response_header_value} = 22222</msg>
<status status="PASS" endtime="20160901 16:21:54.420" starttime="20160901 16:21:54.419"></status>
</kw>
<msg timestamp="20160901 16:21:54.420" level="TRACE">Return: b'22222'</msg>
<msg timestamp="20160901 16:21:54.420" level="INFO">${rsp_header2} = 22222</msg>
<status status="PASS" endtime="20160901 16:21:54.420" starttime="20160901 16:21:54.415"></status>
</kw>
<kw name="获取返回包头" library="HttpLibrary.HTTP">
<arguments>
<arg>customheader3</arg>
</arguments>
<assign>
<var>${rsp_header3}</var>
</assign>
<msg timestamp="20160901 16:21:54.421" level="TRACE">Arguments: [ ${header_name}='customheader3' ]</msg>
<kw name="Get Response Header" library="HttpLibrary.HTTP">
<doc>Get the response header with the name `header_name`</doc>
<arguments>
<arg>${header_name}</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:54.422" level="TRACE">Arguments: [ 'customheader3' ]</msg>
<msg timestamp="20160901 16:21:54.422" level="TRACE">Return: [b'33333']</msg>
<msg timestamp="20160901 16:21:54.422" level="INFO">${Response_header_value} = ['33333']</msg>
<status status="PASS" endtime="20160901 16:21:54.422" starttime="20160901 16:21:54.421"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"type(${Response_header_value})"=="type([])"</arg>
<arg>Return From Keyword</arg>
</arguments>
<msg timestamp="20160901 16:21:54.423" level="TRACE">Arguments: [ '"type([\'33333\'])"=="type([])"' | 'Return From Keyword' ]</msg>
<msg timestamp="20160901 16:21:54.424" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.424" starttime="20160901 16:21:54.422"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Response_header_value}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:54.424" level="TRACE">Arguments: [ [b'33333'] | '0' ]</msg>
<msg timestamp="20160901 16:21:54.424" level="TRACE">Return: b'33333'</msg>
<msg timestamp="20160901 16:21:54.425" level="INFO">${Response_header_value} = 33333</msg>
<status status="PASS" endtime="20160901 16:21:54.425" starttime="20160901 16:21:54.424"></status>
</kw>
<msg timestamp="20160901 16:21:54.425" level="TRACE">Return: b'33333'</msg>
<msg timestamp="20160901 16:21:54.425" level="INFO">${rsp_header3} = 33333</msg>
<status status="PASS" endtime="20160901 16:21:54.425" starttime="20160901 16:21:54.421"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${rsp_header1}</arg>
<arg>12345</arg>
</arguments>
<msg timestamp="20160901 16:21:54.426" level="TRACE">Arguments: [ b'12345' | '12345' ]</msg>
<msg timestamp="20160901 16:21:54.426" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:54.426" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.426" starttime="20160901 16:21:54.426"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${rsp_header2}</arg>
<arg>22222</arg>
</arguments>
<msg timestamp="20160901 16:21:54.427" level="TRACE">Arguments: [ b'22222' | '22222' ]</msg>
<msg timestamp="20160901 16:21:54.428" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:54.428" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.428" starttime="20160901 16:21:54.427"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${rsp_header3}</arg>
<arg>33333</arg>
</arguments>
<msg timestamp="20160901 16:21:54.429" level="TRACE">Arguments: [ b'33333' | '33333' ]</msg>
<msg timestamp="20160901 16:21:54.429" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:54.429" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.429" starttime="20160901 16:21:54.428"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.429" critical="yes" starttime="20160901 16:21:54.197"></status>
</test>
<test id="s1-s1-s2-t2" name="服务端创建自定义头的值">
<kw name="创建随机值">
<assign>
<var>${random_token}</var>
</assign>
<msg timestamp="20160901 16:21:54.441" level="TRACE">Arguments: [  ]</msg>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>12</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${random_token}</var>
</assign>
<msg timestamp="20160901 16:21:54.442" level="TRACE">Arguments: [ '12' | '[LOWER]' ]</msg>
<msg timestamp="20160901 16:21:54.442" level="TRACE">Return: 'ikmcqlladcju'</msg>
<msg timestamp="20160901 16:21:54.442" level="INFO">${random_token} = ikmcqlladcju</msg>
<status status="PASS" endtime="20160901 16:21:54.442" starttime="20160901 16:21:54.442"></status>
</kw>
<msg timestamp="20160901 16:21:54.442" level="TRACE">Return: 'ikmcqlladcju'</msg>
<msg timestamp="20160901 16:21:54.443" level="INFO">${random_token} = ikmcqlladcju</msg>
<status status="PASS" endtime="20160901 16:21:54.443" starttime="20160901 16:21:54.441"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"customheader1":"REPLY","token":"${random_token}"}</arg>
</arguments>
<assign>
<var>${custom_header}</var>
</assign>
<msg timestamp="20160901 16:21:54.443" level="TRACE">Arguments: [ '{"customheader1":"REPLY","token":"ikmcqlladcju"}' ]</msg>
<msg timestamp="20160901 16:21:54.444" level="TRACE">Return: '{"customheader1":"REPLY","token":"ikmcqlladcju"}'</msg>
<msg timestamp="20160901 16:21:54.444" level="INFO">${custom_header} = {"customheader1":"REPLY","token":"ikmcqlladcju"}</msg>
<status status="PASS" endtime="20160901 16:21:54.444" starttime="20160901 16:21:54.443"></status>
</kw>
<kw name="模拟器调用_test_json_customheader接口" library="NNN接口">
<arguments>
<arg>13500000000</arg>
<arg>中文姓名</arg>
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<arg>${custom_header}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.445" level="TRACE">Arguments: [ ${MobNum}='13500000000' | ${UserID}='中文姓名' | ${BusiCode}='0' | ${validTime}='3' | ${delay}='0' | ${custom_header}='{"customheader1":"REPLY","token":"ikmcqlladcju"}' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"MobNum":"${MobNum}","UserID":"${UserID}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:54.446" level="TRACE">Arguments: [ '{"MobNum":"13500000000","UserID":"中文姓名"}' ]</msg>
<msg timestamp="20160901 16:21:54.446" level="TRACE">Return: '{"MobNum":"13500000000","UserID":"中文姓名"}'</msg>
<msg timestamp="20160901 16:21:54.446" level="INFO">${request} = {"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<status status="PASS" endtime="20160901 16:21:54.446" starttime="20160901 16:21:54.445"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"BusiCode":"${BusiCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:54.446" level="TRACE">Arguments: [ '{"BusiCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:54.447" level="TRACE">Return: '{"BusiCode":"0"}'</msg>
<msg timestamp="20160901 16:21:54.447" level="INFO">${response} = {"BusiCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:54.447" starttime="20160901 16:21:54.446"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/json/default_utf8</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:54.448" level="TRACE">Arguments: [ ${msgType}='/test/json/default_utf8' | ${timeOut}='3' | ${request}='{"MobNum":"13500000000","UserID":"中文姓名"}' | ${response}='{"BusiCode":"0"}' | ${delay}='0' | ${custom_header}='{"customheader1":"REPLY","token":"ikmcqlladcju"}' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:54.450" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/json/default_utf8' | '{"MobNum":"13500000000","UserID":"中文姓名"}' | '{"BusiCode":"0"}' | '0' | '{"customheader1":"REPLY","token":"ikmcqlladcju"}' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:54.450" level="INFO">{"customheader1":"REPLY","token":"ikmcqlladcju"}</msg>
<msg timestamp="20160901 16:21:54.450" level="INFO">{"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<msg timestamp="20160901 16:21:54.450" level="INFO">{"BusiCode":"0"}</msg>
<msg timestamp="20160901 16:21:54.450" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ikmcqlladcju&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:54.451" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ikmcqlladcju...</msg>
<status status="PASS" endtime="20160901 16:21:54.451" starttime="20160901 16:21:54.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.451" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ikmcqlladcju&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:54.451" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ikmcqlladcju&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:54.451" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.452" starttime="20160901 16:21:54.451"></status>
</kw>
<msg timestamp="20160901 16:21:54.452" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ikmcqlladcju&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:54.452" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ikmcqlladcju...</msg>
<status status="PASS" endtime="20160901 16:21:54.452" starttime="20160901 16:21:54.447"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:54.453" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ikmcqlladcju&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:54.453" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ikmcqlladcju&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:54.453" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ikmcqlladcju&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:54.454" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:54.454" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:54.454" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:54.460" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/json/default_utf8
validTime is:3
startTime is:1472718114.46
matchStatus: False
delay: 0
custom_header:{'token': 'ikmcqlladcju', 'customheader1': 'REPLY'}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d
response parameter  total of 1
    BusiCode:0
</msg>
<msg timestamp="20160901 16:21:54.460" level="TRACE">Return: b"hostIp is: 127.0.0.1\nmsgType is: /test/json/default_utf8\nvalidTime is:3\nstartTime is:1472718114.46\nmatchStatus: False\ndelay: 0\ncustom_header:{'token': 'ikmcqlladcju', 'customheader1': 'REPLY'}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n"</msg>
<msg timestamp="20160901 16:21:54.460" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/json/default_utf8
validTime is:3
startTime is:1472718114.46
matchStatus: False
delay: 0
custom_header:{'token': 'ikmcqlladcju', 'customheader1': 'REPLY'}
request...</msg>
<status status="PASS" endtime="20160901 16:21:54.460" starttime="20160901 16:21:54.453"></status>
</kw>
<msg timestamp="20160901 16:21:54.461" level="TRACE">Return: b"hostIp is: 127.0.0.1\nmsgType is: /test/json/default_utf8\nvalidTime is:3\nstartTime is:1472718114.46\nmatchStatus: False\ndelay: 0\ncustom_header:{'token': 'ikmcqlladcju', 'customheader1': 'REPLY'}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n"</msg>
<msg timestamp="20160901 16:21:54.461" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/json/default_utf8
validTime is:3
startTime is:1472718114.46
matchStatus: False
delay: 0
custom_header:{'token': 'ikmcqlladcju', 'customheader1': 'REPLY'}
request...</msg>
<status status="PASS" endtime="20160901 16:21:54.461" starttime="20160901 16:21:54.452"></status>
</kw>
<msg timestamp="20160901 16:21:54.461" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ikmcqlladcju&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b"hostIp is: 127.0.0.1
msgType is: /test/json/default_utf8
validTime is:3
startTime is:1472718114.46
matchStatus: False
delay: 0
custom_header:{'token': 'ikmcqlladcju', 'customheader1': 'REPLY'}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:ä¸­æå§å
response parameter  total of 1
    BusiCode:0
"]</msg>
<status status="PASS" endtime="20160901 16:21:54.462" starttime="20160901 16:21:54.444"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/utf8.json</arg>
<arg>encoding=utf-8</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:54.463" level="TRACE">Arguments: [ 'Template/utf8.json' | encoding='utf-8' ]</msg>
<msg timestamp="20160901 16:21:54.463" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.json"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.json&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:54.464" level="TRACE">Return: '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}'</msg>
<msg timestamp="20160901 16:21:54.464" level="INFO">${unicode_request_body} = {
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
   ...</msg>
<status status="PASS" endtime="20160901 16:21:54.464" starttime="20160901 16:21:54.463"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:54.465" level="TRACE">Arguments: [ 'customheader1=12345' ]</msg>
<msg timestamp="20160901 16:21:54.466" level="TRACE">Return: {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:54.466" level="INFO">${custom_headers} = {u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:54.466" starttime="20160901 16:21:54.465"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:10002/test/json/default_utf8</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=utf-8</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.471" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:10002/test/json/default_utf8' | ${request_body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='utf-8' | ${custom_headers}={'customheader1': '12345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:54.471" level="TRACE">Arguments: [ 'http://127.0.0.1:10002/test/json/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:54.472" level="TRACE">Return: '127.0.0.1:10002'</msg>
<msg timestamp="20160901 16:21:54.472" level="INFO">${host} = 127.0.0.1:10002</msg>
<status status="PASS" endtime="20160901 16:21:54.472" starttime="20160901 16:21:54.471"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:54.473" level="TRACE">Arguments: [ 'http://127.0.0.1:10002/test/json/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:54.473" level="TRACE">Return: '/test/json/default_utf8'</msg>
<msg timestamp="20160901 16:21:54.473" level="INFO">${uri} = /test/json/default_utf8</msg>
<status status="PASS" endtime="20160901 16:21:54.473" starttime="20160901 16:21:54.472"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.473" level="TRACE">Arguments: [ ${host}='127.0.0.1:10002' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.474" level="TRACE">Arguments: [ '127.0.0.1:10002' | 'http' ]</msg>
<msg timestamp="20160901 16:21:54.474" level="INFO">Host for next HTTP request set to '127.0.0.1:10002'</msg>
<msg timestamp="20160901 16:21:54.474" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:54.474" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.474" starttime="20160901 16:21:54.474"></status>
</kw>
<msg timestamp="20160901 16:21:54.475" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.475" starttime="20160901 16:21:54.473"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:54.475" level="TRACE">Arguments: [ {'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:54.475" level="TRACE">Return: {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:54.476" level="INFO">${customs_headers_dict} = {u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:54.476" starttime="20160901 16:21:54.475"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:54.476" level="TRACE">Arguments: [ {'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:54.476" level="TRACE">Return: ['customheader1']</msg>
<msg timestamp="20160901 16:21:54.477" level="INFO">@{key_list} = [ customheader1 ]</msg>
<status status="PASS" endtime="20160901 16:21:54.477" starttime="20160901 16:21:54.476"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:54.477" level="TRACE">Arguments: [ {'customheader1': '12345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:54.478" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:54.478" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:54.478" starttime="20160901 16:21:54.477"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.478" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.479" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:54.479" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:54.479" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.480" starttime="20160901 16:21:54.479"></status>
</kw>
<msg timestamp="20160901 16:21:54.480" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.480" starttime="20160901 16:21:54.478"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.480" starttime="20160901 16:21:54.477"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.480" starttime="20160901 16:21:54.477"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.481" level="TRACE">Arguments: [ ${body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='utf-8' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.481" level="TRACE">Arguments: [ 'utf-8' ]</msg>
<msg timestamp="20160901 16:21:54.481" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:54.482" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:54.482" level="INFO">&lt;HttpLibrary.HTTP instance at 0x0453BBE8&gt;</msg>
<msg timestamp="20160901 16:21:54.482" level="INFO">utf-8</msg>
<msg timestamp="20160901 16:21:54.482" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.482" starttime="20160901 16:21:54.481"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.483" level="TRACE">Arguments: [ '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' ]</msg>
<msg timestamp="20160901 16:21:54.483" level="INFO">Request body set to "{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}".</msg>
<msg timestamp="20160901 16:21:54.483" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.483" starttime="20160901 16:21:54.482"></status>
</kw>
<msg timestamp="20160901 16:21:54.483" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.483" starttime="20160901 16:21:54.480"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.484" level="TRACE">Arguments: [ ${url}='/test/json/default_utf8' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.484" level="TRACE">Arguments: [ '/test/json/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:54.485" level="DEBUG">Performing POST request on http://127.0.0.1:10002/test/json/default_utf8</msg>
<msg timestamp="20160901 16:21:54.485" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:54.485" level="DEBUG">Host: 127.0.0.1:10002</msg>
<msg timestamp="20160901 16:21:54.485" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:54.485" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:54.485" level="DEBUG">{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}</msg>
<msg timestamp="20160901 16:21:54.636" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:54.636" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:54.637" level="DEBUG">content-length: 263</msg>
<msg timestamp="20160901 16:21:54.637" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:54.637" level="DEBUG">token: ikmcqlladcju</msg>
<msg timestamp="20160901 16:21:54.637" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:54.637" level="DEBUG">date: Thu, 01 Sep 2016 08:21:54 GMT</msg>
<msg timestamp="20160901 16:21:54.637" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:54.637" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:54.637" level="DEBUG"> {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}</msg>
<msg timestamp="20160901 16:21:54.637" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.637" starttime="20160901 16:21:54.484"></status>
</kw>
<msg timestamp="20160901 16:21:54.638" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.638" starttime="20160901 16:21:54.483"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:54.638" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:54.639" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:54.639" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:54.639" level="INFO">${Response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<status status="PASS" endtime="20160901 16:21:54.639" starttime="20160901 16:21:54.639"></status>
</kw>
<msg timestamp="20160901 16:21:54.640" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:54.640" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<status status="PASS" endtime="20160901 16:21:54.640" starttime="20160901 16:21:54.638"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.640" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:54.641" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<msg timestamp="20160901 16:21:54.641" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.641" starttime="20160901 16:21:54.640"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.642" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:54.642" level="INFO">${custom_headers} = {u'customheader1': u'12345'}</msg>
<msg timestamp="20160901 16:21:54.642" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.642" starttime="20160901 16:21:54.641"></status>
</kw>
<msg timestamp="20160901 16:21:54.642" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<status status="PASS" endtime="20160901 16:21:54.642" starttime="20160901 16:21:54.470"></status>
</kw>
<kw name="获取返回包头" library="HttpLibrary.HTTP">
<arguments>
<arg>customheader1</arg>
</arguments>
<assign>
<var>${rsp_header1}</var>
</assign>
<msg timestamp="20160901 16:21:54.643" level="TRACE">Arguments: [ ${header_name}='customheader1' ]</msg>
<kw name="Get Response Header" library="HttpLibrary.HTTP">
<doc>Get the response header with the name `header_name`</doc>
<arguments>
<arg>${header_name}</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:54.644" level="TRACE">Arguments: [ 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:54.644" level="TRACE">Return: [b'12345']</msg>
<msg timestamp="20160901 16:21:54.644" level="INFO">${Response_header_value} = ['12345']</msg>
<status status="PASS" endtime="20160901 16:21:54.644" starttime="20160901 16:21:54.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"type(${Response_header_value})"=="type([])"</arg>
<arg>Return From Keyword</arg>
</arguments>
<msg timestamp="20160901 16:21:54.645" level="TRACE">Arguments: [ '"type([\'12345\'])"=="type([])"' | 'Return From Keyword' ]</msg>
<msg timestamp="20160901 16:21:54.646" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.646" starttime="20160901 16:21:54.645"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Response_header_value}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:54.647" level="TRACE">Arguments: [ [b'12345'] | '0' ]</msg>
<msg timestamp="20160901 16:21:54.647" level="TRACE">Return: b'12345'</msg>
<msg timestamp="20160901 16:21:54.647" level="INFO">${Response_header_value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:54.647" starttime="20160901 16:21:54.646"></status>
</kw>
<msg timestamp="20160901 16:21:54.647" level="TRACE">Return: b'12345'</msg>
<msg timestamp="20160901 16:21:54.648" level="INFO">${rsp_header1} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:54.648" starttime="20160901 16:21:54.643"></status>
</kw>
<kw name="获取返回包头" library="HttpLibrary.HTTP">
<arguments>
<arg>token</arg>
</arguments>
<assign>
<var>${token_header}</var>
</assign>
<msg timestamp="20160901 16:21:54.649" level="TRACE">Arguments: [ ${header_name}='token' ]</msg>
<kw name="Get Response Header" library="HttpLibrary.HTTP">
<doc>Get the response header with the name `header_name`</doc>
<arguments>
<arg>${header_name}</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:54.649" level="TRACE">Arguments: [ 'token' ]</msg>
<msg timestamp="20160901 16:21:54.650" level="TRACE">Return: [b'ikmcqlladcju']</msg>
<msg timestamp="20160901 16:21:54.650" level="INFO">${Response_header_value} = ['ikmcqlladcju']</msg>
<status status="PASS" endtime="20160901 16:21:54.650" starttime="20160901 16:21:54.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"type(${Response_header_value})"=="type([])"</arg>
<arg>Return From Keyword</arg>
</arguments>
<msg timestamp="20160901 16:21:54.650" level="TRACE">Arguments: [ '"type([\'ikmcqlladcju\'])"=="type([])"' | 'Return From Keyword' ]</msg>
<msg timestamp="20160901 16:21:54.651" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.651" starttime="20160901 16:21:54.650"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Response_header_value}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:54.652" level="TRACE">Arguments: [ [b'ikmcqlladcju'] | '0' ]</msg>
<msg timestamp="20160901 16:21:54.652" level="TRACE">Return: b'ikmcqlladcju'</msg>
<msg timestamp="20160901 16:21:54.652" level="INFO">${Response_header_value} = ikmcqlladcju</msg>
<status status="PASS" endtime="20160901 16:21:54.652" starttime="20160901 16:21:54.652"></status>
</kw>
<msg timestamp="20160901 16:21:54.653" level="TRACE">Return: b'ikmcqlladcju'</msg>
<msg timestamp="20160901 16:21:54.653" level="INFO">${token_header} = ikmcqlladcju</msg>
<status status="PASS" endtime="20160901 16:21:54.653" starttime="20160901 16:21:54.648"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${rsp_header1}</arg>
<arg>12345</arg>
</arguments>
<msg timestamp="20160901 16:21:54.654" level="TRACE">Arguments: [ b'12345' | '12345' ]</msg>
<msg timestamp="20160901 16:21:54.654" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:54.654" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.654" starttime="20160901 16:21:54.653"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${token_header}</arg>
<arg>${random_token}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.656" level="TRACE">Arguments: [ b'ikmcqlladcju' | 'ikmcqlladcju' ]</msg>
<msg timestamp="20160901 16:21:54.656" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:54.656" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.656" starttime="20160901 16:21:54.655"></status>
</kw>
<doc>对于某些接口，是请求一个类似于Session的值，如getToken接口，此时http请求不带头，而服务端的返回的Token为随机值</doc>
<status status="PASS" endtime="20160901 16:21:54.657" critical="yes" starttime="20160901 16:21:54.431"></status>
</test>
<status status="PASS" endtime="20160901 16:21:54.659" starttime="20160901 16:21:54.181"></status>
</suite>
<suite source="D:\project\SVN\mock\mockv1\SimServer\docs\Demo\接口案例\json\03.自定义编码.robot" id="s1-s1-s3" name="03.自定义编码">
<test id="s1-s1-s3-t1" name="服务端设置编码为utf8(缺省)">
<kw name="模拟器调用_test_json_utf8接口" library="NNN接口">
<arguments>
<arg>13500000000</arg>
<arg>中文姓名</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:54.691" level="TRACE">Arguments: [ ${MobNum}='13500000000' | ${UserID}='中文姓名' | ${BusiCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"MobNum":"${MobNum}","UserID":"${UserID}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:54.691" level="TRACE">Arguments: [ '{"MobNum":"13500000000","UserID":"中文姓名"}' ]</msg>
<msg timestamp="20160901 16:21:54.692" level="TRACE">Return: '{"MobNum":"13500000000","UserID":"中文姓名"}'</msg>
<msg timestamp="20160901 16:21:54.692" level="INFO">${request} = {"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<status status="PASS" endtime="20160901 16:21:54.692" starttime="20160901 16:21:54.691"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"BusiCode":"${BusiCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:54.692" level="TRACE">Arguments: [ '{"BusiCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:54.692" level="TRACE">Return: '{"BusiCode":"0"}'</msg>
<msg timestamp="20160901 16:21:54.693" level="INFO">${response} = {"BusiCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:54.693" starttime="20160901 16:21:54.692"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/json/utf8</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:54.694" level="TRACE">Arguments: [ ${msgType}='/test/json/utf8' | ${timeOut}='3' | ${request}='{"MobNum":"13500000000","UserID":"中文姓名"}' | ${response}='{"BusiCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:54.695" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/json/utf8' | '{"MobNum":"13500000000","UserID":"中文姓名"}' | '{"BusiCode":"0"}' | '0' | b'' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:54.695" level="INFO">{"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<msg timestamp="20160901 16:21:54.696" level="INFO">{"BusiCode":"0"}</msg>
<msg timestamp="20160901 16:21:54.696" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:54.696" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓...</msg>
<status status="PASS" endtime="20160901 16:21:54.696" starttime="20160901 16:21:54.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.697" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:54.697" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:54.697" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.697" starttime="20160901 16:21:54.696"></status>
</kw>
<msg timestamp="20160901 16:21:54.697" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:54.697" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓...</msg>
<status status="PASS" endtime="20160901 16:21:54.697" starttime="20160901 16:21:54.693"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:54.698" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:54.699" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:54.699" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:54.699" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:54.699" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:54.699" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:54.704" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/json/utf8
validTime is:3
startTime is:1472718114.7
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d
response parameter  total of 1
    BusiCode:0
</msg>
<msg timestamp="20160901 16:21:54.705" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/json/utf8\nvalidTime is:3\nstartTime is:1472718114.7\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n'</msg>
<msg timestamp="20160901 16:21:54.705" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/json/utf8
validTime is:3
startTime is:1472718114.7
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13...</msg>
<status status="PASS" endtime="20160901 16:21:54.705" starttime="20160901 16:21:54.698"></status>
</kw>
<msg timestamp="20160901 16:21:54.705" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/json/utf8\nvalidTime is:3\nstartTime is:1472718114.7\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n'</msg>
<msg timestamp="20160901 16:21:54.706" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/json/utf8
validTime is:3
startTime is:1472718114.7
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13...</msg>
<status status="PASS" endtime="20160901 16:21:54.706" starttime="20160901 16:21:54.698"></status>
</kw>
<msg timestamp="20160901 16:21:54.706" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/json/utf8
validTime is:3
startTime is:1472718114.7
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:ä¸­æå§å
response parameter  total of 1
    BusiCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:54.707" starttime="20160901 16:21:54.690"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/utf8.json</arg>
<arg>encoding=utf-8</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:54.708" level="TRACE">Arguments: [ 'Template/utf8.json' | encoding='utf-8' ]</msg>
<msg timestamp="20160901 16:21:54.708" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.json"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.json&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:54.708" level="TRACE">Return: '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}'</msg>
<msg timestamp="20160901 16:21:54.709" level="INFO">${unicode_request_body} = {
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
   ...</msg>
<status status="PASS" endtime="20160901 16:21:54.709" starttime="20160901 16:21:54.707"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
<arg>customheader2=22345</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:54.709" level="TRACE">Arguments: [ 'customheader1=12345' | 'customheader2=22345' ]</msg>
<msg timestamp="20160901 16:21:54.710" level="TRACE">Return: {'customheader1': '12345', 'customheader2': '22345'}</msg>
<msg timestamp="20160901 16:21:54.710" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'customheader2': u'22345'}</msg>
<status status="PASS" endtime="20160901 16:21:54.710" starttime="20160901 16:21:54.709"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:10001/test/json/utf8</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=utf-8</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.714" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:10001/test/json/utf8' | ${request_body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='utf-8' | ${custom_headers}={'customheader1': '12345', 'customheader2': '22345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:54.715" level="TRACE">Arguments: [ 'http://127.0.0.1:10001/test/json/utf8' ]</msg>
<msg timestamp="20160901 16:21:54.715" level="TRACE">Return: '127.0.0.1:10001'</msg>
<msg timestamp="20160901 16:21:54.716" level="INFO">${host} = 127.0.0.1:10001</msg>
<status status="PASS" endtime="20160901 16:21:54.716" starttime="20160901 16:21:54.715"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:54.716" level="TRACE">Arguments: [ 'http://127.0.0.1:10001/test/json/utf8' ]</msg>
<msg timestamp="20160901 16:21:54.716" level="TRACE">Return: '/test/json/utf8'</msg>
<msg timestamp="20160901 16:21:54.716" level="INFO">${uri} = /test/json/utf8</msg>
<status status="PASS" endtime="20160901 16:21:54.717" starttime="20160901 16:21:54.716"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.717" level="TRACE">Arguments: [ ${host}='127.0.0.1:10001' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.718" level="TRACE">Arguments: [ '127.0.0.1:10001' | 'http' ]</msg>
<msg timestamp="20160901 16:21:54.718" level="INFO">Host for next HTTP request set to '127.0.0.1:10001'</msg>
<msg timestamp="20160901 16:21:54.718" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:54.718" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.718" starttime="20160901 16:21:54.717"></status>
</kw>
<msg timestamp="20160901 16:21:54.719" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.719" starttime="20160901 16:21:54.717"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:54.719" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22345'} ]</msg>
<msg timestamp="20160901 16:21:54.719" level="TRACE">Return: {'customheader1': '12345', 'customheader2': '22345'}</msg>
<msg timestamp="20160901 16:21:54.720" level="INFO">${customs_headers_dict} = {u'customheader2': u'22345', u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:54.720" starttime="20160901 16:21:54.719"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:54.720" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22345'} ]</msg>
<msg timestamp="20160901 16:21:54.720" level="TRACE">Return: ['customheader1', 'customheader2']</msg>
<msg timestamp="20160901 16:21:54.721" level="INFO">@{key_list} = [ customheader1 | customheader2 ]</msg>
<status status="PASS" endtime="20160901 16:21:54.721" starttime="20160901 16:21:54.720"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:54.721" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:54.722" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:54.722" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:54.722" starttime="20160901 16:21:54.721"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.722" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.723" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:54.723" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:54.723" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.724" starttime="20160901 16:21:54.723"></status>
</kw>
<msg timestamp="20160901 16:21:54.724" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.724" starttime="20160901 16:21:54.722"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.724" starttime="20160901 16:21:54.721"></status>
</kw>
<kw type="foritem" name="${key} = customheader2">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:54.725" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22345'} | 'customheader2' ]</msg>
<msg timestamp="20160901 16:21:54.725" level="TRACE">Return: '22345'</msg>
<msg timestamp="20160901 16:21:54.725" level="INFO">${value} = 22345</msg>
<status status="PASS" endtime="20160901 16:21:54.725" starttime="20160901 16:21:54.724"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.726" level="TRACE">Arguments: [ ${header_name}='customheader2' | ${header_value}='22345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.726" level="TRACE">Arguments: [ 'customheader2' | '22345' ]</msg>
<msg timestamp="20160901 16:21:54.726" level="INFO">Set request header "customheader2" to "22345"</msg>
<msg timestamp="20160901 16:21:54.726" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.727" starttime="20160901 16:21:54.726"></status>
</kw>
<msg timestamp="20160901 16:21:54.727" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.727" starttime="20160901 16:21:54.725"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.727" starttime="20160901 16:21:54.724"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.727" starttime="20160901 16:21:54.721"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.728" level="TRACE">Arguments: [ ${body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='utf-8' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.728" level="TRACE">Arguments: [ 'utf-8' ]</msg>
<msg timestamp="20160901 16:21:54.728" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:54.728" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:54.729" level="INFO">&lt;HttpLibrary.HTTP instance at 0x04545648&gt;</msg>
<msg timestamp="20160901 16:21:54.729" level="INFO">utf-8</msg>
<msg timestamp="20160901 16:21:54.729" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.729" starttime="20160901 16:21:54.728"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.729" level="TRACE">Arguments: [ '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' ]</msg>
<msg timestamp="20160901 16:21:54.730" level="INFO">Request body set to "{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}".</msg>
<msg timestamp="20160901 16:21:54.730" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.730" starttime="20160901 16:21:54.729"></status>
</kw>
<msg timestamp="20160901 16:21:54.730" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.730" starttime="20160901 16:21:54.727"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.730" level="TRACE">Arguments: [ ${url}='/test/json/utf8' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.731" level="TRACE">Arguments: [ '/test/json/utf8' ]</msg>
<msg timestamp="20160901 16:21:54.731" level="DEBUG">Performing POST request on http://127.0.0.1:10001/test/json/utf8</msg>
<msg timestamp="20160901 16:21:54.731" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:54.731" level="DEBUG">Host: 127.0.0.1:10001</msg>
<msg timestamp="20160901 16:21:54.731" level="DEBUG">customheader2: 22345</msg>
<msg timestamp="20160901 16:21:54.732" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:54.732" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:54.732" level="DEBUG">{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}</msg>
<msg timestamp="20160901 16:21:54.884" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:54.884" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:54.884" level="DEBUG">date: Thu, 01 Sep 2016 08:21:54 GMT</msg>
<msg timestamp="20160901 16:21:54.884" level="DEBUG">content-length: 263</msg>
<msg timestamp="20160901 16:21:54.884" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:54.884" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:54.884" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:54.885" level="DEBUG"> {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}</msg>
<msg timestamp="20160901 16:21:54.885" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.885" starttime="20160901 16:21:54.731"></status>
</kw>
<msg timestamp="20160901 16:21:54.885" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.885" starttime="20160901 16:21:54.730"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:54.886" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:54.887" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:54.887" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:54.887" level="INFO">${Response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<status status="PASS" endtime="20160901 16:21:54.887" starttime="20160901 16:21:54.886"></status>
</kw>
<msg timestamp="20160901 16:21:54.887" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:54.888" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<status status="PASS" endtime="20160901 16:21:54.888" starttime="20160901 16:21:54.885"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.888" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:54.889" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<msg timestamp="20160901 16:21:54.889" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.889" starttime="20160901 16:21:54.888"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.890" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:54.890" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'customheader2': u'22345'}</msg>
<msg timestamp="20160901 16:21:54.890" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.890" starttime="20160901 16:21:54.889"></status>
</kw>
<msg timestamp="20160901 16:21:54.890" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<status status="PASS" endtime="20160901 16:21:54.890" starttime="20160901 16:21:54.713"></status>
</kw>
<kw name="获取response_body编码" library="NNN接口">
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:54.891" level="TRACE">Arguments: [  ]</msg>
<kw name="Detect Encoding" library="detectEncoding">
<doc>获取test变量resposne_body字符串的encoding，转为大写返回，例如UTF-8</doc>
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:54.892" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:54.928" level="TRACE">Return: b'UTF-8'</msg>
<msg timestamp="20160901 16:21:54.929" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20160901 16:21:54.929" starttime="20160901 16:21:54.892"></status>
</kw>
<msg timestamp="20160901 16:21:54.929" level="TRACE">Return: b'UTF-8'</msg>
<msg timestamp="20160901 16:21:54.929" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20160901 16:21:54.929" starttime="20160901 16:21:54.891"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20160901 16:21:54.930" level="TRACE">Arguments: [ b'UTF-8' | 'UTF-8' ]</msg>
<msg timestamp="20160901 16:21:54.931" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:54.931" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.931" starttime="20160901 16:21:54.930"></status>
</kw>
<doc>编码的配置，在Mock端是在system.xml的http server节点的encoding进行设置的</doc>
<status status="PASS" endtime="20160901 16:21:54.932" critical="yes" starttime="20160901 16:21:54.684"></status>
</test>
<test id="s1-s1-s3-t2" name="服务端未设置编码_兼容utf8">
<kw name="模拟器调用_test_json_default_utf8接口" library="NNN接口">
<arguments>
<arg>13500000000</arg>
<arg>中文姓名</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:54.942" level="TRACE">Arguments: [ ${MobNum}='13500000000' | ${UserID}='中文姓名' | ${BusiCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"MobNum":"${MobNum}","UserID":"${UserID}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:54.943" level="TRACE">Arguments: [ '{"MobNum":"13500000000","UserID":"中文姓名"}' ]</msg>
<msg timestamp="20160901 16:21:54.943" level="TRACE">Return: '{"MobNum":"13500000000","UserID":"中文姓名"}'</msg>
<msg timestamp="20160901 16:21:54.943" level="INFO">${request} = {"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<status status="PASS" endtime="20160901 16:21:54.943" starttime="20160901 16:21:54.942"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"BusiCode":"${BusiCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:54.944" level="TRACE">Arguments: [ '{"BusiCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:54.944" level="TRACE">Return: '{"BusiCode":"0"}'</msg>
<msg timestamp="20160901 16:21:54.944" level="INFO">${response} = {"BusiCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:54.944" starttime="20160901 16:21:54.943"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/json/default_utf8</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:54.945" level="TRACE">Arguments: [ ${msgType}='/test/json/default_utf8' | ${timeOut}='3' | ${request}='{"MobNum":"13500000000","UserID":"中文姓名"}' | ${response}='{"BusiCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:54.946" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/json/default_utf8' | '{"MobNum":"13500000000","UserID":"中文姓名"}' | '{"BusiCode":"0"}' | '0' | b'' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:54.947" level="INFO">{"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<msg timestamp="20160901 16:21:54.947" level="INFO">{"BusiCode":"0"}</msg>
<msg timestamp="20160901 16:21:54.947" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:54.947" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;Us...</msg>
<status status="PASS" endtime="20160901 16:21:54.947" starttime="20160901 16:21:54.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.948" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:54.948" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:54.948" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.948" starttime="20160901 16:21:54.947"></status>
</kw>
<msg timestamp="20160901 16:21:54.948" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:54.949" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;Us...</msg>
<status status="PASS" endtime="20160901 16:21:54.949" starttime="20160901 16:21:54.944"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:54.950" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:54.950" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:54.950" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:54.951" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:54.951" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:54.951" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:54.956" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/json/default_utf8
validTime is:3
startTime is:1472718114.95
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d
response parameter  total of 1
    BusiCode:0
</msg>
<msg timestamp="20160901 16:21:54.956" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/json/default_utf8\nvalidTime is:3\nstartTime is:1472718114.95\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n'</msg>
<msg timestamp="20160901 16:21:54.957" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/json/default_utf8
validTime is:3
startTime is:1472718114.95
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    ...</msg>
<status status="PASS" endtime="20160901 16:21:54.957" starttime="20160901 16:21:54.950"></status>
</kw>
<msg timestamp="20160901 16:21:54.957" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/json/default_utf8\nvalidTime is:3\nstartTime is:1472718114.95\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n'</msg>
<msg timestamp="20160901 16:21:54.957" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/json/default_utf8
validTime is:3
startTime is:1472718114.95
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    ...</msg>
<status status="PASS" endtime="20160901 16:21:54.958" starttime="20160901 16:21:54.949"></status>
</kw>
<msg timestamp="20160901 16:21:54.958" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/json/default_utf8
validTime is:3
startTime is:1472718114.95
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:ä¸­æå§å
response parameter  total of 1
    BusiCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:54.958" starttime="20160901 16:21:54.941"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/utf8.json</arg>
<arg>encoding=utf-8</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:54.959" level="TRACE">Arguments: [ 'Template/utf8.json' | encoding='utf-8' ]</msg>
<msg timestamp="20160901 16:21:54.960" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.json"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.json&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:54.960" level="TRACE">Return: '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}'</msg>
<msg timestamp="20160901 16:21:54.960" level="INFO">${unicode_request_body} = {
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
   ...</msg>
<status status="PASS" endtime="20160901 16:21:54.960" starttime="20160901 16:21:54.959"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:54.961" level="TRACE">Arguments: [ 'customheader1=12345' ]</msg>
<msg timestamp="20160901 16:21:54.962" level="TRACE">Return: {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:54.962" level="INFO">${custom_headers} = {u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:54.962" starttime="20160901 16:21:54.961"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:10002/test/json/default_utf8</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=utf-8</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.966" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:10002/test/json/default_utf8' | ${request_body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='utf-8' | ${custom_headers}={'customheader1': '12345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:54.967" level="TRACE">Arguments: [ 'http://127.0.0.1:10002/test/json/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:54.967" level="TRACE">Return: '127.0.0.1:10002'</msg>
<msg timestamp="20160901 16:21:54.967" level="INFO">${host} = 127.0.0.1:10002</msg>
<status status="PASS" endtime="20160901 16:21:54.967" starttime="20160901 16:21:54.967"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:54.968" level="TRACE">Arguments: [ 'http://127.0.0.1:10002/test/json/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:54.968" level="TRACE">Return: '/test/json/default_utf8'</msg>
<msg timestamp="20160901 16:21:54.968" level="INFO">${uri} = /test/json/default_utf8</msg>
<status status="PASS" endtime="20160901 16:21:54.968" starttime="20160901 16:21:54.968"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.969" level="TRACE">Arguments: [ ${host}='127.0.0.1:10002' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.969" level="TRACE">Arguments: [ '127.0.0.1:10002' | 'http' ]</msg>
<msg timestamp="20160901 16:21:54.970" level="INFO">Host for next HTTP request set to '127.0.0.1:10002'</msg>
<msg timestamp="20160901 16:21:54.970" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:54.970" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.970" starttime="20160901 16:21:54.969"></status>
</kw>
<msg timestamp="20160901 16:21:54.970" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.970" starttime="20160901 16:21:54.968"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:54.971" level="TRACE">Arguments: [ {'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:54.971" level="TRACE">Return: {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:54.971" level="INFO">${customs_headers_dict} = {u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:54.971" starttime="20160901 16:21:54.970"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:54.972" level="TRACE">Arguments: [ {'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:54.972" level="TRACE">Return: ['customheader1']</msg>
<msg timestamp="20160901 16:21:54.972" level="INFO">@{key_list} = [ customheader1 ]</msg>
<status status="PASS" endtime="20160901 16:21:54.972" starttime="20160901 16:21:54.971"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:54.973" level="TRACE">Arguments: [ {'customheader1': '12345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:54.973" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:54.973" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:54.973" starttime="20160901 16:21:54.973"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.974" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.975" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:54.975" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:54.975" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.975" starttime="20160901 16:21:54.974"></status>
</kw>
<msg timestamp="20160901 16:21:54.975" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.975" starttime="20160901 16:21:54.973"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.975" starttime="20160901 16:21:54.972"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:54.975" starttime="20160901 16:21:54.972"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.976" level="TRACE">Arguments: [ ${body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='utf-8' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.977" level="TRACE">Arguments: [ 'utf-8' ]</msg>
<msg timestamp="20160901 16:21:54.977" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:54.977" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:54.977" level="INFO">&lt;HttpLibrary.HTTP instance at 0x04545648&gt;</msg>
<msg timestamp="20160901 16:21:54.977" level="INFO">utf-8</msg>
<msg timestamp="20160901 16:21:54.977" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.977" starttime="20160901 16:21:54.976"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.978" level="TRACE">Arguments: [ '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' ]</msg>
<msg timestamp="20160901 16:21:54.978" level="INFO">Request body set to "{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}".</msg>
<msg timestamp="20160901 16:21:54.978" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.978" starttime="20160901 16:21:54.978"></status>
</kw>
<msg timestamp="20160901 16:21:54.978" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:54.979" starttime="20160901 16:21:54.976"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.979" level="TRACE">Arguments: [ ${url}='/test/json/default_utf8' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:54.980" level="TRACE">Arguments: [ '/test/json/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:54.980" level="DEBUG">Performing POST request on http://127.0.0.1:10002/test/json/default_utf8</msg>
<msg timestamp="20160901 16:21:54.980" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:54.980" level="DEBUG">Host: 127.0.0.1:10002</msg>
<msg timestamp="20160901 16:21:54.980" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:54.980" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:54.980" level="DEBUG">{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}</msg>
<msg timestamp="20160901 16:21:55.131" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:55.131" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:55.131" level="DEBUG">date: Thu, 01 Sep 2016 08:21:54 GMT</msg>
<msg timestamp="20160901 16:21:55.131" level="DEBUG">content-length: 263</msg>
<msg timestamp="20160901 16:21:55.131" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:55.132" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:55.132" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:55.132" level="DEBUG"> {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}</msg>
<msg timestamp="20160901 16:21:55.132" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.132" starttime="20160901 16:21:54.979"></status>
</kw>
<msg timestamp="20160901 16:21:55.132" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.132" starttime="20160901 16:21:54.979"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:55.133" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:55.133" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:55.134" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:55.134" level="INFO">${Response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<status status="PASS" endtime="20160901 16:21:55.134" starttime="20160901 16:21:55.133"></status>
</kw>
<msg timestamp="20160901 16:21:55.134" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:55.134" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<status status="PASS" endtime="20160901 16:21:55.134" starttime="20160901 16:21:55.133"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.135" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:55.136" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": ...</msg>
<msg timestamp="20160901 16:21:55.136" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.136" starttime="20160901 16:21:55.135"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.137" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:55.137" level="INFO">${custom_headers} = {u'customheader1': u'12345'}</msg>
<msg timestamp="20160901 16:21:55.137" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.137" starttime="20160901 16:21:55.136"></status>
</kw>
<msg timestamp="20160901 16:21:55.137" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xe4\xb8\xad\xe6\x96\x87", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<status status="PASS" endtime="20160901 16:21:55.137" starttime="20160901 16:21:54.965"></status>
</kw>
<kw name="获取response_body编码" library="NNN接口">
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:55.138" level="TRACE">Arguments: [  ]</msg>
<kw name="Detect Encoding" library="detectEncoding">
<doc>获取test变量resposne_body字符串的encoding，转为大写返回，例如UTF-8</doc>
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:55.139" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:55.148" level="TRACE">Return: b'UTF-8'</msg>
<msg timestamp="20160901 16:21:55.148" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20160901 16:21:55.148" starttime="20160901 16:21:55.139"></status>
</kw>
<msg timestamp="20160901 16:21:55.149" level="TRACE">Return: b'UTF-8'</msg>
<msg timestamp="20160901 16:21:55.149" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20160901 16:21:55.149" starttime="20160901 16:21:55.138"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20160901 16:21:55.150" level="TRACE">Arguments: [ b'UTF-8' | 'UTF-8' ]</msg>
<msg timestamp="20160901 16:21:55.150" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:55.150" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.151" starttime="20160901 16:21:55.150"></status>
</kw>
<doc>Mock的system.xml中，http server如果不配置编码，则缺省按utf-8处理。这样可以兼容以前的Mock V1</doc>
<status status="PASS" endtime="20160901 16:21:55.151" critical="yes" starttime="20160901 16:21:54.934"></status>
</test>
<test id="s1-s1-s3-t3" name="服务端设置编码为gbk_包头和包体编码一致">
<kw name="模拟器调用_test_json_gbk接口" library="NNN接口">
<arguments>
<arg>13500000000</arg>
<arg>中文姓名</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:55.161" level="TRACE">Arguments: [ ${MobNum}='13500000000' | ${UserID}='中文姓名' | ${BusiCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"MobNum":"${MobNum}","UserID":"${UserID}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:55.162" level="TRACE">Arguments: [ '{"MobNum":"13500000000","UserID":"中文姓名"}' ]</msg>
<msg timestamp="20160901 16:21:55.162" level="TRACE">Return: '{"MobNum":"13500000000","UserID":"中文姓名"}'</msg>
<msg timestamp="20160901 16:21:55.162" level="INFO">${request} = {"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<status status="PASS" endtime="20160901 16:21:55.162" starttime="20160901 16:21:55.161"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"BusiCode":"${BusiCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:55.163" level="TRACE">Arguments: [ '{"BusiCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:55.163" level="TRACE">Return: '{"BusiCode":"0"}'</msg>
<msg timestamp="20160901 16:21:55.163" level="INFO">${response} = {"BusiCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:55.163" starttime="20160901 16:21:55.162"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/json/gbk</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:55.164" level="TRACE">Arguments: [ ${msgType}='/test/json/gbk' | ${timeOut}='3' | ${request}='{"MobNum":"13500000000","UserID":"中文姓名"}' | ${response}='{"BusiCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:55.166" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/json/gbk' | '{"MobNum":"13500000000","UserID":"中文姓名"}' | '{"BusiCode":"0"}' | '0' | b'' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:55.166" level="INFO">{"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<msg timestamp="20160901 16:21:55.166" level="INFO">{"BusiCode":"0"}</msg>
<msg timestamp="20160901 16:21:55.166" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:55.166" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名...</msg>
<status status="PASS" endtime="20160901 16:21:55.166" starttime="20160901 16:21:55.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.167" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:55.167" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:55.167" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.167" starttime="20160901 16:21:55.167"></status>
</kw>
<msg timestamp="20160901 16:21:55.168" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:55.168" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名...</msg>
<status status="PASS" endtime="20160901 16:21:55.168" starttime="20160901 16:21:55.163"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:55.168" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:55.169" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:55.169" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:55.169" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:55.170" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:55.170" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:55.175" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/json/gbk
validTime is:3
startTime is:1472718115.17
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d
response parameter  total of 1
    BusiCode:0
</msg>
<msg timestamp="20160901 16:21:55.176" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/json/gbk\nvalidTime is:3\nstartTime is:1472718115.17\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n'</msg>
<msg timestamp="20160901 16:21:55.176" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/json/gbk
validTime is:3
startTime is:1472718115.17
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13...</msg>
<status status="PASS" endtime="20160901 16:21:55.176" starttime="20160901 16:21:55.169"></status>
</kw>
<msg timestamp="20160901 16:21:55.176" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/json/gbk\nvalidTime is:3\nstartTime is:1472718115.17\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n'</msg>
<msg timestamp="20160901 16:21:55.177" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/json/gbk
validTime is:3
startTime is:1472718115.17
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13...</msg>
<status status="PASS" endtime="20160901 16:21:55.177" starttime="20160901 16:21:55.168"></status>
</kw>
<msg timestamp="20160901 16:21:55.177" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/json/gbk
validTime is:3
startTime is:1472718115.17
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:ä¸­æå§å
response parameter  total of 1
    BusiCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:55.177" starttime="20160901 16:21:55.160"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/gbk.json</arg>
<arg>encoding=GBK</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:55.178" level="TRACE">Arguments: [ 'Template/gbk.json' | encoding='GBK' ]</msg>
<msg timestamp="20160901 16:21:55.179" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\gbk.json"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\gbk.json&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:55.179" level="TRACE">Return: '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}'</msg>
<msg timestamp="20160901 16:21:55.180" level="INFO">${unicode_request_body} = {
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
   ...</msg>
<status status="PASS" endtime="20160901 16:21:55.180" starttime="20160901 16:21:55.178"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
<arg>Content-Type=json/text;charset=gbk</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:55.180" level="TRACE">Arguments: [ 'customheader1=12345' | 'Content-Type=json/text;charset=gbk' ]</msg>
<msg timestamp="20160901 16:21:55.181" level="TRACE">Return: {'Content-Type': 'json/text;charset=gbk', 'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:55.181" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'Content-Type': u'json/text;charset=gbk'}</msg>
<status status="PASS" endtime="20160901 16:21:55.182" starttime="20160901 16:21:55.180"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:10003/test/json/gbk</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=gbk</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.186" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:10003/test/json/gbk' | ${request_body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='gbk' | ${custom_headers}={'Content-Type': 'json/text;charset=gbk', 'customheader1': '12345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:55.187" level="TRACE">Arguments: [ 'http://127.0.0.1:10003/test/json/gbk' ]</msg>
<msg timestamp="20160901 16:21:55.189" level="TRACE">Return: '127.0.0.1:10003'</msg>
<msg timestamp="20160901 16:21:55.189" level="INFO">${host} = 127.0.0.1:10003</msg>
<status status="PASS" endtime="20160901 16:21:55.189" starttime="20160901 16:21:55.187"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:55.190" level="TRACE">Arguments: [ 'http://127.0.0.1:10003/test/json/gbk' ]</msg>
<msg timestamp="20160901 16:21:55.190" level="TRACE">Return: '/test/json/gbk'</msg>
<msg timestamp="20160901 16:21:55.190" level="INFO">${uri} = /test/json/gbk</msg>
<status status="PASS" endtime="20160901 16:21:55.190" starttime="20160901 16:21:55.190"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.191" level="TRACE">Arguments: [ ${host}='127.0.0.1:10003' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.191" level="TRACE">Arguments: [ '127.0.0.1:10003' | 'http' ]</msg>
<msg timestamp="20160901 16:21:55.192" level="INFO">Host for next HTTP request set to '127.0.0.1:10003'</msg>
<msg timestamp="20160901 16:21:55.192" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:55.192" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.192" starttime="20160901 16:21:55.191"></status>
</kw>
<msg timestamp="20160901 16:21:55.192" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.192" starttime="20160901 16:21:55.190"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:55.193" level="TRACE">Arguments: [ {'Content-Type': 'json/text;charset=gbk', 'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:55.193" level="TRACE">Return: {'Content-Type': 'json/text;charset=gbk', 'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:55.193" level="INFO">${customs_headers_dict} = {u'Content-Type': u'json/text;charset=gbk', u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:55.193" starttime="20160901 16:21:55.192"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:55.194" level="TRACE">Arguments: [ {'Content-Type': 'json/text;charset=gbk', 'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:55.194" level="TRACE">Return: ['Content-Type', 'customheader1']</msg>
<msg timestamp="20160901 16:21:55.194" level="INFO">@{key_list} = [ Content-Type | customheader1 ]</msg>
<status status="PASS" endtime="20160901 16:21:55.194" starttime="20160901 16:21:55.193"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = Content-Type">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:55.195" level="TRACE">Arguments: [ {'Content-Type': 'json/text;charset=gbk', 'customheader1': '12345'} | 'Content-Type' ]</msg>
<msg timestamp="20160901 16:21:55.195" level="TRACE">Return: 'json/text;charset=gbk'</msg>
<msg timestamp="20160901 16:21:55.195" level="INFO">${value} = json/text;charset=gbk</msg>
<status status="PASS" endtime="20160901 16:21:55.195" starttime="20160901 16:21:55.195"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.196" level="TRACE">Arguments: [ ${header_name}='Content-Type' | ${header_value}='json/text;charset=gbk' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.197" level="TRACE">Arguments: [ 'Content-Type' | 'json/text;charset=gbk' ]</msg>
<msg timestamp="20160901 16:21:55.197" level="INFO">Set request header "Content-Type" to "json/text;charset=gbk"</msg>
<msg timestamp="20160901 16:21:55.197" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.197" starttime="20160901 16:21:55.196"></status>
</kw>
<msg timestamp="20160901 16:21:55.197" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.197" starttime="20160901 16:21:55.196"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:55.197" starttime="20160901 16:21:55.194"></status>
</kw>
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:55.198" level="TRACE">Arguments: [ {'Content-Type': 'json/text;charset=gbk', 'customheader1': '12345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:55.198" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:55.198" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:55.199" starttime="20160901 16:21:55.198"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.199" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.200" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:55.200" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:55.200" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.200" starttime="20160901 16:21:55.199"></status>
</kw>
<msg timestamp="20160901 16:21:55.200" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.201" starttime="20160901 16:21:55.199"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:55.201" starttime="20160901 16:21:55.197"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:55.201" starttime="20160901 16:21:55.194"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.201" level="TRACE">Arguments: [ ${body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='gbk' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.202" level="TRACE">Arguments: [ 'gbk' ]</msg>
<msg timestamp="20160901 16:21:55.202" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:55.202" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:55.202" level="INFO">&lt;HttpLibrary.HTTP instance at 0x04545648&gt;</msg>
<msg timestamp="20160901 16:21:55.202" level="INFO">gbk</msg>
<msg timestamp="20160901 16:21:55.203" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.203" starttime="20160901 16:21:55.202"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.203" level="TRACE">Arguments: [ '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' ]</msg>
<msg timestamp="20160901 16:21:55.203" level="INFO">Request body set to "{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}".</msg>
<msg timestamp="20160901 16:21:55.203" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.203" starttime="20160901 16:21:55.203"></status>
</kw>
<msg timestamp="20160901 16:21:55.204" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.204" starttime="20160901 16:21:55.201"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.204" level="TRACE">Arguments: [ ${url}='/test/json/gbk' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.205" level="TRACE">Arguments: [ '/test/json/gbk' ]</msg>
<msg timestamp="20160901 16:21:55.205" level="DEBUG">Performing POST request on http://127.0.0.1:10003/test/json/gbk</msg>
<msg timestamp="20160901 16:21:55.205" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:55.205" level="DEBUG">Host: 127.0.0.1:10003</msg>
<msg timestamp="20160901 16:21:55.205" level="DEBUG">Content-Type: json/text;charset=gbk</msg>
<msg timestamp="20160901 16:21:55.205" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:55.205" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:55.205" level="DEBUG">{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}</msg>
<msg timestamp="20160901 16:21:55.385" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:55.385" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:55.385" level="DEBUG">date: Thu, 01 Sep 2016 08:21:55 GMT</msg>
<msg timestamp="20160901 16:21:55.385" level="DEBUG">content-length: 261</msg>
<msg timestamp="20160901 16:21:55.385" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:55.385" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:55.385" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:55.385" level="DEBUG"> {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "中文", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}</msg>
<msg timestamp="20160901 16:21:55.385" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.386" starttime="20160901 16:21:55.205"></status>
</kw>
<msg timestamp="20160901 16:21:55.386" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.386" starttime="20160901 16:21:55.204"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:55.386" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:55.387" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:55.387" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xd6\xd0\xce\xc4", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:55.387" level="INFO">${Response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "中文", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "...</msg>
<status status="PASS" endtime="20160901 16:21:55.387" starttime="20160901 16:21:55.387"></status>
</kw>
<msg timestamp="20160901 16:21:55.387" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xd6\xd0\xce\xc4", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:55.388" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "中文", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "...</msg>
<status status="PASS" endtime="20160901 16:21:55.388" starttime="20160901 16:21:55.386"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.388" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:55.388" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "中文", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "...</msg>
<msg timestamp="20160901 16:21:55.389" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.389" starttime="20160901 16:21:55.388"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.389" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:55.389" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'Content-Type': u'json/text;charset=gbk'}</msg>
<msg timestamp="20160901 16:21:55.390" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.390" starttime="20160901 16:21:55.389"></status>
</kw>
<msg timestamp="20160901 16:21:55.390" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xd6\xd0\xce\xc4", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<status status="PASS" endtime="20160901 16:21:55.390" starttime="20160901 16:21:55.186"></status>
</kw>
<kw name="获取response_body编码" library="NNN接口">
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:55.391" level="TRACE">Arguments: [  ]</msg>
<kw name="Detect Encoding" library="detectEncoding">
<doc>获取test变量resposne_body字符串的encoding，转为大写返回，例如UTF-8</doc>
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:55.391" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:55.407" level="TRACE">Return: b'GB2312'</msg>
<msg timestamp="20160901 16:21:55.407" level="INFO">${encoding} = GB2312</msg>
<status status="PASS" endtime="20160901 16:21:55.407" starttime="20160901 16:21:55.391"></status>
</kw>
<msg timestamp="20160901 16:21:55.407" level="TRACE">Return: b'GB2312'</msg>
<msg timestamp="20160901 16:21:55.407" level="INFO">${encoding} = GB2312</msg>
<status status="PASS" endtime="20160901 16:21:55.407" starttime="20160901 16:21:55.391"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${encoding}</arg>
<arg>GB2312</arg>
</arguments>
<msg timestamp="20160901 16:21:55.409" level="TRACE">Arguments: [ b'GB2312' | 'GB2312' ]</msg>
<msg timestamp="20160901 16:21:55.409" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:55.409" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.409" starttime="20160901 16:21:55.408"></status>
</kw>
<doc>目前Mock不对http包头判断，只判断包体的encoding</doc>
<status status="PASS" endtime="20160901 16:21:55.410" critical="yes" starttime="20160901 16:21:55.154"></status>
</test>
<test id="s1-s1-s3-t4" name="服务端设置编码为gbk_未指定包头编码">
<kw name="模拟器调用_test_json_gbk接口" library="NNN接口">
<arguments>
<arg>13500000000</arg>
<arg>中文姓名</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:55.422" level="TRACE">Arguments: [ ${MobNum}='13500000000' | ${UserID}='中文姓名' | ${BusiCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"MobNum":"${MobNum}","UserID":"${UserID}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:55.423" level="TRACE">Arguments: [ '{"MobNum":"13500000000","UserID":"中文姓名"}' ]</msg>
<msg timestamp="20160901 16:21:55.423" level="TRACE">Return: '{"MobNum":"13500000000","UserID":"中文姓名"}'</msg>
<msg timestamp="20160901 16:21:55.423" level="INFO">${request} = {"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<status status="PASS" endtime="20160901 16:21:55.423" starttime="20160901 16:21:55.422"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"BusiCode":"${BusiCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:55.424" level="TRACE">Arguments: [ '{"BusiCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:55.424" level="TRACE">Return: '{"BusiCode":"0"}'</msg>
<msg timestamp="20160901 16:21:55.424" level="INFO">${response} = {"BusiCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:55.424" starttime="20160901 16:21:55.423"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/json/gbk</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:55.425" level="TRACE">Arguments: [ ${msgType}='/test/json/gbk' | ${timeOut}='3' | ${request}='{"MobNum":"13500000000","UserID":"中文姓名"}' | ${response}='{"BusiCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:55.426" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/json/gbk' | '{"MobNum":"13500000000","UserID":"中文姓名"}' | '{"BusiCode":"0"}' | '0' | b'' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:55.426" level="INFO">{"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<msg timestamp="20160901 16:21:55.427" level="INFO">{"BusiCode":"0"}</msg>
<msg timestamp="20160901 16:21:55.427" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:55.427" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名...</msg>
<status status="PASS" endtime="20160901 16:21:55.427" starttime="20160901 16:21:55.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.428" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:55.428" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:55.428" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.428" starttime="20160901 16:21:55.427"></status>
</kw>
<msg timestamp="20160901 16:21:55.428" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:55.428" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名...</msg>
<status status="PASS" endtime="20160901 16:21:55.428" starttime="20160901 16:21:55.424"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:55.429" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:55.430" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:55.430" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:55.430" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:55.430" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:55.430" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:55.436" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/json/gbk
validTime is:3
startTime is:1472718115.43
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d
response parameter  total of 1
    BusiCode:0
</msg>
<msg timestamp="20160901 16:21:55.437" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/json/gbk\nvalidTime is:3\nstartTime is:1472718115.43\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n'</msg>
<msg timestamp="20160901 16:21:55.437" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/json/gbk
validTime is:3
startTime is:1472718115.43
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13...</msg>
<status status="PASS" endtime="20160901 16:21:55.437" starttime="20160901 16:21:55.429"></status>
</kw>
<msg timestamp="20160901 16:21:55.438" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/json/gbk\nvalidTime is:3\nstartTime is:1472718115.43\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n'</msg>
<msg timestamp="20160901 16:21:55.438" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/json/gbk
validTime is:3
startTime is:1472718115.43
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13...</msg>
<status status="PASS" endtime="20160901 16:21:55.438" starttime="20160901 16:21:55.429"></status>
</kw>
<msg timestamp="20160901 16:21:55.438" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/json/gbk
validTime is:3
startTime is:1472718115.43
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:ä¸­æå§å
response parameter  total of 1
    BusiCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:55.439" starttime="20160901 16:21:55.421"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/gbk.json</arg>
<arg>encoding=GBK</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:55.443" level="TRACE">Arguments: [ 'Template/gbk.json' | encoding='GBK' ]</msg>
<msg timestamp="20160901 16:21:55.443" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\gbk.json"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\gbk.json&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:55.443" level="TRACE">Return: '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}'</msg>
<msg timestamp="20160901 16:21:55.444" level="INFO">${unicode_request_body} = {
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
   ...</msg>
<status status="PASS" endtime="20160901 16:21:55.444" starttime="20160901 16:21:55.442"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
<arg>Content-Type=json/text</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:55.445" level="TRACE">Arguments: [ 'customheader1=12345' | 'Content-Type=json/text' ]</msg>
<msg timestamp="20160901 16:21:55.445" level="TRACE">Return: {'Content-Type': 'json/text', 'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:55.445" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'Content-Type': u'json/text'}</msg>
<status status="PASS" endtime="20160901 16:21:55.446" starttime="20160901 16:21:55.445"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:10003/test/json/gbk</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=gbk</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.450" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:10003/test/json/gbk' | ${request_body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='gbk' | ${custom_headers}={'Content-Type': 'json/text', 'customheader1': '12345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:55.451" level="TRACE">Arguments: [ 'http://127.0.0.1:10003/test/json/gbk' ]</msg>
<msg timestamp="20160901 16:21:55.451" level="TRACE">Return: '127.0.0.1:10003'</msg>
<msg timestamp="20160901 16:21:55.451" level="INFO">${host} = 127.0.0.1:10003</msg>
<status status="PASS" endtime="20160901 16:21:55.451" starttime="20160901 16:21:55.450"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:55.452" level="TRACE">Arguments: [ 'http://127.0.0.1:10003/test/json/gbk' ]</msg>
<msg timestamp="20160901 16:21:55.452" level="TRACE">Return: '/test/json/gbk'</msg>
<msg timestamp="20160901 16:21:55.452" level="INFO">${uri} = /test/json/gbk</msg>
<status status="PASS" endtime="20160901 16:21:55.452" starttime="20160901 16:21:55.451"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.452" level="TRACE">Arguments: [ ${host}='127.0.0.1:10003' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.453" level="TRACE">Arguments: [ '127.0.0.1:10003' | 'http' ]</msg>
<msg timestamp="20160901 16:21:55.453" level="INFO">Host for next HTTP request set to '127.0.0.1:10003'</msg>
<msg timestamp="20160901 16:21:55.453" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:55.453" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.454" starttime="20160901 16:21:55.453"></status>
</kw>
<msg timestamp="20160901 16:21:55.454" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.454" starttime="20160901 16:21:55.452"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:55.454" level="TRACE">Arguments: [ {'Content-Type': 'json/text', 'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:55.455" level="TRACE">Return: {'Content-Type': 'json/text', 'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:55.455" level="INFO">${customs_headers_dict} = {u'Content-Type': u'json/text', u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:55.455" starttime="20160901 16:21:55.454"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:55.455" level="TRACE">Arguments: [ {'Content-Type': 'json/text', 'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:55.456" level="TRACE">Return: ['Content-Type', 'customheader1']</msg>
<msg timestamp="20160901 16:21:55.456" level="INFO">@{key_list} = [ Content-Type | customheader1 ]</msg>
<status status="PASS" endtime="20160901 16:21:55.456" starttime="20160901 16:21:55.455"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = Content-Type">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:55.457" level="TRACE">Arguments: [ {'Content-Type': 'json/text', 'customheader1': '12345'} | 'Content-Type' ]</msg>
<msg timestamp="20160901 16:21:55.457" level="TRACE">Return: 'json/text'</msg>
<msg timestamp="20160901 16:21:55.457" level="INFO">${value} = json/text</msg>
<status status="PASS" endtime="20160901 16:21:55.457" starttime="20160901 16:21:55.456"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.458" level="TRACE">Arguments: [ ${header_name}='Content-Type' | ${header_value}='json/text' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.458" level="TRACE">Arguments: [ 'Content-Type' | 'json/text' ]</msg>
<msg timestamp="20160901 16:21:55.458" level="INFO">Set request header "Content-Type" to "json/text"</msg>
<msg timestamp="20160901 16:21:55.459" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.459" starttime="20160901 16:21:55.458"></status>
</kw>
<msg timestamp="20160901 16:21:55.459" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.459" starttime="20160901 16:21:55.457"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:55.459" starttime="20160901 16:21:55.456"></status>
</kw>
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:55.460" level="TRACE">Arguments: [ {'Content-Type': 'json/text', 'customheader1': '12345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:55.460" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:55.460" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:55.460" starttime="20160901 16:21:55.459"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.461" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.462" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:55.462" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:55.462" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.462" starttime="20160901 16:21:55.461"></status>
</kw>
<msg timestamp="20160901 16:21:55.462" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.462" starttime="20160901 16:21:55.460"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:55.463" starttime="20160901 16:21:55.459"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:55.463" starttime="20160901 16:21:55.456"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.463" level="TRACE">Arguments: [ ${body}='{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='gbk' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.464" level="TRACE">Arguments: [ 'gbk' ]</msg>
<msg timestamp="20160901 16:21:55.464" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:55.464" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:55.464" level="INFO">&lt;HttpLibrary.HTTP instance at 0x04545648&gt;</msg>
<msg timestamp="20160901 16:21:55.464" level="INFO">gbk</msg>
<msg timestamp="20160901 16:21:55.464" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.464" starttime="20160901 16:21:55.464"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.465" level="TRACE">Arguments: [ '{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' ]</msg>
<msg timestamp="20160901 16:21:55.465" level="INFO">Request body set to "{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}".</msg>
<msg timestamp="20160901 16:21:55.465" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.465" starttime="20160901 16:21:55.465"></status>
</kw>
<msg timestamp="20160901 16:21:55.465" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.466" starttime="20160901 16:21:55.463"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.466" level="TRACE">Arguments: [ ${url}='/test/json/gbk' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.467" level="TRACE">Arguments: [ '/test/json/gbk' ]</msg>
<msg timestamp="20160901 16:21:55.467" level="DEBUG">Performing POST request on http://127.0.0.1:10003/test/json/gbk</msg>
<msg timestamp="20160901 16:21:55.467" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:55.467" level="DEBUG">Host: 127.0.0.1:10003</msg>
<msg timestamp="20160901 16:21:55.467" level="DEBUG">Content-Type: json/text</msg>
<msg timestamp="20160901 16:21:55.467" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:55.467" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:55.467" level="DEBUG">{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}</msg>
<msg timestamp="20160901 16:21:55.645" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:55.645" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:55.645" level="DEBUG">date: Thu, 01 Sep 2016 08:21:55 GMT</msg>
<msg timestamp="20160901 16:21:55.645" level="DEBUG">content-length: 261</msg>
<msg timestamp="20160901 16:21:55.645" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:55.645" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:55.645" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:55.646" level="DEBUG"> {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "中文", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}</msg>
<msg timestamp="20160901 16:21:55.646" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.646" starttime="20160901 16:21:55.466"></status>
</kw>
<msg timestamp="20160901 16:21:55.646" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.646" starttime="20160901 16:21:55.466"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:55.647" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:55.647" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:55.647" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xd6\xd0\xce\xc4", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:55.647" level="INFO">${Response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "中文", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "...</msg>
<status status="PASS" endtime="20160901 16:21:55.648" starttime="20160901 16:21:55.647"></status>
</kw>
<msg timestamp="20160901 16:21:55.648" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xd6\xd0\xce\xc4", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<msg timestamp="20160901 16:21:55.648" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "中文", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "...</msg>
<status status="PASS" endtime="20160901 16:21:55.648" starttime="20160901 16:21:55.646"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.649" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:55.649" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "中文", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "...</msg>
<msg timestamp="20160901 16:21:55.649" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.649" starttime="20160901 16:21:55.648"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.650" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:55.650" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'Content-Type': u'json/text'}</msg>
<msg timestamp="20160901 16:21:55.650" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.650" starttime="20160901 16:21:55.649"></status>
</kw>
<msg timestamp="20160901 16:21:55.650" level="TRACE">Return: b' {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "\xd6\xd0\xce\xc4", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}'</msg>
<status status="PASS" endtime="20160901 16:21:55.650" starttime="20160901 16:21:55.449"></status>
</kw>
<kw name="获取response_body编码" library="NNN接口">
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:55.651" level="TRACE">Arguments: [  ]</msg>
<kw name="Detect Encoding" library="detectEncoding">
<doc>获取test变量resposne_body字符串的encoding，转为大写返回，例如UTF-8</doc>
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:55.652" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:55.667" level="TRACE">Return: b'GB2312'</msg>
<msg timestamp="20160901 16:21:55.667" level="INFO">${encoding} = GB2312</msg>
<status status="PASS" endtime="20160901 16:21:55.667" starttime="20160901 16:21:55.652"></status>
</kw>
<msg timestamp="20160901 16:21:55.668" level="TRACE">Return: b'GB2312'</msg>
<msg timestamp="20160901 16:21:55.668" level="INFO">${encoding} = GB2312</msg>
<status status="PASS" endtime="20160901 16:21:55.668" starttime="20160901 16:21:55.651"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${encoding}</arg>
<arg>GB2312</arg>
</arguments>
<msg timestamp="20160901 16:21:55.669" level="TRACE">Arguments: [ b'GB2312' | 'GB2312' ]</msg>
<msg timestamp="20160901 16:21:55.669" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:55.669" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.669" starttime="20160901 16:21:55.669"></status>
</kw>
<doc>目前Mock不对http包头判断，只判断包体的encoding</doc>
<status status="PASS" endtime="20160901 16:21:55.670" critical="yes" starttime="20160901 16:21:55.414"></status>
</test>
<test id="s1-s1-s3-t5" name="服务端设置编码为UTF-16LE">
<kw name="模拟器调用_test_json_utf16le接口" library="NNN接口">
<arguments>
<arg>13500000000</arg>
<arg>中文姓名</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:55.684" level="TRACE">Arguments: [ ${MobNum}='13500000000' | ${UserID}='中文姓名' | ${BusiCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"MobNum":"${MobNum}","UserID":"${UserID}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:55.685" level="TRACE">Arguments: [ '{"MobNum":"13500000000","UserID":"中文姓名"}' ]</msg>
<msg timestamp="20160901 16:21:55.685" level="TRACE">Return: '{"MobNum":"13500000000","UserID":"中文姓名"}'</msg>
<msg timestamp="20160901 16:21:55.685" level="INFO">${request} = {"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<status status="PASS" endtime="20160901 16:21:55.685" starttime="20160901 16:21:55.684"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"BusiCode":"${BusiCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:55.685" level="TRACE">Arguments: [ '{"BusiCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:55.686" level="TRACE">Return: '{"BusiCode":"0"}'</msg>
<msg timestamp="20160901 16:21:55.686" level="INFO">${response} = {"BusiCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:55.686" starttime="20160901 16:21:55.685"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/json/unicode</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:55.687" level="TRACE">Arguments: [ ${msgType}='/test/json/unicode' | ${timeOut}='3' | ${request}='{"MobNum":"13500000000","UserID":"中文姓名"}' | ${response}='{"BusiCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:55.688" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/json/unicode' | '{"MobNum":"13500000000","UserID":"中文姓名"}' | '{"BusiCode":"0"}' | '0' | b'' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:55.688" level="INFO">{"MobNum":"13500000000","UserID":"中文姓名"}</msg>
<msg timestamp="20160901 16:21:55.689" level="INFO">{"BusiCode":"0"}</msg>
<msg timestamp="20160901 16:21:55.689" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:55.689" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;...</msg>
<status status="PASS" endtime="20160901 16:21:55.689" starttime="20160901 16:21:55.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.689" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:55.690" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:55.690" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.690" starttime="20160901 16:21:55.689"></status>
</kw>
<msg timestamp="20160901 16:21:55.690" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:55.690" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;...</msg>
<status status="PASS" endtime="20160901 16:21:55.690" starttime="20160901 16:21:55.686"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:55.691" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:55.692" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:55.692" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:55.692" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:55.692" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:55.692" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:55.698" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/json/unicode
validTime is:3
startTime is:1472718115.69
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d
response parameter  total of 1
    BusiCode:0
</msg>
<msg timestamp="20160901 16:21:55.698" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/json/unicode\nvalidTime is:3\nstartTime is:1472718115.69\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n'</msg>
<msg timestamp="20160901 16:21:55.698" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/json/unicode
validTime is:3
startTime is:1472718115.69
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNu...</msg>
<status status="PASS" endtime="20160901 16:21:55.699" starttime="20160901 16:21:55.691"></status>
</kw>
<msg timestamp="20160901 16:21:55.699" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/json/unicode\nvalidTime is:3\nstartTime is:1472718115.69\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 2\n    MobNum:13500000000\n    UserID:\xe4\xb8\xad\xe6\x96\x87\xe5\xa7\x93\xe5\x90\x8d\nresponse parameter  total of 1\n    BusiCode:0\n'</msg>
<msg timestamp="20160901 16:21:55.699" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/json/unicode
validTime is:3
startTime is:1472718115.69
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNu...</msg>
<status status="PASS" endtime="20160901 16:21:55.699" starttime="20160901 16:21:55.691"></status>
</kw>
<msg timestamp="20160901 16:21:55.700" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/json/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;UserID&gt;中文姓名&lt;/UserID&gt;&lt;MobNum&gt;13500000000&lt;/MobNum&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;BusiCode&gt;0&lt;/BusiCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/json/unicode
validTime is:3
startTime is:1472718115.69
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 2
    MobNum:13500000000
    UserID:ä¸­æå§å
response parameter  total of 1
    BusiCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:55.700" starttime="20160901 16:21:55.683"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/unicode.json</arg>
<arg>encoding=UTF-16LE</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:55.704" level="TRACE">Arguments: [ 'Template/unicode.json' | encoding='UTF-16LE' ]</msg>
<msg timestamp="20160901 16:21:55.704" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\unicode.json"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\unicode.json&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:55.706" level="TRACE">Return: '﻿{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}'</msg>
<msg timestamp="20160901 16:21:55.706" level="INFO">${unicode_request_body} = ﻿{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
  ...</msg>
<status status="PASS" endtime="20160901 16:21:55.706" starttime="20160901 16:21:55.704"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
<arg>Content-Type= application/json;charset=UTF-16LE</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:55.707" level="TRACE">Arguments: [ 'customheader1=12345' | 'Content-Type= application/json;charset=UTF-16LE' ]</msg>
<msg timestamp="20160901 16:21:55.708" level="TRACE">Return: {'Content-Type': ' application/json;charset=UTF-16LE', 'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:55.708" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'Content-Type': u' application/json;charset=UTF-16LE'}</msg>
<status status="PASS" endtime="20160901 16:21:55.708" starttime="20160901 16:21:55.707"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:10004/test/json/unicode</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=UTF-16LE</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.712" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:10004/test/json/unicode' | ${request_body}='﻿{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='UTF-16LE' | ${custom_headers}={'Content-Type': ' application/json;charset=UTF-16LE', 'customheader1': '12345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:55.713" level="TRACE">Arguments: [ 'http://127.0.0.1:10004/test/json/unicode' ]</msg>
<msg timestamp="20160901 16:21:55.713" level="TRACE">Return: '127.0.0.1:10004'</msg>
<msg timestamp="20160901 16:21:55.713" level="INFO">${host} = 127.0.0.1:10004</msg>
<status status="PASS" endtime="20160901 16:21:55.713" starttime="20160901 16:21:55.712"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:55.714" level="TRACE">Arguments: [ 'http://127.0.0.1:10004/test/json/unicode' ]</msg>
<msg timestamp="20160901 16:21:55.714" level="TRACE">Return: '/test/json/unicode'</msg>
<msg timestamp="20160901 16:21:55.714" level="INFO">${uri} = /test/json/unicode</msg>
<status status="PASS" endtime="20160901 16:21:55.714" starttime="20160901 16:21:55.713"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.715" level="TRACE">Arguments: [ ${host}='127.0.0.1:10004' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.715" level="TRACE">Arguments: [ '127.0.0.1:10004' | 'http' ]</msg>
<msg timestamp="20160901 16:21:55.716" level="INFO">Host for next HTTP request set to '127.0.0.1:10004'</msg>
<msg timestamp="20160901 16:21:55.716" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:55.716" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.716" starttime="20160901 16:21:55.715"></status>
</kw>
<msg timestamp="20160901 16:21:55.716" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.716" starttime="20160901 16:21:55.714"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:55.717" level="TRACE">Arguments: [ {'Content-Type': ' application/json;charset=UTF-16LE', 'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:55.717" level="TRACE">Return: {'Content-Type': ' application/json;charset=UTF-16LE', 'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:55.717" level="INFO">${customs_headers_dict} = {u'Content-Type': u' application/json;charset=UTF-16LE', u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:55.717" starttime="20160901 16:21:55.716"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:55.718" level="TRACE">Arguments: [ {'Content-Type': ' application/json;charset=UTF-16LE', 'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:55.718" level="TRACE">Return: ['Content-Type', 'customheader1']</msg>
<msg timestamp="20160901 16:21:55.718" level="INFO">@{key_list} = [ Content-Type | customheader1 ]</msg>
<status status="PASS" endtime="20160901 16:21:55.718" starttime="20160901 16:21:55.717"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = Content-Type">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:55.719" level="TRACE">Arguments: [ {'Content-Type': ' application/json;charset=UTF-16LE', 'customheader1': '12345'} | 'Content-Type' ]</msg>
<msg timestamp="20160901 16:21:55.719" level="TRACE">Return: ' application/json;charset=UTF-16LE'</msg>
<msg timestamp="20160901 16:21:55.719" level="INFO">${value} =  application/json;charset=UTF-16LE</msg>
<status status="PASS" endtime="20160901 16:21:55.719" starttime="20160901 16:21:55.719"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.720" level="TRACE">Arguments: [ ${header_name}='Content-Type' | ${header_value}=' application/json;charset=UTF-16LE' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.721" level="TRACE">Arguments: [ 'Content-Type' | ' application/json;charset=UTF-16LE' ]</msg>
<msg timestamp="20160901 16:21:55.721" level="INFO">Set request header "Content-Type" to " application/json;charset=UTF-16LE"</msg>
<msg timestamp="20160901 16:21:55.721" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.721" starttime="20160901 16:21:55.720"></status>
</kw>
<msg timestamp="20160901 16:21:55.721" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.721" starttime="20160901 16:21:55.720"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:55.721" starttime="20160901 16:21:55.719"></status>
</kw>
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:55.722" level="TRACE">Arguments: [ {'Content-Type': ' application/json;charset=UTF-16LE', 'customheader1': '12345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:55.722" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:55.723" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:55.723" starttime="20160901 16:21:55.722"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.723" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.724" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:55.724" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:55.724" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.724" starttime="20160901 16:21:55.724"></status>
</kw>
<msg timestamp="20160901 16:21:55.724" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.724" starttime="20160901 16:21:55.723"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:55.725" starttime="20160901 16:21:55.722"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:55.725" starttime="20160901 16:21:55.718"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.725" level="TRACE">Arguments: [ ${body}='﻿{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' | ${encoding}='UTF-16LE' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.726" level="TRACE">Arguments: [ 'UTF-16LE' ]</msg>
<msg timestamp="20160901 16:21:55.726" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:55.726" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:55.726" level="INFO">&lt;HttpLibrary.HTTP instance at 0x04545648&gt;</msg>
<msg timestamp="20160901 16:21:55.726" level="INFO">UTF-16LE</msg>
<msg timestamp="20160901 16:21:55.726" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.726" starttime="20160901 16:21:55.726"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.727" level="TRACE">Arguments: [ '﻿{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}' ]</msg>
<msg timestamp="20160901 16:21:55.727" level="INFO">Request body set to "﻿{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "中文姓名",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}".</msg>
<msg timestamp="20160901 16:21:55.727" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.727" starttime="20160901 16:21:55.727"></status>
</kw>
<msg timestamp="20160901 16:21:55.727" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.728" starttime="20160901 16:21:55.725"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.728" level="TRACE">Arguments: [ ${url}='/test/json/unicode' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.729" level="TRACE">Arguments: [ '/test/json/unicode' ]</msg>
<msg timestamp="20160901 16:21:55.729" level="DEBUG">Performing POST request on http://127.0.0.1:10004/test/json/unicode</msg>
<msg timestamp="20160901 16:21:55.729" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:55.729" level="DEBUG">Host: 127.0.0.1:10004</msg>
<msg timestamp="20160901 16:21:55.729" level="DEBUG">Content-Type:  application/json;charset=UTF-16LE</msg>
<msg timestamp="20160901 16:21:55.729" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:55.729" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:55.730" level="DEBUG">\xff\xfe{
    "Request": {
        "BusiParams": {
		    "OprCode": "02",
            "MobNum": "13500000000",
			"UserID": "-N\x87e\xd3YT",
            "VirtulUserID": ""
        },
        "BusiCode": "0"
    },
    "PubInfo": {
        "TransactionId": "",
        "TransactionTime": "",
		"OpId":"",
        "OrgId":"",
        "InterfaceId":"",
        "InterfaceType":""
    }
}</msg>
<msg timestamp="20160901 16:21:55.826" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:55.826" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:55.826" level="DEBUG">date: Thu, 01 Sep 2016 08:21:55 GMT</msg>
<msg timestamp="20160901 16:21:55.826" level="DEBUG">content-length: 518</msg>
<msg timestamp="20160901 16:21:55.826" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:55.827" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:55.827" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:55.827" level="DEBUG"> {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "-N噀", "MobNum": "13500000000", "OprCode": "02"}, "BusiCode": "0"}, "PubInfo": {"InterfaceId": null, "TransactionTime": null, "OrgId": null, "InterfaceType": null, "TransactionId": null, "OpId": null}}</msg>
<msg timestamp="20160901 16:21:55.827" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.827" starttime="20160901 16:21:55.728"></status>
</kw>
<msg timestamp="20160901 16:21:55.827" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.827" starttime="20160901 16:21:55.728"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:55.828" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:55.828" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:55.829" level="TRACE">Return: b' \x00{\x00"\x00R\x00e\x00q\x00u\x00e\x00s\x00t\x00"\x00:\x00 \x00{\x00"\x00B\x00u\x00s\x00i\x00P\x00a\x00r\x00a\x00m\x00s\x00"\x00:\x00 \x00{\x00"\x00V\x00i\x00r\x00t\x00u\x00l\x00U\x00s\x00e\x00r\x00I\x00D\x00"\x00:\x00 \x00{\x00}\x00,\x00 \x00"\x00U\x00s\x00e\x00r\x00I\x00D\x00"\x00:\x00 \x00"\x00-N\x87e"\x00,\x00 \x00"\x00M\x00o\x00b\x00N\x00u\x00m\x00"\x00:\x00 \x00"\x001\x003\x005\x000\x000\x000\x000\x000\x000\x000\x000\x00"\x00,\x00 \x00"\x00O\x00p\x00r\x00C\x00o\x00d\x00e\x00"\x00:\x00 \x00"\x000\x002\x00"\x00}\x00,\x00 \x00"\x00B\x00u\x00s\x00i\x00C\x00o\x00d\x00e\x00"\x00:\x00 \x00"\x000\x00"\x00}\x00,\x00 \x00"\x00P\x00u\x00b\x00I\x00n\x00f\x00o\x00"\x00:\x00 \x00{\x00"\x00I\x00n\x00t\x00e\x00r\x00f\x00a\x00c\x00e\x00I\x00d\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00T\x00r\x00a\x00n\x00s\x00a\x00c\x00t\x00i\x00o\x00n\x00T\x00i\x00m\x00e\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00O\x00r\x00g\x00I\x00d\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00I\x00n\x00t\x00e\x00r\x00f\x00a\x00c\x00e\x00T\x00y\x00p\x00e\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00T\x00r\x00a\x00n\x00s\x00a\x00c\x00t\x00i\x00o\x00n\x00I\x00d\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00O\x00p\x00I\x00d\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00}\x00}\x00'</msg>
<msg timestamp="20160901 16:21:55.829" level="INFO">${Response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "-N噀", "MobNum": "13500000000", "OprCode": ...</msg>
<status status="PASS" endtime="20160901 16:21:55.829" starttime="20160901 16:21:55.828"></status>
</kw>
<msg timestamp="20160901 16:21:55.829" level="TRACE">Return: b' \x00{\x00"\x00R\x00e\x00q\x00u\x00e\x00s\x00t\x00"\x00:\x00 \x00{\x00"\x00B\x00u\x00s\x00i\x00P\x00a\x00r\x00a\x00m\x00s\x00"\x00:\x00 \x00{\x00"\x00V\x00i\x00r\x00t\x00u\x00l\x00U\x00s\x00e\x00r\x00I\x00D\x00"\x00:\x00 \x00{\x00}\x00,\x00 \x00"\x00U\x00s\x00e\x00r\x00I\x00D\x00"\x00:\x00 \x00"\x00-N\x87e"\x00,\x00 \x00"\x00M\x00o\x00b\x00N\x00u\x00m\x00"\x00:\x00 \x00"\x001\x003\x005\x000\x000\x000\x000\x000\x000\x000\x000\x00"\x00,\x00 \x00"\x00O\x00p\x00r\x00C\x00o\x00d\x00e\x00"\x00:\x00 \x00"\x000\x002\x00"\x00}\x00,\x00 \x00"\x00B\x00u\x00s\x00i\x00C\x00o\x00d\x00e\x00"\x00:\x00 \x00"\x000\x00"\x00}\x00,\x00 \x00"\x00P\x00u\x00b\x00I\x00n\x00f\x00o\x00"\x00:\x00 \x00{\x00"\x00I\x00n\x00t\x00e\x00r\x00f\x00a\x00c\x00e\x00I\x00d\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00T\x00r\x00a\x00n\x00s\x00a\x00c\x00t\x00i\x00o\x00n\x00T\x00i\x00m\x00e\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00O\x00r\x00g\x00I\x00d\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00I\x00n\x00t\x00e\x00r\x00f\x00a\x00c\x00e\x00T\x00y\x00p\x00e\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00T\x00r\x00a\x00n\x00s\x00a\x00c\x00t\x00i\x00o\x00n\x00I\x00d\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00O\x00p\x00I\x00d\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00}\x00}\x00'</msg>
<msg timestamp="20160901 16:21:55.829" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "-N噀", "MobNum": "13500000000", "OprCode": ...</msg>
<status status="PASS" endtime="20160901 16:21:55.830" starttime="20160901 16:21:55.828"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.830" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:55.830" level="INFO">${response_body} =  {"Request": {"BusiParams": {"VirtulUserID": {}, "UserID": "-N噀", "MobNum": "13500000000", "OprCode": ...</msg>
<msg timestamp="20160901 16:21:55.830" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.831" starttime="20160901 16:21:55.830"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.831" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:55.832" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'Content-Type': u' application/json;charset=UTF-16LE'}</msg>
<msg timestamp="20160901 16:21:55.832" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.832" starttime="20160901 16:21:55.831"></status>
</kw>
<msg timestamp="20160901 16:21:55.832" level="TRACE">Return: b' \x00{\x00"\x00R\x00e\x00q\x00u\x00e\x00s\x00t\x00"\x00:\x00 \x00{\x00"\x00B\x00u\x00s\x00i\x00P\x00a\x00r\x00a\x00m\x00s\x00"\x00:\x00 \x00{\x00"\x00V\x00i\x00r\x00t\x00u\x00l\x00U\x00s\x00e\x00r\x00I\x00D\x00"\x00:\x00 \x00{\x00}\x00,\x00 \x00"\x00U\x00s\x00e\x00r\x00I\x00D\x00"\x00:\x00 \x00"\x00-N\x87e"\x00,\x00 \x00"\x00M\x00o\x00b\x00N\x00u\x00m\x00"\x00:\x00 \x00"\x001\x003\x005\x000\x000\x000\x000\x000\x000\x000\x000\x00"\x00,\x00 \x00"\x00O\x00p\x00r\x00C\x00o\x00d\x00e\x00"\x00:\x00 \x00"\x000\x002\x00"\x00}\x00,\x00 \x00"\x00B\x00u\x00s\x00i\x00C\x00o\x00d\x00e\x00"\x00:\x00 \x00"\x000\x00"\x00}\x00,\x00 \x00"\x00P\x00u\x00b\x00I\x00n\x00f\x00o\x00"\x00:\x00 \x00{\x00"\x00I\x00n\x00t\x00e\x00r\x00f\x00a\x00c\x00e\x00I\x00d\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00T\x00r\x00a\x00n\x00s\x00a\x00c\x00t\x00i\x00o\x00n\x00T\x00i\x00m\x00e\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00O\x00r\x00g\x00I\x00d\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00I\x00n\x00t\x00e\x00r\x00f\x00a\x00c\x00e\x00T\x00y\x00p\x00e\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00T\x00r\x00a\x00n\x00s\x00a\x00c\x00t\x00i\x00o\x00n\x00I\x00d\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00,\x00 \x00"\x00O\x00p\x00I\x00d\x00"\x00:\x00 \x00n\x00u\x00l\x00l\x00}\x00}\x00'</msg>
<status status="PASS" endtime="20160901 16:21:55.832" starttime="20160901 16:21:55.711"></status>
</kw>
<kw name="获取response_body编码" library="NNN接口">
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:55.833" level="TRACE">Arguments: [  ]</msg>
<kw name="Detect Encoding" library="detectEncoding">
<doc>获取test变量resposne_body字符串的encoding，转为大写返回，例如UTF-8</doc>
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:55.834" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:55.858" level="TRACE">Return: b'UTF-16LE'</msg>
<msg timestamp="20160901 16:21:55.859" level="INFO">${encoding} = UTF-16LE</msg>
<status status="PASS" endtime="20160901 16:21:55.859" starttime="20160901 16:21:55.833"></status>
</kw>
<msg timestamp="20160901 16:21:55.859" level="TRACE">Return: b'UTF-16LE'</msg>
<msg timestamp="20160901 16:21:55.859" level="INFO">${encoding} = UTF-16LE</msg>
<status status="PASS" endtime="20160901 16:21:55.859" starttime="20160901 16:21:55.833"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${encoding}</arg>
<arg>UTF-16LE</arg>
</arguments>
<msg timestamp="20160901 16:21:55.860" level="TRACE">Arguments: [ b'UTF-16LE' | 'UTF-16LE' ]</msg>
<msg timestamp="20160901 16:21:55.861" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:55.861" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.861" starttime="20160901 16:21:55.860"></status>
</kw>
<doc>试验用，用charset来指定实际发出的包的编码,可以看出，还是可以指定以UTF-16LE发出的，但是需要在接收端做转码，参见下面：
datas  = datas.decode('UTF-16LE').encode('UTF-8'),这样就转成了带BOM的UTF-8格式，可以存盘</doc>
<status status="PASS" endtime="20160901 16:21:55.861" critical="yes" starttime="20160901 16:21:55.673"></status>
</test>
<doc>1）编码的配置，在Mock端是在system.xml的http server节点的encoding进行设置的
2）为图简单，文件均采用template中装载，装到RF之后成为unicode，再转换为相应的编码post出去</doc>
<status status="PASS" endtime="20160901 16:21:55.865" starttime="20160901 16:21:54.663"></status>
</suite>
<status status="PASS" endtime="20160901 16:21:55.876" starttime="20160901 16:21:52.468"></status>
</suite>
<suite source="D:\project\SVN\mock\mockv1\SimServer\docs\Demo\接口案例\xml" id="s1-s2" name="Xml">
<suite source="D:\project\SVN\mock\mockv1\SimServer\docs\Demo\接口案例\xml\01.HTTP简单请求测试.robot" id="s1-s2-s1" name="01.HTTP简单请求测试">
<test id="s1-s2-s1-t1" name="向URL发起POST 请求">
<kw name="模拟器调用_test_xml_default_utf8接口" library="NNN接口">
<arguments>
<arg>123456789012</arg>
<arg>愤怒的小鸟</arg>
<arg>123456</arg>
<arg>南京市游戏设计有限责任公司</arg>
<arg>0</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:55.931" level="TRACE">Arguments: [ ${contentId}='123456789012' | ${contentName}='愤怒的小鸟' | ${cpId}='123456' | ${cpName}='南京市游戏设计有限责任公司' | ${Infos_returnCode}='0' | ${Info_returnCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"contentId":"${contentId}","contentName":"${contentName}","cpId":"${cpId}","cpName":"${cpName}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:55.933" level="TRACE">Arguments: [ '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' ]</msg>
<msg timestamp="20160901 16:21:55.933" level="TRACE">Return: '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}'</msg>
<msg timestamp="20160901 16:21:55.933" level="INFO">${request} = {"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<status status="PASS" endtime="20160901 16:21:55.934" starttime="20160901 16:21:55.932"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Infos_returnCode":"${Infos_returnCode}","Info_returnCode":"${Info_returnCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:55.934" level="TRACE">Arguments: [ '{"Infos_returnCode":"0","Info_returnCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:55.935" level="TRACE">Return: '{"Infos_returnCode":"0","Info_returnCode":"0"}'</msg>
<msg timestamp="20160901 16:21:55.935" level="INFO">${response} = {"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:55.935" starttime="20160901 16:21:55.934"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/xml/default_utf8</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:55.937" level="TRACE">Arguments: [ ${msgType}='/test/xml/default_utf8' | ${timeOut}='3' | ${request}='{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | ${response}='{"Infos_returnCode":"0","Info_returnCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:55.939" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/xml/default_utf8' | '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | '{"Infos_returnCode":"0","Info_returnCode":"0"}' | '0' | b'' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:55.939" level="INFO">{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<msg timestamp="20160901 16:21:55.939" level="INFO">{"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<msg timestamp="20160901 16:21:55.940" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:55.940" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;con...</msg>
<status status="PASS" endtime="20160901 16:21:55.940" starttime="20160901 16:21:55.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.941" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:55.941" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:55.942" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.942" starttime="20160901 16:21:55.941"></status>
</kw>
<msg timestamp="20160901 16:21:55.942" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:55.942" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;con...</msg>
<status status="PASS" endtime="20160901 16:21:55.943" starttime="20160901 16:21:55.935"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:55.943" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:55.945" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:55.945" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:55.945" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:55.945" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:55.945" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:55.953" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718115.95
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8
    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
</msg>
<msg timestamp="20160901 16:21:55.953" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/default_utf8\nvalidTime is:3\nstartTime is:1472718115.95\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:55.954" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718115.95
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    c...</msg>
<status status="PASS" endtime="20160901 16:21:55.954" starttime="20160901 16:21:55.944"></status>
</kw>
<msg timestamp="20160901 16:21:55.954" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/default_utf8\nvalidTime is:3\nstartTime is:1472718115.95\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:55.955" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718115.95
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    c...</msg>
<status status="PASS" endtime="20160901 16:21:55.955" starttime="20160901 16:21:55.943"></status>
</kw>
<msg timestamp="20160901 16:21:55.956" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718115.95
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:åäº¬å¸æ¸¸æè®¾è®¡æéè´£ä»»å¬å¸
    contentName:æ¤æçå°é¸
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:55.957" starttime="20160901 16:21:55.930"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/utf8.xml</arg>
<arg>encoding=utf-8</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:55.958" level="TRACE">Arguments: [ 'Template/utf8.xml' | encoding='utf-8' ]</msg>
<msg timestamp="20160901 16:21:55.959" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.xml"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.xml&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:55.960" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
'</msg>
<msg timestamp="20160901 16:21:55.960" level="INFO">${unicode_request_body} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    ...</msg>
<status status="PASS" endtime="20160901 16:21:55.960" starttime="20160901 16:21:55.958"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:55.961" level="TRACE">Arguments: [ 'customheader1=12345' ]</msg>
<msg timestamp="20160901 16:21:55.961" level="TRACE">Return: {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:55.961" level="INFO">${custom_headers} = {u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:55.962" starttime="20160901 16:21:55.961"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:20002/test/xml/default_utf8</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=utf-8</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.969" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:20002/test/xml/default_utf8' | ${request_body}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='utf-8' | ${custom_headers}={'customheader1': '12345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:55.970" level="TRACE">Arguments: [ 'http://127.0.0.1:20002/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:55.970" level="TRACE">Return: '127.0.0.1:20002'</msg>
<msg timestamp="20160901 16:21:55.970" level="INFO">${host} = 127.0.0.1:20002</msg>
<status status="PASS" endtime="20160901 16:21:55.970" starttime="20160901 16:21:55.969"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:55.971" level="TRACE">Arguments: [ 'http://127.0.0.1:20002/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:55.971" level="TRACE">Return: '/test/xml/default_utf8'</msg>
<msg timestamp="20160901 16:21:55.971" level="INFO">${uri} = /test/xml/default_utf8</msg>
<status status="PASS" endtime="20160901 16:21:55.971" starttime="20160901 16:21:55.971"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.972" level="TRACE">Arguments: [ ${host}='127.0.0.1:20002' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.973" level="TRACE">Arguments: [ '127.0.0.1:20002' | 'http' ]</msg>
<msg timestamp="20160901 16:21:55.973" level="INFO">Host for next HTTP request set to '127.0.0.1:20002'</msg>
<msg timestamp="20160901 16:21:55.973" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:55.974" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.974" starttime="20160901 16:21:55.973"></status>
</kw>
<msg timestamp="20160901 16:21:55.974" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.974" starttime="20160901 16:21:55.972"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:55.975" level="TRACE">Arguments: [ {'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:55.975" level="TRACE">Return: {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:55.975" level="INFO">${customs_headers_dict} = {u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:55.975" starttime="20160901 16:21:55.974"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:55.976" level="TRACE">Arguments: [ {'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:55.976" level="TRACE">Return: ['customheader1']</msg>
<msg timestamp="20160901 16:21:55.977" level="INFO">@{key_list} = [ customheader1 ]</msg>
<status status="PASS" endtime="20160901 16:21:55.977" starttime="20160901 16:21:55.975"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:55.978" level="TRACE">Arguments: [ {'customheader1': '12345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:55.978" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:55.979" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:55.979" starttime="20160901 16:21:55.978"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.979" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.980" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:55.981" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:55.981" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.981" starttime="20160901 16:21:55.980"></status>
</kw>
<msg timestamp="20160901 16:21:55.981" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.981" starttime="20160901 16:21:55.979"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:55.981" starttime="20160901 16:21:55.977"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:55.982" starttime="20160901 16:21:55.977"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.983" level="TRACE">Arguments: [ ${body}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='utf-8' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.983" level="TRACE">Arguments: [ 'utf-8' ]</msg>
<msg timestamp="20160901 16:21:55.984" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:55.984" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:55.984" level="INFO">&lt;HttpLibrary.HTTP instance at 0x046904E0&gt;</msg>
<msg timestamp="20160901 16:21:55.984" level="INFO">utf-8</msg>
<msg timestamp="20160901 16:21:55.984" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.984" starttime="20160901 16:21:55.983"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.985" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' ]</msg>
<msg timestamp="20160901 16:21:55.985" level="INFO">Request body set to "&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
".</msg>
<msg timestamp="20160901 16:21:55.985" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.985" starttime="20160901 16:21:55.985"></status>
</kw>
<msg timestamp="20160901 16:21:55.986" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:55.986" starttime="20160901 16:21:55.982"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.986" level="TRACE">Arguments: [ ${url}='/test/xml/default_utf8' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:55.987" level="TRACE">Arguments: [ '/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:55.987" level="DEBUG">Performing POST request on http://127.0.0.1:20002/test/xml/default_utf8</msg>
<msg timestamp="20160901 16:21:55.987" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:55.987" level="DEBUG">Host: 127.0.0.1:20002</msg>
<msg timestamp="20160901 16:21:55.988" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:55.988" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:55.988" level="DEBUG">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
</msg>
<msg timestamp="20160901 16:21:56.053" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:56.053" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:56.053" level="DEBUG">date: Thu, 01 Sep 2016 08:21:55 GMT</msg>
<msg timestamp="20160901 16:21:56.053" level="DEBUG">content-length: 418</msg>
<msg timestamp="20160901 16:21:56.053" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:56.053" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:56.053" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:56.054" level="DEBUG">&lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;
    &lt;processTime&gt;20141010103801&lt;/processTime&gt;
    &lt;returnCode&gt;0&lt;/returnCode&gt;
    &lt;apkType&gt;0&lt;/apkType&gt;
&lt;/resultInfo&gt;
&lt;/resultInfos&gt;
&lt;/Response&gt;</msg>
<msg timestamp="20160901 16:21:56.054" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.054" starttime="20160901 16:21:55.987"></status>
</kw>
<msg timestamp="20160901 16:21:56.055" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.055" starttime="20160901 16:21:55.986"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.055" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.056" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:56.056" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:56.057" level="INFO">${Response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<status status="PASS" endtime="20160901 16:21:56.057" starttime="20160901 16:21:56.056"></status>
</kw>
<msg timestamp="20160901 16:21:56.058" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:56.059" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<status status="PASS" endtime="20160901 16:21:56.059" starttime="20160901 16:21:56.055"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.059" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:56.062" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<msg timestamp="20160901 16:21:56.062" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.062" starttime="20160901 16:21:56.059"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.063" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:56.063" level="INFO">${custom_headers} = {u'customheader1': u'12345'}</msg>
<msg timestamp="20160901 16:21:56.063" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.064" starttime="20160901 16:21:56.062"></status>
</kw>
<msg timestamp="20160901 16:21:56.064" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<status status="PASS" endtime="20160901 16:21:56.064" starttime="20160901 16:21:55.967"></status>
</kw>
<kw name="Element Text Should Be" library="XML">
<doc>Verifies that the text of the specified element is ``expected``.</doc>
<arguments>
<arg>${response_body}</arg>
<arg>0</arg>
<arg>//resultInfos/returnCode</arg>
</arguments>
<msg timestamp="20160901 16:21:56.066" level="TRACE">Arguments: [ b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;" | '0' | '//resultInfos/returnCode' ]</msg>
<msg timestamp="20160901 16:21:56.066" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.066" starttime="20160901 16:21:56.065"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:56.068" critical="yes" starttime="20160901 16:21:55.928"></status>
</test>
<test id="s1-s2-s1-t2" name="xpath验证模式">
<kw name="模拟器调用_XPATH验证模式" library="NNN接口">
<arguments>
<arg>123456789012</arg>
<arg>愤怒的小鸟</arg>
<arg>123456</arg>
<arg>南京市游戏设计有限责任公司</arg>
<arg>0</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:56.075" level="TRACE">Arguments: [ ${contentId}='123456789012' | ${contentName}='愤怒的小鸟' | ${cpId}='123456' | ${cpName}='南京市游戏设计有限责任公司' | ${Infos_returnCode}='0' | ${Info_returnCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"/Request/apkInfo/contentId":"${contentId}","/Request/apkInfo/contentName":"${contentName}","/Request/apkInfo/cpId":"${cpId}","/Request/apkInfo/cpName":"${cpName}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:56.076" level="TRACE">Arguments: [ '{"/Request/apkInfo/contentId":"123456789012","/Request/apkInfo/contentName":"愤怒的小鸟","/Request/apkInfo/cpId":"123456","/Request/apkInfo/cpName":"南京市游戏设计有限责任公司"}' ]</msg>
<msg timestamp="20160901 16:21:56.077" level="TRACE">Return: '{"/Request/apkInfo/contentId":"123456789012","/Request/apkInfo/contentName":"愤怒的小鸟","/Request/apkInfo/cpId":"123456","/Request/apkInfo/cpName":"南京市游戏设计有限责任公司"}'</msg>
<msg timestamp="20160901 16:21:56.077" level="INFO">${request} = {"/Request/apkInfo/contentId":"123456789012","/Request/apkInfo/contentName":"愤怒的小鸟","/Request/apkInfo/cpId":"123456","/Request/apkInfo/cpName":"南京市游戏设计有限责任公司"}</msg>
<status status="PASS" endtime="20160901 16:21:56.077" starttime="20160901 16:21:56.076"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Infos_returnCode":"${Infos_returnCode}","Info_returnCode":"${Info_returnCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:56.078" level="TRACE">Arguments: [ '{"Infos_returnCode":"0","Info_returnCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:56.078" level="TRACE">Return: '{"Infos_returnCode":"0","Info_returnCode":"0"}'</msg>
<msg timestamp="20160901 16:21:56.078" level="INFO">${response} = {"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:56.078" starttime="20160901 16:21:56.077"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/xml/default_utf8</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${EMPTY}</arg>
<arg>XPATH</arg>
<arg>XPATH</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:56.080" level="TRACE">Arguments: [ ${msgType}='/test/xml/default_utf8' | ${timeOut}='3' | ${request}='{"/Request/apkInfo/contentId":"123456789012","/Request/apkInfo/contentName":"愤怒的小鸟","/Request/apkInfo/cpId":"123456","/Request/apkInfo/cpName":"南京市游戏设计有限责任公司"}' | ${response}='{"Infos_returnCode":"0","Info_returnCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='XPATH' | ${respMode}='XPATH' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:56.082" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/xml/default_utf8' | '{"/Request/apkInfo/contentId":"123456789012","/Request/apkInfo/contentName":"愤怒的小鸟","/Request/apkInfo/cpId":"123456","/Request/apkInfo/cpName":"南京市游戏设计有限责任公司"}' | '{"Infos_returnCode":"0","Info_returnCode":"0"}' | '0' | b'' | 'XPATH' | 'XPATH' ]</msg>
<msg timestamp="20160901 16:21:56.083" level="INFO">{"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<msg timestamp="20160901 16:21:56.083" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="XPATH"&gt;
&lt;xpathList&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpName&lt;/path&gt;
&lt;expValue&gt;南京市游戏设计有限责任公司&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentName&lt;/path&gt;
&lt;expValue&gt;愤怒的小鸟&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpId&lt;/path&gt;
&lt;expValue&gt;123456&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentId&lt;/path&gt;
&lt;expValue&gt;123456789012&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;/xpathList&gt;&lt;/request&gt;
&lt;response respMode="XPATH"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:56.083" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="XPATH"&gt;
&lt;xpat...</msg>
<status status="PASS" endtime="20160901 16:21:56.083" starttime="20160901 16:21:56.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.084" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="XPATH"&gt;
&lt;xpathList&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpName&lt;/path&gt;
&lt;expValue&gt;南京市游戏设计有限责任公司&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentName&lt;/path&gt;
&lt;expValue&gt;愤怒的小鸟&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpId&lt;/path&gt;
&lt;expValue&gt;123456&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentId&lt;/path&gt;
&lt;expValue&gt;123456789012&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;/xpathList&gt;&lt;/request&gt;
&lt;response respMode="XPATH"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.084" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="XPATH"&gt;
&lt;xpathList&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpName&lt;/path&gt;
&lt;expValue&gt;南京市游戏设计有限责任公司&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentName&lt;/path&gt;
&lt;expValue&gt;愤怒的小鸟&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpId&lt;/path&gt;
&lt;expValue&gt;123456&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentId&lt;/path&gt;
&lt;expValue&gt;123456789012&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;/xpathList&gt;&lt;/request&gt;
&lt;response respMode="XPATH"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:56.085" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.085" starttime="20160901 16:21:56.084"></status>
</kw>
<msg timestamp="20160901 16:21:56.085" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="XPATH"&gt;
&lt;xpathList&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpName&lt;/path&gt;
&lt;expValue&gt;南京市游戏设计有限责任公司&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentName&lt;/path&gt;
&lt;expValue&gt;愤怒的小鸟&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpId&lt;/path&gt;
&lt;expValue&gt;123456&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentId&lt;/path&gt;
&lt;expValue&gt;123456789012&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;/xpathList&gt;&lt;/request&gt;
&lt;response respMode="XPATH"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:56.085" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="XPATH"&gt;
&lt;xpat...</msg>
<status status="PASS" endtime="20160901 16:21:56.085" starttime="20160901 16:21:56.079"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:56.086" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="XPATH"&gt;
&lt;xpathList&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpName&lt;/path&gt;
&lt;expValue&gt;南京市游戏设计有限责任公司&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentName&lt;/path&gt;
&lt;expValue&gt;愤怒的小鸟&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpId&lt;/path&gt;
&lt;expValue&gt;123456&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentId&lt;/path&gt;
&lt;expValue&gt;123456789012&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;/xpathList&gt;&lt;/request&gt;
&lt;response respMode="XPATH"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:56.087" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="XPATH"&gt;
&lt;xpathList&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpName&lt;/path&gt;
&lt;expValue&gt;南京市游戏设计有限责任公司&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentName&lt;/path&gt;
&lt;expValue&gt;愤怒的小鸟&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpId&lt;/path&gt;
&lt;expValue&gt;123456&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentId&lt;/path&gt;
&lt;expValue&gt;123456789012&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;/xpathList&gt;&lt;/request&gt;
&lt;response respMode="XPATH"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.088" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="XPATH"&gt;
&lt;xpathList&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpName&lt;/path&gt;
&lt;expValue&gt;南京市游戏设计有限责任公司&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentName&lt;/path&gt;
&lt;expValue&gt;愤怒的小鸟&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpId&lt;/path&gt;
&lt;expValue&gt;123456&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentId&lt;/path&gt;
&lt;expValue&gt;123456789012&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;/xpathList&gt;&lt;/request&gt;
&lt;response respMode="XPATH"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:56.088" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:56.088" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:56.088" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:56.095" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.09
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    /Request/apkInfo/cpId:123456
    /Request/apkInfo/contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f
    /Request/apkInfo/cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8
    /Request/apkInfo/contentId:123456789012
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
</msg>
<msg timestamp="20160901 16:21:56.095" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/default_utf8\nvalidTime is:3\nstartTime is:1472718116.09\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    /Request/apkInfo/cpId:123456\n    /Request/apkInfo/contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\n    /Request/apkInfo/cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    /Request/apkInfo/contentId:123456789012\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:56.097" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.09
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    /...</msg>
<status status="PASS" endtime="20160901 16:21:56.097" starttime="20160901 16:21:56.087"></status>
</kw>
<msg timestamp="20160901 16:21:56.097" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/default_utf8\nvalidTime is:3\nstartTime is:1472718116.09\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    /Request/apkInfo/cpId:123456\n    /Request/apkInfo/contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\n    /Request/apkInfo/cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    /Request/apkInfo/contentId:123456789012\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:56.099" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.09
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    /...</msg>
<status status="PASS" endtime="20160901 16:21:56.099" starttime="20160901 16:21:56.086"></status>
</kw>
<msg timestamp="20160901 16:21:56.099" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="XPATH"&gt;
&lt;xpathList&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpName&lt;/path&gt;
&lt;expValue&gt;南京市游戏设计有限责任公司&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentName&lt;/path&gt;
&lt;expValue&gt;愤怒的小鸟&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/cpId&lt;/path&gt;
&lt;expValue&gt;123456&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;xpath&gt;
&lt;path&gt;/Request/apkInfo/contentId&lt;/path&gt;
&lt;expValue&gt;123456789012&lt;/expValue&gt;
&lt;/xpath&gt;
&lt;/xpathList&gt;&lt;/request&gt;
&lt;response respMode="XPATH"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.09
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    /Request/apkInfo/cpId:123456
    /Request/apkInfo/contentName:æ¤æçå°é¸
    /Request/apkInfo/cpName:åäº¬å¸æ¸¸æè®¾è®¡æéè´£ä»»å¬å¸
    /Request/apkInfo/contentId:123456789012
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:56.100" starttime="20160901 16:21:56.074"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/utf8.xml</arg>
<arg>encoding=utf-8</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.109" level="TRACE">Arguments: [ 'Template/utf8.xml' | encoding='utf-8' ]</msg>
<msg timestamp="20160901 16:21:56.110" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.xml"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.xml&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:56.111" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
'</msg>
<msg timestamp="20160901 16:21:56.111" level="INFO">${unicode_request_body} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    ...</msg>
<status status="PASS" endtime="20160901 16:21:56.111" starttime="20160901 16:21:56.109"></status>
</kw>
<kw name="Add Http Custom Header" library="httpLibrary">
<doc>典型的例子是keyvalue串: content-type=text/xml; charset=UTF-8</doc>
<arguments>
<arg>customheader1=12345</arg>
</arguments>
<msg timestamp="20160901 16:21:56.112" level="TRACE">Arguments: [ 'customheader1=12345' ]</msg>
<msg timestamp="20160901 16:21:56.112" level="INFO">org ${http_custom_headers_obj}: {} </msg>
<msg timestamp="20160901 16:21:56.113" level="INFO">${http_custom_headers_obj} = {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:56.113" level="INFO">modified ${http_custom_headers_obj}: {'customheader1': '12345'} </msg>
<msg timestamp="20160901 16:21:56.113" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.113" starttime="20160901 16:21:56.112"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:20002/test/xml/default_utf8</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=utf-8</arg>
</arguments>
<msg timestamp="20160901 16:21:56.120" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:20002/test/xml/default_utf8' | ${request_body}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='utf-8' | ${custom_headers}=b'' ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:56.121" level="TRACE">Arguments: [ 'http://127.0.0.1:20002/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:56.121" level="TRACE">Return: '127.0.0.1:20002'</msg>
<msg timestamp="20160901 16:21:56.122" level="INFO">${host} = 127.0.0.1:20002</msg>
<status status="PASS" endtime="20160901 16:21:56.122" starttime="20160901 16:21:56.121"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:56.122" level="TRACE">Arguments: [ 'http://127.0.0.1:20002/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:56.123" level="TRACE">Return: '/test/xml/default_utf8'</msg>
<msg timestamp="20160901 16:21:56.123" level="INFO">${uri} = /test/xml/default_utf8</msg>
<status status="PASS" endtime="20160901 16:21:56.123" starttime="20160901 16:21:56.122"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.124" level="TRACE">Arguments: [ ${host}='127.0.0.1:20002' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.125" level="TRACE">Arguments: [ '127.0.0.1:20002' | 'http' ]</msg>
<msg timestamp="20160901 16:21:56.125" level="INFO">Host for next HTTP request set to '127.0.0.1:20002'</msg>
<msg timestamp="20160901 16:21:56.125" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:56.125" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.125" starttime="20160901 16:21:56.124"></status>
</kw>
<msg timestamp="20160901 16:21:56.125" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.126" starttime="20160901 16:21:56.123"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:56.126" level="TRACE">Arguments: [ b'' ]</msg>
<msg timestamp="20160901 16:21:56.126" level="TRACE">Return: {}</msg>
<msg timestamp="20160901 16:21:56.127" level="INFO">${customs_headers_dict} = {}</msg>
<status status="PASS" endtime="20160901 16:21:56.127" starttime="20160901 16:21:56.126"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:56.128" level="TRACE">Arguments: [ {} ]</msg>
<msg timestamp="20160901 16:21:56.128" level="TRACE">Return: []</msg>
<msg timestamp="20160901 16:21:56.128" level="INFO">@{key_list} = [ ]</msg>
<status status="PASS" endtime="20160901 16:21:56.128" starttime="20160901 16:21:56.127"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<status status="PASS" endtime="20160901 16:21:56.128" starttime="20160901 16:21:56.128"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.130" level="TRACE">Arguments: [ ${body}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='utf-8' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.131" level="TRACE">Arguments: [ 'utf-8' ]</msg>
<msg timestamp="20160901 16:21:56.131" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:56.131" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:56.132" level="INFO">&lt;HttpLibrary.HTTP instance at 0x046904E0&gt;</msg>
<msg timestamp="20160901 16:21:56.132" level="INFO">utf-8</msg>
<msg timestamp="20160901 16:21:56.132" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.132" starttime="20160901 16:21:56.130"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.133" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.133" level="INFO">Request body set to "&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
".</msg>
<msg timestamp="20160901 16:21:56.133" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.133" starttime="20160901 16:21:56.132"></status>
</kw>
<msg timestamp="20160901 16:21:56.133" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.134" starttime="20160901 16:21:56.129"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.134" level="TRACE">Arguments: [ ${url}='/test/xml/default_utf8' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.135" level="TRACE">Arguments: [ '/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:56.135" level="DEBUG">Performing POST request on http://127.0.0.1:20002/test/xml/default_utf8</msg>
<msg timestamp="20160901 16:21:56.135" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:56.136" level="DEBUG">Host: 127.0.0.1:20002</msg>
<msg timestamp="20160901 16:21:56.136" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:56.137" level="DEBUG">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
</msg>
<msg timestamp="20160901 16:21:56.214" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:56.214" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:56.214" level="DEBUG">date: Thu, 01 Sep 2016 08:21:56 GMT</msg>
<msg timestamp="20160901 16:21:56.214" level="DEBUG">content-length: 418</msg>
<msg timestamp="20160901 16:21:56.214" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:56.214" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:56.214" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:56.215" level="DEBUG">&lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;
    &lt;processTime&gt;20141010103801&lt;/processTime&gt;
    &lt;returnCode&gt;0&lt;/returnCode&gt;
    &lt;apkType&gt;0&lt;/apkType&gt;
&lt;/resultInfo&gt;
&lt;/resultInfos&gt;
&lt;/Response&gt;</msg>
<msg timestamp="20160901 16:21:56.215" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.216" starttime="20160901 16:21:56.135"></status>
</kw>
<msg timestamp="20160901 16:21:56.216" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.216" starttime="20160901 16:21:56.134"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.216" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.217" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:56.217" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:56.218" level="INFO">${Response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<status status="PASS" endtime="20160901 16:21:56.218" starttime="20160901 16:21:56.217"></status>
</kw>
<msg timestamp="20160901 16:21:56.219" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:56.220" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<status status="PASS" endtime="20160901 16:21:56.220" starttime="20160901 16:21:56.216"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.220" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:56.223" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<msg timestamp="20160901 16:21:56.223" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.224" starttime="20160901 16:21:56.220"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.224" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:56.225" level="INFO">${custom_headers} = </msg>
<msg timestamp="20160901 16:21:56.225" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.225" starttime="20160901 16:21:56.224"></status>
</kw>
<msg timestamp="20160901 16:21:56.225" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<status status="PASS" endtime="20160901 16:21:56.225" starttime="20160901 16:21:56.119"></status>
</kw>
<kw name="Element Text Should Be" library="XML">
<doc>Verifies that the text of the specified element is ``expected``.</doc>
<arguments>
<arg>${response_body}</arg>
<arg>0</arg>
<arg>//resultInfos/returnCode</arg>
</arguments>
<msg timestamp="20160901 16:21:56.227" level="TRACE">Arguments: [ b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;" | '0' | '//resultInfos/returnCode' ]</msg>
<msg timestamp="20160901 16:21:56.228" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.228" starttime="20160901 16:21:56.227"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:56.229" critical="yes" starttime="20160901 16:21:56.072"></status>
</test>
<doc>XML基本上只有POST请求</doc>
<status status="PASS" endtime="20160901 16:21:56.233" starttime="20160901 16:21:55.886"></status>
</suite>
<suite source="D:\project\SVN\mock\mockv1\SimServer\docs\Demo\接口案例\xml\02.自定义头.robot" id="s1-s2-s2" name="02.自定义头">
<test id="s1-s2-s2-t1" name="服务端原值返回3个自定义头">
<kw name="模拟器调用_test_xml_customheader接口" library="NNN接口">
<arguments>
<arg>123456789012</arg>
<arg>愤怒的小鸟</arg>
<arg>123456</arg>
<arg>南京市游戏设计有限责任公司</arg>
<arg>0</arg>
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<arg>{"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.287" level="TRACE">Arguments: [ ${contentId}='123456789012' | ${contentName}='愤怒的小鸟' | ${cpId}='123456' | ${cpName}='南京市游戏设计有限责任公司' | ${Infos_returnCode}='0' | ${Info_returnCode}='0' | ${validTime}='3' | ${delay}='0' | ${custom_header}='{"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"contentId":"${contentId}","contentName":"${contentName}","cpId":"${cpId}","cpName":"${cpName}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:56.288" level="TRACE">Arguments: [ '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' ]</msg>
<msg timestamp="20160901 16:21:56.289" level="TRACE">Return: '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}'</msg>
<msg timestamp="20160901 16:21:56.289" level="INFO">${request} = {"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<status status="PASS" endtime="20160901 16:21:56.289" starttime="20160901 16:21:56.288"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Infos_returnCode":"${Infos_returnCode}","Info_returnCode":"${Info_returnCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:56.290" level="TRACE">Arguments: [ '{"Infos_returnCode":"0","Info_returnCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:56.290" level="TRACE">Return: '{"Infos_returnCode":"0","Info_returnCode":"0"}'</msg>
<msg timestamp="20160901 16:21:56.290" level="INFO">${response} = {"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:56.290" starttime="20160901 16:21:56.289"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/xml/default_utf8</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:56.292" level="TRACE">Arguments: [ ${msgType}='/test/xml/default_utf8' | ${timeOut}='3' | ${request}='{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | ${response}='{"Infos_returnCode":"0","Info_returnCode":"0"}' | ${delay}='0' | ${custom_header}='{"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:56.294" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/xml/default_utf8' | '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | '{"Infos_returnCode":"0","Info_returnCode":"0"}' | '0' | '{"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:56.294" level="INFO">{"customheader1":"REPLY","customheader2":"REPLY","customheader3":"REPLY"}</msg>
<msg timestamp="20160901 16:21:56.295" level="INFO">{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<msg timestamp="20160901 16:21:56.295" level="INFO">{"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<msg timestamp="20160901 16:21:56.295" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:56.295" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY...</msg>
<status status="PASS" endtime="20160901 16:21:56.295" starttime="20160901 16:21:56.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.296" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.296" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:56.296" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.296" starttime="20160901 16:21:56.296"></status>
</kw>
<msg timestamp="20160901 16:21:56.297" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:56.297" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY...</msg>
<status status="PASS" endtime="20160901 16:21:56.297" starttime="20160901 16:21:56.290"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:56.298" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:56.299" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.300" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:56.300" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:56.300" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:56.300" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:56.308" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.3
matchStatus: False
delay: 0
custom_header:{'customheader3': 'REPLY', 'customheader2': 'REPLY', 'customheader1': 'REPLY'}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8
    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
</msg>
<msg timestamp="20160901 16:21:56.308" level="TRACE">Return: b"hostIp is: 127.0.0.1\nmsgType is: /test/xml/default_utf8\nvalidTime is:3\nstartTime is:1472718116.3\nmatchStatus: False\ndelay: 0\ncustom_header:{'customheader3': 'REPLY', 'customheader2': 'REPLY', 'customheader1': 'REPLY'}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n"</msg>
<msg timestamp="20160901 16:21:56.309" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.3
matchStatus: False
delay: 0
custom_header:{'customheader3': 'REPLY', 'customheader2': 'REPLY', 'customh...</msg>
<status status="PASS" endtime="20160901 16:21:56.309" starttime="20160901 16:21:56.299"></status>
</kw>
<msg timestamp="20160901 16:21:56.309" level="TRACE">Return: b"hostIp is: 127.0.0.1\nmsgType is: /test/xml/default_utf8\nvalidTime is:3\nstartTime is:1472718116.3\nmatchStatus: False\ndelay: 0\ncustom_header:{'customheader3': 'REPLY', 'customheader2': 'REPLY', 'customheader1': 'REPLY'}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n"</msg>
<msg timestamp="20160901 16:21:56.310" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.3
matchStatus: False
delay: 0
custom_header:{'customheader3': 'REPLY', 'customheader2': 'REPLY', 'customh...</msg>
<status status="PASS" endtime="20160901 16:21:56.311" starttime="20160901 16:21:56.297"></status>
</kw>
<msg timestamp="20160901 16:21:56.311" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;customheader3&gt;REPLY&lt;/customheader3&gt;&lt;customheader2&gt;REPLY&lt;/customheader2&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b"hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.3
matchStatus: False
delay: 0
custom_header:{'customheader3': 'REPLY', 'customheader2': 'REPLY', 'customheader1': 'REPLY'}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:åäº¬å¸æ¸¸æè®¾è®¡æéè´£ä»»å¬å¸
    contentName:æ¤æçå°é¸
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
"]</msg>
<status status="PASS" endtime="20160901 16:21:56.312" starttime="20160901 16:21:56.286"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/utf8.xml</arg>
<arg>encoding=utf-8</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.314" level="TRACE">Arguments: [ 'Template/utf8.xml' | encoding='utf-8' ]</msg>
<msg timestamp="20160901 16:21:56.315" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.xml"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.xml&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:56.315" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
'</msg>
<msg timestamp="20160901 16:21:56.316" level="INFO">${unicode_request_body} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    ...</msg>
<status status="PASS" endtime="20160901 16:21:56.316" starttime="20160901 16:21:56.314"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
<arg>customheader2=22222</arg>
<arg>customheader3=33333</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:56.317" level="TRACE">Arguments: [ 'customheader1=12345' | 'customheader2=22222' | 'customheader3=33333' ]</msg>
<msg timestamp="20160901 16:21:56.318" level="TRACE">Return: {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'}</msg>
<msg timestamp="20160901 16:21:56.318" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'customheader2': u'22222', u'customheader3': u'33333'}</msg>
<status status="PASS" endtime="20160901 16:21:56.318" starttime="20160901 16:21:56.317"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:20002/test/xml/default_utf8</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=utf-8</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.325" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:20002/test/xml/default_utf8' | ${request_body}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='utf-8' | ${custom_headers}={'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:56.326" level="TRACE">Arguments: [ 'http://127.0.0.1:20002/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:56.326" level="TRACE">Return: '127.0.0.1:20002'</msg>
<msg timestamp="20160901 16:21:56.326" level="INFO">${host} = 127.0.0.1:20002</msg>
<status status="PASS" endtime="20160901 16:21:56.326" starttime="20160901 16:21:56.325"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:56.327" level="TRACE">Arguments: [ 'http://127.0.0.1:20002/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:56.327" level="TRACE">Return: '/test/xml/default_utf8'</msg>
<msg timestamp="20160901 16:21:56.327" level="INFO">${uri} = /test/xml/default_utf8</msg>
<status status="PASS" endtime="20160901 16:21:56.327" starttime="20160901 16:21:56.326"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.328" level="TRACE">Arguments: [ ${host}='127.0.0.1:20002' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.329" level="TRACE">Arguments: [ '127.0.0.1:20002' | 'http' ]</msg>
<msg timestamp="20160901 16:21:56.329" level="INFO">Host for next HTTP request set to '127.0.0.1:20002'</msg>
<msg timestamp="20160901 16:21:56.329" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:56.329" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.330" starttime="20160901 16:21:56.328"></status>
</kw>
<msg timestamp="20160901 16:21:56.330" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.330" starttime="20160901 16:21:56.327"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:56.331" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'} ]</msg>
<msg timestamp="20160901 16:21:56.331" level="TRACE">Return: {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'}</msg>
<msg timestamp="20160901 16:21:56.331" level="INFO">${customs_headers_dict} = {u'customheader3': u'33333', u'customheader2': u'22222', u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:56.331" starttime="20160901 16:21:56.330"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:56.333" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'} ]</msg>
<msg timestamp="20160901 16:21:56.333" level="TRACE">Return: ['customheader1', 'customheader2', 'customheader3']</msg>
<msg timestamp="20160901 16:21:56.333" level="INFO">@{key_list} = [ customheader1 | customheader2 | customheader3 ]</msg>
<status status="PASS" endtime="20160901 16:21:56.333" starttime="20160901 16:21:56.332"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:56.335" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:56.335" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:56.335" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:56.335" starttime="20160901 16:21:56.334"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.336" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.337" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:56.337" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:56.337" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.337" starttime="20160901 16:21:56.336"></status>
</kw>
<msg timestamp="20160901 16:21:56.337" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.338" starttime="20160901 16:21:56.335"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:56.338" starttime="20160901 16:21:56.334"></status>
</kw>
<kw type="foritem" name="${key} = customheader2">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:56.339" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'} | 'customheader2' ]</msg>
<msg timestamp="20160901 16:21:56.339" level="TRACE">Return: '22222'</msg>
<msg timestamp="20160901 16:21:56.339" level="INFO">${value} = 22222</msg>
<status status="PASS" endtime="20160901 16:21:56.339" starttime="20160901 16:21:56.338"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.340" level="TRACE">Arguments: [ ${header_name}='customheader2' | ${header_value}='22222' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.341" level="TRACE">Arguments: [ 'customheader2' | '22222' ]</msg>
<msg timestamp="20160901 16:21:56.341" level="INFO">Set request header "customheader2" to "22222"</msg>
<msg timestamp="20160901 16:21:56.342" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.342" starttime="20160901 16:21:56.341"></status>
</kw>
<msg timestamp="20160901 16:21:56.342" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.342" starttime="20160901 16:21:56.340"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:56.342" starttime="20160901 16:21:56.338"></status>
</kw>
<kw type="foritem" name="${key} = customheader3">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:56.343" level="TRACE">Arguments: [ {'customheader1': '12345', 'customheader2': '22222', 'customheader3': '33333'} | 'customheader3' ]</msg>
<msg timestamp="20160901 16:21:56.343" level="TRACE">Return: '33333'</msg>
<msg timestamp="20160901 16:21:56.344" level="INFO">${value} = 33333</msg>
<status status="PASS" endtime="20160901 16:21:56.344" starttime="20160901 16:21:56.342"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.344" level="TRACE">Arguments: [ ${header_name}='customheader3' | ${header_value}='33333' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.345" level="TRACE">Arguments: [ 'customheader3' | '33333' ]</msg>
<msg timestamp="20160901 16:21:56.346" level="INFO">Set request header "customheader3" to "33333"</msg>
<msg timestamp="20160901 16:21:56.346" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.346" starttime="20160901 16:21:56.345"></status>
</kw>
<msg timestamp="20160901 16:21:56.346" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.346" starttime="20160901 16:21:56.344"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:56.346" starttime="20160901 16:21:56.342"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:56.346" starttime="20160901 16:21:56.333"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.347" level="TRACE">Arguments: [ ${body}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='utf-8' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.348" level="TRACE">Arguments: [ 'utf-8' ]</msg>
<msg timestamp="20160901 16:21:56.348" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:56.349" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:56.349" level="INFO">&lt;HttpLibrary.HTTP instance at 0x046B1990&gt;</msg>
<msg timestamp="20160901 16:21:56.349" level="INFO">utf-8</msg>
<msg timestamp="20160901 16:21:56.349" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.349" starttime="20160901 16:21:56.348"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.350" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.350" level="INFO">Request body set to "&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
".</msg>
<msg timestamp="20160901 16:21:56.350" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.350" starttime="20160901 16:21:56.349"></status>
</kw>
<msg timestamp="20160901 16:21:56.350" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.350" starttime="20160901 16:21:56.346"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.351" level="TRACE">Arguments: [ ${url}='/test/xml/default_utf8' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.352" level="TRACE">Arguments: [ '/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:56.352" level="DEBUG">Performing POST request on http://127.0.0.1:20002/test/xml/default_utf8</msg>
<msg timestamp="20160901 16:21:56.353" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:56.353" level="DEBUG">Host: 127.0.0.1:20002</msg>
<msg timestamp="20160901 16:21:56.353" level="DEBUG">customheader3: 33333</msg>
<msg timestamp="20160901 16:21:56.353" level="DEBUG">customheader2: 22222</msg>
<msg timestamp="20160901 16:21:56.353" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:56.353" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:56.354" level="DEBUG">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
</msg>
<msg timestamp="20160901 16:21:56.418" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:56.418" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:56.418" level="DEBUG">content-length: 418</msg>
<msg timestamp="20160901 16:21:56.418" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:56.418" level="DEBUG">customheader3: 33333</msg>
<msg timestamp="20160901 16:21:56.419" level="DEBUG">customheader2: 22222</msg>
<msg timestamp="20160901 16:21:56.419" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:56.419" level="DEBUG">date: Thu, 01 Sep 2016 08:21:56 GMT</msg>
<msg timestamp="20160901 16:21:56.419" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:56.419" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:56.420" level="DEBUG">&lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;
    &lt;processTime&gt;20141010103801&lt;/processTime&gt;
    &lt;returnCode&gt;0&lt;/returnCode&gt;
    &lt;apkType&gt;0&lt;/apkType&gt;
&lt;/resultInfo&gt;
&lt;/resultInfos&gt;
&lt;/Response&gt;</msg>
<msg timestamp="20160901 16:21:56.420" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.420" starttime="20160901 16:21:56.352"></status>
</kw>
<msg timestamp="20160901 16:21:56.420" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.420" starttime="20160901 16:21:56.351"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.421" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.422" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:56.422" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:56.423" level="INFO">${Response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<status status="PASS" endtime="20160901 16:21:56.423" starttime="20160901 16:21:56.421"></status>
</kw>
<msg timestamp="20160901 16:21:56.423" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:56.424" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<status status="PASS" endtime="20160901 16:21:56.424" starttime="20160901 16:21:56.421"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.425" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:56.428" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<msg timestamp="20160901 16:21:56.428" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.428" starttime="20160901 16:21:56.425"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.428" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:56.429" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'customheader2': u'22222', u'customheader3': u'33333'}</msg>
<msg timestamp="20160901 16:21:56.429" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.429" starttime="20160901 16:21:56.428"></status>
</kw>
<msg timestamp="20160901 16:21:56.430" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<status status="PASS" endtime="20160901 16:21:56.430" starttime="20160901 16:21:56.324"></status>
</kw>
<kw name="获取response_body编码" library="NNN接口">
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:56.432" level="TRACE">Arguments: [  ]</msg>
<kw name="Detect Encoding" library="detectEncoding">
<doc>获取test变量resposne_body字符串的encoding，转为大写返回，例如UTF-8</doc>
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:56.432" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:56.442" level="TRACE">Return: b'UTF-8'</msg>
<msg timestamp="20160901 16:21:56.443" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20160901 16:21:56.443" starttime="20160901 16:21:56.432"></status>
</kw>
<msg timestamp="20160901 16:21:56.443" level="TRACE">Return: b'UTF-8'</msg>
<msg timestamp="20160901 16:21:56.443" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20160901 16:21:56.443" starttime="20160901 16:21:56.431"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20160901 16:21:56.444" level="TRACE">Arguments: [ b'UTF-8' | 'UTF-8' ]</msg>
<msg timestamp="20160901 16:21:56.445" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:56.445" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.445" starttime="20160901 16:21:56.444"></status>
</kw>
<kw name="获取返回包头" library="HttpLibrary.HTTP">
<arguments>
<arg>customheader1</arg>
</arguments>
<assign>
<var>${rsp_header1}</var>
</assign>
<msg timestamp="20160901 16:21:56.446" level="TRACE">Arguments: [ ${header_name}='customheader1' ]</msg>
<kw name="Get Response Header" library="HttpLibrary.HTTP">
<doc>Get the response header with the name `header_name`</doc>
<arguments>
<arg>${header_name}</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:56.447" level="TRACE">Arguments: [ 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:56.447" level="TRACE">Return: [b'12345']</msg>
<msg timestamp="20160901 16:21:56.447" level="INFO">${Response_header_value} = ['12345']</msg>
<status status="PASS" endtime="20160901 16:21:56.447" starttime="20160901 16:21:56.446"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"type(${Response_header_value})"=="type([])"</arg>
<arg>Return From Keyword</arg>
</arguments>
<msg timestamp="20160901 16:21:56.448" level="TRACE">Arguments: [ '"type([\'12345\'])"=="type([])"' | 'Return From Keyword' ]</msg>
<msg timestamp="20160901 16:21:56.450" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.450" starttime="20160901 16:21:56.448"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Response_header_value}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:56.451" level="TRACE">Arguments: [ [b'12345'] | '0' ]</msg>
<msg timestamp="20160901 16:21:56.451" level="TRACE">Return: b'12345'</msg>
<msg timestamp="20160901 16:21:56.451" level="INFO">${Response_header_value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:56.451" starttime="20160901 16:21:56.450"></status>
</kw>
<msg timestamp="20160901 16:21:56.451" level="TRACE">Return: b'12345'</msg>
<msg timestamp="20160901 16:21:56.452" level="INFO">${rsp_header1} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:56.452" starttime="20160901 16:21:56.445"></status>
</kw>
<kw name="获取返回包头" library="HttpLibrary.HTTP">
<arguments>
<arg>customheader2</arg>
</arguments>
<assign>
<var>${rsp_header2}</var>
</assign>
<msg timestamp="20160901 16:21:56.453" level="TRACE">Arguments: [ ${header_name}='customheader2' ]</msg>
<kw name="Get Response Header" library="HttpLibrary.HTTP">
<doc>Get the response header with the name `header_name`</doc>
<arguments>
<arg>${header_name}</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:56.453" level="TRACE">Arguments: [ 'customheader2' ]</msg>
<msg timestamp="20160901 16:21:56.454" level="TRACE">Return: [b'22222']</msg>
<msg timestamp="20160901 16:21:56.454" level="INFO">${Response_header_value} = ['22222']</msg>
<status status="PASS" endtime="20160901 16:21:56.454" starttime="20160901 16:21:56.453"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"type(${Response_header_value})"=="type([])"</arg>
<arg>Return From Keyword</arg>
</arguments>
<msg timestamp="20160901 16:21:56.455" level="TRACE">Arguments: [ '"type([\'22222\'])"=="type([])"' | 'Return From Keyword' ]</msg>
<msg timestamp="20160901 16:21:56.456" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.456" starttime="20160901 16:21:56.454"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Response_header_value}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:56.457" level="TRACE">Arguments: [ [b'22222'] | '0' ]</msg>
<msg timestamp="20160901 16:21:56.457" level="TRACE">Return: b'22222'</msg>
<msg timestamp="20160901 16:21:56.457" level="INFO">${Response_header_value} = 22222</msg>
<status status="PASS" endtime="20160901 16:21:56.457" starttime="20160901 16:21:56.456"></status>
</kw>
<msg timestamp="20160901 16:21:56.458" level="TRACE">Return: b'22222'</msg>
<msg timestamp="20160901 16:21:56.458" level="INFO">${rsp_header2} = 22222</msg>
<status status="PASS" endtime="20160901 16:21:56.458" starttime="20160901 16:21:56.452"></status>
</kw>
<kw name="获取返回包头" library="HttpLibrary.HTTP">
<arguments>
<arg>customheader3</arg>
</arguments>
<assign>
<var>${rsp_header3}</var>
</assign>
<msg timestamp="20160901 16:21:56.459" level="TRACE">Arguments: [ ${header_name}='customheader3' ]</msg>
<kw name="Get Response Header" library="HttpLibrary.HTTP">
<doc>Get the response header with the name `header_name`</doc>
<arguments>
<arg>${header_name}</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:56.460" level="TRACE">Arguments: [ 'customheader3' ]</msg>
<msg timestamp="20160901 16:21:56.460" level="TRACE">Return: [b'33333']</msg>
<msg timestamp="20160901 16:21:56.460" level="INFO">${Response_header_value} = ['33333']</msg>
<status status="PASS" endtime="20160901 16:21:56.460" starttime="20160901 16:21:56.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"type(${Response_header_value})"=="type([])"</arg>
<arg>Return From Keyword</arg>
</arguments>
<msg timestamp="20160901 16:21:56.461" level="TRACE">Arguments: [ '"type([\'33333\'])"=="type([])"' | 'Return From Keyword' ]</msg>
<msg timestamp="20160901 16:21:56.462" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.463" starttime="20160901 16:21:56.461"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Response_header_value}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:56.463" level="TRACE">Arguments: [ [b'33333'] | '0' ]</msg>
<msg timestamp="20160901 16:21:56.464" level="TRACE">Return: b'33333'</msg>
<msg timestamp="20160901 16:21:56.464" level="INFO">${Response_header_value} = 33333</msg>
<status status="PASS" endtime="20160901 16:21:56.464" starttime="20160901 16:21:56.463"></status>
</kw>
<msg timestamp="20160901 16:21:56.464" level="TRACE">Return: b'33333'</msg>
<msg timestamp="20160901 16:21:56.465" level="INFO">${rsp_header3} = 33333</msg>
<status status="PASS" endtime="20160901 16:21:56.465" starttime="20160901 16:21:56.459"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${rsp_header1}</arg>
<arg>12345</arg>
</arguments>
<msg timestamp="20160901 16:21:56.467" level="TRACE">Arguments: [ b'12345' | '12345' ]</msg>
<msg timestamp="20160901 16:21:56.467" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:56.467" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.467" starttime="20160901 16:21:56.466"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${rsp_header2}</arg>
<arg>22222</arg>
</arguments>
<msg timestamp="20160901 16:21:56.468" level="TRACE">Arguments: [ b'22222' | '22222' ]</msg>
<msg timestamp="20160901 16:21:56.468" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:56.468" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.469" starttime="20160901 16:21:56.468"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${rsp_header3}</arg>
<arg>33333</arg>
</arguments>
<msg timestamp="20160901 16:21:56.470" level="TRACE">Arguments: [ b'33333' | '33333' ]</msg>
<msg timestamp="20160901 16:21:56.470" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:56.470" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.470" starttime="20160901 16:21:56.469"></status>
</kw>
<doc>Mock的system.xml中，http server如果不配置编码，则缺省按utf-8处理。这样可以兼容以前的Mock V1</doc>
<status status="PASS" endtime="20160901 16:21:56.471" critical="yes" starttime="20160901 16:21:56.277"></status>
</test>
<test id="s1-s2-s2-t2" name="服务端创建自定义头的值">
<kw name="创建随机值">
<assign>
<var>${random_token}</var>
</assign>
<msg timestamp="20160901 16:21:56.484" level="TRACE">Arguments: [  ]</msg>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>12</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${random_token}</var>
</assign>
<msg timestamp="20160901 16:21:56.485" level="TRACE">Arguments: [ '12' | '[LOWER]' ]</msg>
<msg timestamp="20160901 16:21:56.485" level="TRACE">Return: 'ewrvrbdjtqod'</msg>
<msg timestamp="20160901 16:21:56.485" level="INFO">${random_token} = ewrvrbdjtqod</msg>
<status status="PASS" endtime="20160901 16:21:56.485" starttime="20160901 16:21:56.484"></status>
</kw>
<msg timestamp="20160901 16:21:56.486" level="TRACE">Return: 'ewrvrbdjtqod'</msg>
<msg timestamp="20160901 16:21:56.486" level="INFO">${random_token} = ewrvrbdjtqod</msg>
<status status="PASS" endtime="20160901 16:21:56.486" starttime="20160901 16:21:56.484"></status>
</kw>
<kw name="模拟器调用_test_xml_customheader接口" library="NNN接口">
<arguments>
<arg>123456789012</arg>
<arg>愤怒的小鸟</arg>
<arg>123456</arg>
<arg>南京市游戏设计有限责任公司</arg>
<arg>0</arg>
<arg>0</arg>
<arg>3</arg>
<arg>0</arg>
<arg>{"customheader1":"REPLY","token":"${random_token}"}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.488" level="TRACE">Arguments: [ ${contentId}='123456789012' | ${contentName}='愤怒的小鸟' | ${cpId}='123456' | ${cpName}='南京市游戏设计有限责任公司' | ${Infos_returnCode}='0' | ${Info_returnCode}='0' | ${validTime}='3' | ${delay}='0' | ${custom_header}='{"customheader1":"REPLY","token":"ewrvrbdjtqod"}' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"contentId":"${contentId}","contentName":"${contentName}","cpId":"${cpId}","cpName":"${cpName}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:56.489" level="TRACE">Arguments: [ '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' ]</msg>
<msg timestamp="20160901 16:21:56.489" level="TRACE">Return: '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}'</msg>
<msg timestamp="20160901 16:21:56.490" level="INFO">${request} = {"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<status status="PASS" endtime="20160901 16:21:56.490" starttime="20160901 16:21:56.488"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Infos_returnCode":"${Infos_returnCode}","Info_returnCode":"${Info_returnCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:56.491" level="TRACE">Arguments: [ '{"Infos_returnCode":"0","Info_returnCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:56.491" level="TRACE">Return: '{"Infos_returnCode":"0","Info_returnCode":"0"}'</msg>
<msg timestamp="20160901 16:21:56.491" level="INFO">${response} = {"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:56.491" starttime="20160901 16:21:56.490"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/xml/default_utf8</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:56.494" level="TRACE">Arguments: [ ${msgType}='/test/xml/default_utf8' | ${timeOut}='3' | ${request}='{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | ${response}='{"Infos_returnCode":"0","Info_returnCode":"0"}' | ${delay}='0' | ${custom_header}='{"customheader1":"REPLY","token":"ewrvrbdjtqod"}' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:56.497" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/xml/default_utf8' | '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | '{"Infos_returnCode":"0","Info_returnCode":"0"}' | '0' | '{"customheader1":"REPLY","token":"ewrvrbdjtqod"}' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:56.497" level="INFO">{"customheader1":"REPLY","token":"ewrvrbdjtqod"}</msg>
<msg timestamp="20160901 16:21:56.497" level="INFO">{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<msg timestamp="20160901 16:21:56.497" level="INFO">{"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<msg timestamp="20160901 16:21:56.497" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ewrvrbdjtqod&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:56.498" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ewrvrbdjtqod&lt;...</msg>
<status status="PASS" endtime="20160901 16:21:56.498" starttime="20160901 16:21:56.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.499" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ewrvrbdjtqod&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.499" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ewrvrbdjtqod&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:56.499" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.499" starttime="20160901 16:21:56.498"></status>
</kw>
<msg timestamp="20160901 16:21:56.500" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ewrvrbdjtqod&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:56.500" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ewrvrbdjtqod&lt;...</msg>
<status status="PASS" endtime="20160901 16:21:56.500" starttime="20160901 16:21:56.491"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:56.501" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ewrvrbdjtqod&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:56.502" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ewrvrbdjtqod&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.502" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ewrvrbdjtqod&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:56.502" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:56.502" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:56.503" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:56.510" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.51
matchStatus: False
delay: 0
custom_header:{'token': 'ewrvrbdjtqod', 'customheader1': 'REPLY'}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8
    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
</msg>
<msg timestamp="20160901 16:21:56.510" level="TRACE">Return: b"hostIp is: 127.0.0.1\nmsgType is: /test/xml/default_utf8\nvalidTime is:3\nstartTime is:1472718116.51\nmatchStatus: False\ndelay: 0\ncustom_header:{'token': 'ewrvrbdjtqod', 'customheader1': 'REPLY'}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n"</msg>
<msg timestamp="20160901 16:21:56.511" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.51
matchStatus: False
delay: 0
custom_header:{'token': 'ewrvrbdjtqod', 'customheader1': 'REPLY'}
request ...</msg>
<status status="PASS" endtime="20160901 16:21:56.511" starttime="20160901 16:21:56.501"></status>
</kw>
<msg timestamp="20160901 16:21:56.512" level="TRACE">Return: b"hostIp is: 127.0.0.1\nmsgType is: /test/xml/default_utf8\nvalidTime is:3\nstartTime is:1472718116.51\nmatchStatus: False\ndelay: 0\ncustom_header:{'token': 'ewrvrbdjtqod', 'customheader1': 'REPLY'}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n"</msg>
<msg timestamp="20160901 16:21:56.513" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.51
matchStatus: False
delay: 0
custom_header:{'token': 'ewrvrbdjtqod', 'customheader1': 'REPLY'}
request ...</msg>
<status status="PASS" endtime="20160901 16:21:56.513" starttime="20160901 16:21:56.500"></status>
</kw>
<msg timestamp="20160901 16:21:56.513" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;custom_header&gt;&lt;token&gt;ewrvrbdjtqod&lt;/token&gt;&lt;customheader1&gt;REPLY&lt;/customheader1&gt;&lt;/custom_header&gt;&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b"hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.51
matchStatus: False
delay: 0
custom_header:{'token': 'ewrvrbdjtqod', 'customheader1': 'REPLY'}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:åäº¬å¸æ¸¸æè®¾è®¡æéè´£ä»»å¬å¸
    contentName:æ¤æçå°é¸
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
"]</msg>
<status status="PASS" endtime="20160901 16:21:56.514" starttime="20160901 16:21:56.487"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/utf8.xml</arg>
<arg>encoding=utf-8</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.517" level="TRACE">Arguments: [ 'Template/utf8.xml' | encoding='utf-8' ]</msg>
<msg timestamp="20160901 16:21:56.518" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.xml"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.xml&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:56.518" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
'</msg>
<msg timestamp="20160901 16:21:56.518" level="INFO">${unicode_request_body} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    ...</msg>
<status status="PASS" endtime="20160901 16:21:56.519" starttime="20160901 16:21:56.516"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:56.520" level="TRACE">Arguments: [ 'customheader1=12345' ]</msg>
<msg timestamp="20160901 16:21:56.520" level="TRACE">Return: {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:56.520" level="INFO">${custom_headers} = {u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:56.520" starttime="20160901 16:21:56.519"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:20002/test/xml/default_utf8</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=utf-8</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.527" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:20002/test/xml/default_utf8' | ${request_body}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='utf-8' | ${custom_headers}={'customheader1': '12345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:56.528" level="TRACE">Arguments: [ 'http://127.0.0.1:20002/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:56.528" level="TRACE">Return: '127.0.0.1:20002'</msg>
<msg timestamp="20160901 16:21:56.528" level="INFO">${host} = 127.0.0.1:20002</msg>
<status status="PASS" endtime="20160901 16:21:56.529" starttime="20160901 16:21:56.528"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:56.529" level="TRACE">Arguments: [ 'http://127.0.0.1:20002/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:56.529" level="TRACE">Return: '/test/xml/default_utf8'</msg>
<msg timestamp="20160901 16:21:56.530" level="INFO">${uri} = /test/xml/default_utf8</msg>
<status status="PASS" endtime="20160901 16:21:56.530" starttime="20160901 16:21:56.529"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.530" level="TRACE">Arguments: [ ${host}='127.0.0.1:20002' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.531" level="TRACE">Arguments: [ '127.0.0.1:20002' | 'http' ]</msg>
<msg timestamp="20160901 16:21:56.531" level="INFO">Host for next HTTP request set to '127.0.0.1:20002'</msg>
<msg timestamp="20160901 16:21:56.532" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:56.532" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.532" starttime="20160901 16:21:56.531"></status>
</kw>
<msg timestamp="20160901 16:21:56.532" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.532" starttime="20160901 16:21:56.530"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:56.533" level="TRACE">Arguments: [ {'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:56.533" level="TRACE">Return: {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:56.533" level="INFO">${customs_headers_dict} = {u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:56.534" starttime="20160901 16:21:56.533"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:56.535" level="TRACE">Arguments: [ {'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:56.535" level="TRACE">Return: ['customheader1']</msg>
<msg timestamp="20160901 16:21:56.535" level="INFO">@{key_list} = [ customheader1 ]</msg>
<status status="PASS" endtime="20160901 16:21:56.535" starttime="20160901 16:21:56.534"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:56.537" level="TRACE">Arguments: [ {'customheader1': '12345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:56.537" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:56.537" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:56.537" starttime="20160901 16:21:56.536"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.538" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.539" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:56.539" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:56.539" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.539" starttime="20160901 16:21:56.538"></status>
</kw>
<msg timestamp="20160901 16:21:56.540" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.540" starttime="20160901 16:21:56.537"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:56.540" starttime="20160901 16:21:56.536"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:56.540" starttime="20160901 16:21:56.535"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.541" level="TRACE">Arguments: [ ${body}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='utf-8' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.541" level="TRACE">Arguments: [ 'utf-8' ]</msg>
<msg timestamp="20160901 16:21:56.542" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:56.542" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:56.542" level="INFO">&lt;HttpLibrary.HTTP instance at 0x046B1990&gt;</msg>
<msg timestamp="20160901 16:21:56.542" level="INFO">utf-8</msg>
<msg timestamp="20160901 16:21:56.542" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.542" starttime="20160901 16:21:56.541"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.543" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.543" level="INFO">Request body set to "&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
".</msg>
<msg timestamp="20160901 16:21:56.543" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.543" starttime="20160901 16:21:56.543"></status>
</kw>
<msg timestamp="20160901 16:21:56.544" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.544" starttime="20160901 16:21:56.540"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.544" level="TRACE">Arguments: [ ${url}='/test/xml/default_utf8' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.545" level="TRACE">Arguments: [ '/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:56.545" level="DEBUG">Performing POST request on http://127.0.0.1:20002/test/xml/default_utf8</msg>
<msg timestamp="20160901 16:21:56.545" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:56.546" level="DEBUG">Host: 127.0.0.1:20002</msg>
<msg timestamp="20160901 16:21:56.546" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:56.546" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:56.547" level="DEBUG">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
</msg>
<msg timestamp="20160901 16:21:56.609" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:56.609" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:56.609" level="DEBUG">content-length: 418</msg>
<msg timestamp="20160901 16:21:56.609" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:56.609" level="DEBUG">token: ewrvrbdjtqod</msg>
<msg timestamp="20160901 16:21:56.609" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:56.609" level="DEBUG">date: Thu, 01 Sep 2016 08:21:56 GMT</msg>
<msg timestamp="20160901 16:21:56.609" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:56.609" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:56.610" level="DEBUG">&lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;
    &lt;processTime&gt;20141010103801&lt;/processTime&gt;
    &lt;returnCode&gt;0&lt;/returnCode&gt;
    &lt;apkType&gt;0&lt;/apkType&gt;
&lt;/resultInfo&gt;
&lt;/resultInfos&gt;
&lt;/Response&gt;</msg>
<msg timestamp="20160901 16:21:56.610" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.611" starttime="20160901 16:21:56.545"></status>
</kw>
<msg timestamp="20160901 16:21:56.611" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.611" starttime="20160901 16:21:56.544"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.612" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.612" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:56.612" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:56.613" level="INFO">${Response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<status status="PASS" endtime="20160901 16:21:56.613" starttime="20160901 16:21:56.612"></status>
</kw>
<msg timestamp="20160901 16:21:56.614" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:56.615" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<status status="PASS" endtime="20160901 16:21:56.615" starttime="20160901 16:21:56.611"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.615" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:56.618" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<msg timestamp="20160901 16:21:56.619" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.619" starttime="20160901 16:21:56.615"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.619" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:56.620" level="INFO">${custom_headers} = {u'customheader1': u'12345'}</msg>
<msg timestamp="20160901 16:21:56.620" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.620" starttime="20160901 16:21:56.619"></status>
</kw>
<msg timestamp="20160901 16:21:56.620" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<status status="PASS" endtime="20160901 16:21:56.621" starttime="20160901 16:21:56.526"></status>
</kw>
<kw name="获取response_body编码" library="NNN接口">
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:56.622" level="TRACE">Arguments: [  ]</msg>
<kw name="Detect Encoding" library="detectEncoding">
<doc>获取test变量resposne_body字符串的encoding，转为大写返回，例如UTF-8</doc>
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:56.623" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:56.633" level="TRACE">Return: b'UTF-8'</msg>
<msg timestamp="20160901 16:21:56.633" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20160901 16:21:56.633" starttime="20160901 16:21:56.622"></status>
</kw>
<msg timestamp="20160901 16:21:56.634" level="TRACE">Return: b'UTF-8'</msg>
<msg timestamp="20160901 16:21:56.634" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20160901 16:21:56.634" starttime="20160901 16:21:56.621"></status>
</kw>
<kw name="获取返回包头" library="HttpLibrary.HTTP">
<arguments>
<arg>customheader1</arg>
</arguments>
<assign>
<var>${rsp_header1}</var>
</assign>
<msg timestamp="20160901 16:21:56.635" level="TRACE">Arguments: [ ${header_name}='customheader1' ]</msg>
<kw name="Get Response Header" library="HttpLibrary.HTTP">
<doc>Get the response header with the name `header_name`</doc>
<arguments>
<arg>${header_name}</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:56.636" level="TRACE">Arguments: [ 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:56.636" level="TRACE">Return: [b'12345']</msg>
<msg timestamp="20160901 16:21:56.637" level="INFO">${Response_header_value} = ['12345']</msg>
<status status="PASS" endtime="20160901 16:21:56.637" starttime="20160901 16:21:56.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"type(${Response_header_value})"=="type([])"</arg>
<arg>Return From Keyword</arg>
</arguments>
<msg timestamp="20160901 16:21:56.638" level="TRACE">Arguments: [ '"type([\'12345\'])"=="type([])"' | 'Return From Keyword' ]</msg>
<msg timestamp="20160901 16:21:56.639" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.639" starttime="20160901 16:21:56.637"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Response_header_value}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:56.640" level="TRACE">Arguments: [ [b'12345'] | '0' ]</msg>
<msg timestamp="20160901 16:21:56.640" level="TRACE">Return: b'12345'</msg>
<msg timestamp="20160901 16:21:56.640" level="INFO">${Response_header_value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:56.640" starttime="20160901 16:21:56.639"></status>
</kw>
<msg timestamp="20160901 16:21:56.641" level="TRACE">Return: b'12345'</msg>
<msg timestamp="20160901 16:21:56.641" level="INFO">${rsp_header1} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:56.641" starttime="20160901 16:21:56.635"></status>
</kw>
<kw name="获取返回包头" library="HttpLibrary.HTTP">
<arguments>
<arg>token</arg>
</arguments>
<assign>
<var>${rsp_header_token}</var>
</assign>
<msg timestamp="20160901 16:21:56.642" level="TRACE">Arguments: [ ${header_name}='token' ]</msg>
<kw name="Get Response Header" library="HttpLibrary.HTTP">
<doc>Get the response header with the name `header_name`</doc>
<arguments>
<arg>${header_name}</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:56.643" level="TRACE">Arguments: [ 'token' ]</msg>
<msg timestamp="20160901 16:21:56.643" level="TRACE">Return: [b'ewrvrbdjtqod']</msg>
<msg timestamp="20160901 16:21:56.643" level="INFO">${Response_header_value} = ['ewrvrbdjtqod']</msg>
<status status="PASS" endtime="20160901 16:21:56.643" starttime="20160901 16:21:56.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"type(${Response_header_value})"=="type([])"</arg>
<arg>Return From Keyword</arg>
</arguments>
<msg timestamp="20160901 16:21:56.644" level="TRACE">Arguments: [ '"type([\'ewrvrbdjtqod\'])"=="type([])"' | 'Return From Keyword' ]</msg>
<msg timestamp="20160901 16:21:56.645" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.645" starttime="20160901 16:21:56.644"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Response_header_value}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Response_header_value}</var>
</assign>
<msg timestamp="20160901 16:21:56.646" level="TRACE">Arguments: [ [b'ewrvrbdjtqod'] | '0' ]</msg>
<msg timestamp="20160901 16:21:56.646" level="TRACE">Return: b'ewrvrbdjtqod'</msg>
<msg timestamp="20160901 16:21:56.647" level="INFO">${Response_header_value} = ewrvrbdjtqod</msg>
<status status="PASS" endtime="20160901 16:21:56.647" starttime="20160901 16:21:56.646"></status>
</kw>
<msg timestamp="20160901 16:21:56.647" level="TRACE">Return: b'ewrvrbdjtqod'</msg>
<msg timestamp="20160901 16:21:56.647" level="INFO">${rsp_header_token} = ewrvrbdjtqod</msg>
<status status="PASS" endtime="20160901 16:21:56.647" starttime="20160901 16:21:56.641"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${rsp_header1}</arg>
<arg>12345</arg>
</arguments>
<msg timestamp="20160901 16:21:56.649" level="TRACE">Arguments: [ b'12345' | '12345' ]</msg>
<msg timestamp="20160901 16:21:56.649" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:56.649" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.649" starttime="20160901 16:21:56.648"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${rsp_header_token}</arg>
<arg>${random_token}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.651" level="TRACE">Arguments: [ b'ewrvrbdjtqod' | 'ewrvrbdjtqod' ]</msg>
<msg timestamp="20160901 16:21:56.651" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:56.652" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.652" starttime="20160901 16:21:56.651"></status>
</kw>
<doc>对于某些接口，是请求一个类似于Session的值，如getToken接口，此时http请求不带头，而服务端的返回的Token为随机值</doc>
<status status="PASS" endtime="20160901 16:21:56.652" critical="yes" starttime="20160901 16:21:56.474"></status>
</test>
<status status="PASS" endtime="20160901 16:21:56.655" starttime="20160901 16:21:56.241"></status>
</suite>
<suite source="D:\project\SVN\mock\mockv1\SimServer\docs\Demo\接口案例\xml\03.自定义编码.robot" id="s1-s2-s3" name="03.自定义编码">
<test id="s1-s2-s3-t1" name="服务端设置编码为utf8(缺省)">
<kw name="模拟器调用_test_xml_utf8接口" library="NNN接口">
<arguments>
<arg>123456789012</arg>
<arg>愤怒的小鸟</arg>
<arg>123456</arg>
<arg>南京市游戏设计有限责任公司</arg>
<arg>0</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:56.701" level="TRACE">Arguments: [ ${contentId}='123456789012' | ${contentName}='愤怒的小鸟' | ${cpId}='123456' | ${cpName}='南京市游戏设计有限责任公司' | ${Infos_returnCode}='0' | ${Info_returnCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"contentId":"${contentId}","contentName":"${contentName}","cpId":"${cpId}","cpName":"${cpName}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:56.703" level="TRACE">Arguments: [ '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' ]</msg>
<msg timestamp="20160901 16:21:56.703" level="TRACE">Return: '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}'</msg>
<msg timestamp="20160901 16:21:56.703" level="INFO">${request} = {"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<status status="PASS" endtime="20160901 16:21:56.703" starttime="20160901 16:21:56.702"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Infos_returnCode":"${Infos_returnCode}","Info_returnCode":"${Info_returnCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:56.704" level="TRACE">Arguments: [ '{"Infos_returnCode":"0","Info_returnCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:56.704" level="TRACE">Return: '{"Infos_returnCode":"0","Info_returnCode":"0"}'</msg>
<msg timestamp="20160901 16:21:56.705" level="INFO">${response} = {"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:56.705" starttime="20160901 16:21:56.704"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/xml/utf8</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:56.706" level="TRACE">Arguments: [ ${msgType}='/test/xml/utf8' | ${timeOut}='3' | ${request}='{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | ${response}='{"Infos_returnCode":"0","Info_returnCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:56.709" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/xml/utf8' | '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | '{"Infos_returnCode":"0","Info_returnCode":"0"}' | '0' | b'' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:56.709" level="INFO">{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<msg timestamp="20160901 16:21:56.709" level="INFO">{"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<msg timestamp="20160901 16:21:56.709" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:56.710" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;1...</msg>
<status status="PASS" endtime="20160901 16:21:56.710" starttime="20160901 16:21:56.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.710" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.711" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:56.711" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.711" starttime="20160901 16:21:56.710"></status>
</kw>
<msg timestamp="20160901 16:21:56.711" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:56.711" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;1...</msg>
<status status="PASS" endtime="20160901 16:21:56.712" starttime="20160901 16:21:56.705"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:56.712" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:56.713" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.714" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:56.714" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:56.714" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:56.714" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:56.721" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/xml/utf8
validTime is:3
startTime is:1472718116.72
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8
    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
</msg>
<msg timestamp="20160901 16:21:56.722" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/utf8\nvalidTime is:3\nstartTime is:1472718116.72\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:56.723" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/xml/utf8
validTime is:3
startTime is:1472718116.72
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId...</msg>
<status status="PASS" endtime="20160901 16:21:56.723" starttime="20160901 16:21:56.713"></status>
</kw>
<msg timestamp="20160901 16:21:56.723" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/utf8\nvalidTime is:3\nstartTime is:1472718116.72\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:56.724" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/xml/utf8
validTime is:3
startTime is:1472718116.72
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId...</msg>
<status status="PASS" endtime="20160901 16:21:56.724" starttime="20160901 16:21:56.712"></status>
</kw>
<msg timestamp="20160901 16:21:56.725" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/xml/utf8
validTime is:3
startTime is:1472718116.72
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:åäº¬å¸æ¸¸æè®¾è®¡æéè´£ä»»å¬å¸
    contentName:æ¤æçå°é¸
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:56.725" starttime="20160901 16:21:56.700"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/utf8.xml</arg>
<arg>encoding=utf-8</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.728" level="TRACE">Arguments: [ 'Template/utf8.xml' | encoding='utf-8' ]</msg>
<msg timestamp="20160901 16:21:56.728" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.xml"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.xml&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:56.729" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
'</msg>
<msg timestamp="20160901 16:21:56.729" level="INFO">${unicode_request_body} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    ...</msg>
<status status="PASS" endtime="20160901 16:21:56.729" starttime="20160901 16:21:56.727"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:56.730" level="TRACE">Arguments: [ 'customheader1=12345' ]</msg>
<msg timestamp="20160901 16:21:56.730" level="TRACE">Return: {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:56.731" level="INFO">${custom_headers} = {u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:56.731" starttime="20160901 16:21:56.730"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:20001/test/xml/utf8</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=utf-8</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.738" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:20001/test/xml/utf8' | ${request_body}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='utf-8' | ${custom_headers}={'customheader1': '12345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:56.739" level="TRACE">Arguments: [ 'http://127.0.0.1:20001/test/xml/utf8' ]</msg>
<msg timestamp="20160901 16:21:56.739" level="TRACE">Return: '127.0.0.1:20001'</msg>
<msg timestamp="20160901 16:21:56.739" level="INFO">${host} = 127.0.0.1:20001</msg>
<status status="PASS" endtime="20160901 16:21:56.740" starttime="20160901 16:21:56.739"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:56.740" level="TRACE">Arguments: [ 'http://127.0.0.1:20001/test/xml/utf8' ]</msg>
<msg timestamp="20160901 16:21:56.740" level="TRACE">Return: '/test/xml/utf8'</msg>
<msg timestamp="20160901 16:21:56.741" level="INFO">${uri} = /test/xml/utf8</msg>
<status status="PASS" endtime="20160901 16:21:56.741" starttime="20160901 16:21:56.740"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.741" level="TRACE">Arguments: [ ${host}='127.0.0.1:20001' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.742" level="TRACE">Arguments: [ '127.0.0.1:20001' | 'http' ]</msg>
<msg timestamp="20160901 16:21:56.742" level="INFO">Host for next HTTP request set to '127.0.0.1:20001'</msg>
<msg timestamp="20160901 16:21:56.743" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:56.743" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.743" starttime="20160901 16:21:56.742"></status>
</kw>
<msg timestamp="20160901 16:21:56.743" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.743" starttime="20160901 16:21:56.741"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:56.744" level="TRACE">Arguments: [ {'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:56.744" level="TRACE">Return: {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:56.744" level="INFO">${customs_headers_dict} = {u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:56.744" starttime="20160901 16:21:56.743"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:56.745" level="TRACE">Arguments: [ {'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:56.746" level="TRACE">Return: ['customheader1']</msg>
<msg timestamp="20160901 16:21:56.746" level="INFO">@{key_list} = [ customheader1 ]</msg>
<status status="PASS" endtime="20160901 16:21:56.746" starttime="20160901 16:21:56.745"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:56.747" level="TRACE">Arguments: [ {'customheader1': '12345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:56.748" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:56.748" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:56.748" starttime="20160901 16:21:56.747"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.749" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.750" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:56.750" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:56.750" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.751" starttime="20160901 16:21:56.750"></status>
</kw>
<msg timestamp="20160901 16:21:56.751" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.751" starttime="20160901 16:21:56.748"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:56.751" starttime="20160901 16:21:56.746"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:56.751" starttime="20160901 16:21:56.746"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.752" level="TRACE">Arguments: [ ${body}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='utf-8' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.753" level="TRACE">Arguments: [ 'utf-8' ]</msg>
<msg timestamp="20160901 16:21:56.753" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:56.753" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:56.753" level="INFO">&lt;HttpLibrary.HTTP instance at 0x0468EAD0&gt;</msg>
<msg timestamp="20160901 16:21:56.753" level="INFO">utf-8</msg>
<msg timestamp="20160901 16:21:56.754" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.754" starttime="20160901 16:21:56.752"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.754" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.754" level="INFO">Request body set to "&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
".</msg>
<msg timestamp="20160901 16:21:56.755" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.755" starttime="20160901 16:21:56.754"></status>
</kw>
<msg timestamp="20160901 16:21:56.755" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.755" starttime="20160901 16:21:56.751"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.756" level="TRACE">Arguments: [ ${url}='/test/xml/utf8' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.756" level="TRACE">Arguments: [ '/test/xml/utf8' ]</msg>
<msg timestamp="20160901 16:21:56.757" level="DEBUG">Performing POST request on http://127.0.0.1:20001/test/xml/utf8</msg>
<msg timestamp="20160901 16:21:56.757" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:56.757" level="DEBUG">Host: 127.0.0.1:20001</msg>
<msg timestamp="20160901 16:21:56.757" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:56.757" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:56.758" level="DEBUG">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
</msg>
<msg timestamp="20160901 16:21:56.822" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:56.822" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:56.822" level="DEBUG">date: Thu, 01 Sep 2016 08:21:56 GMT</msg>
<msg timestamp="20160901 16:21:56.822" level="DEBUG">content-length: 418</msg>
<msg timestamp="20160901 16:21:56.822" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:56.822" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:56.822" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:56.823" level="DEBUG">&lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;
    &lt;processTime&gt;20141010103801&lt;/processTime&gt;
    &lt;returnCode&gt;0&lt;/returnCode&gt;
    &lt;apkType&gt;0&lt;/apkType&gt;
&lt;/resultInfo&gt;
&lt;/resultInfos&gt;
&lt;/Response&gt;</msg>
<msg timestamp="20160901 16:21:56.823" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.823" starttime="20160901 16:21:56.756"></status>
</kw>
<msg timestamp="20160901 16:21:56.824" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.824" starttime="20160901 16:21:56.755"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.824" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.825" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:56.825" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:56.826" level="INFO">${Response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<status status="PASS" endtime="20160901 16:21:56.826" starttime="20160901 16:21:56.825"></status>
</kw>
<msg timestamp="20160901 16:21:56.827" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:56.827" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<status status="PASS" endtime="20160901 16:21:56.828" starttime="20160901 16:21:56.824"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.828" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:56.831" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<msg timestamp="20160901 16:21:56.832" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.832" starttime="20160901 16:21:56.828"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.832" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:56.833" level="INFO">${custom_headers} = {u'customheader1': u'12345'}</msg>
<msg timestamp="20160901 16:21:56.833" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.833" starttime="20160901 16:21:56.832"></status>
</kw>
<msg timestamp="20160901 16:21:56.833" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<status status="PASS" endtime="20160901 16:21:56.834" starttime="20160901 16:21:56.737"></status>
</kw>
<kw name="获取response_body编码" library="NNN接口">
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:56.835" level="TRACE">Arguments: [  ]</msg>
<kw name="Detect Encoding" library="detectEncoding">
<doc>获取test变量resposne_body字符串的encoding，转为大写返回，例如UTF-8</doc>
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:56.836" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:56.846" level="TRACE">Return: b'UTF-8'</msg>
<msg timestamp="20160901 16:21:56.846" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20160901 16:21:56.846" starttime="20160901 16:21:56.836"></status>
</kw>
<msg timestamp="20160901 16:21:56.846" level="TRACE">Return: b'UTF-8'</msg>
<msg timestamp="20160901 16:21:56.846" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20160901 16:21:56.847" starttime="20160901 16:21:56.835"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20160901 16:21:56.849" level="TRACE">Arguments: [ b'UTF-8' | 'UTF-8' ]</msg>
<msg timestamp="20160901 16:21:56.849" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:56.849" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.849" starttime="20160901 16:21:56.848"></status>
</kw>
<doc>编码的配置，在Mock端是在system.xml的http server节点的encoding进行设置的</doc>
<status status="PASS" endtime="20160901 16:21:56.850" critical="yes" starttime="20160901 16:21:56.694"></status>
</test>
<test id="s1-s2-s3-t2" name="服务端未设置编码_兼容utf8">
<kw name="模拟器调用_test_xml_default_utf8接口" library="NNN接口">
<arguments>
<arg>123456789012</arg>
<arg>愤怒的小鸟</arg>
<arg>123456</arg>
<arg>南京市游戏设计有限责任公司</arg>
<arg>0</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:56.863" level="TRACE">Arguments: [ ${contentId}='123456789012' | ${contentName}='愤怒的小鸟' | ${cpId}='123456' | ${cpName}='南京市游戏设计有限责任公司' | ${Infos_returnCode}='0' | ${Info_returnCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"contentId":"${contentId}","contentName":"${contentName}","cpId":"${cpId}","cpName":"${cpName}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:56.865" level="TRACE">Arguments: [ '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' ]</msg>
<msg timestamp="20160901 16:21:56.865" level="TRACE">Return: '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}'</msg>
<msg timestamp="20160901 16:21:56.865" level="INFO">${request} = {"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<status status="PASS" endtime="20160901 16:21:56.865" starttime="20160901 16:21:56.864"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Infos_returnCode":"${Infos_returnCode}","Info_returnCode":"${Info_returnCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:56.866" level="TRACE">Arguments: [ '{"Infos_returnCode":"0","Info_returnCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:56.867" level="TRACE">Return: '{"Infos_returnCode":"0","Info_returnCode":"0"}'</msg>
<msg timestamp="20160901 16:21:56.867" level="INFO">${response} = {"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:56.867" starttime="20160901 16:21:56.866"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/xml/default_utf8</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:56.868" level="TRACE">Arguments: [ ${msgType}='/test/xml/default_utf8' | ${timeOut}='3' | ${request}='{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | ${response}='{"Infos_returnCode":"0","Info_returnCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:56.871" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/xml/default_utf8' | '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | '{"Infos_returnCode":"0","Info_returnCode":"0"}' | '0' | b'' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:56.872" level="INFO">{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<msg timestamp="20160901 16:21:56.872" level="INFO">{"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<msg timestamp="20160901 16:21:56.872" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:56.872" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;con...</msg>
<status status="PASS" endtime="20160901 16:21:56.873" starttime="20160901 16:21:56.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.873" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.873" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:56.874" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.874" starttime="20160901 16:21:56.873"></status>
</kw>
<msg timestamp="20160901 16:21:56.874" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:56.874" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;con...</msg>
<status status="PASS" endtime="20160901 16:21:56.874" starttime="20160901 16:21:56.867"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:56.875" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:56.876" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.877" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:56.877" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:56.877" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:56.877" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:56.885" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.88
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8
    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
</msg>
<msg timestamp="20160901 16:21:56.886" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/default_utf8\nvalidTime is:3\nstartTime is:1472718116.88\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:56.887" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.88
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    c...</msg>
<status status="PASS" endtime="20160901 16:21:56.887" starttime="20160901 16:21:56.876"></status>
</kw>
<msg timestamp="20160901 16:21:56.887" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/default_utf8\nvalidTime is:3\nstartTime is:1472718116.88\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:56.888" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.88
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    c...</msg>
<status status="PASS" endtime="20160901 16:21:56.888" starttime="20160901 16:21:56.875"></status>
</kw>
<msg timestamp="20160901 16:21:56.889" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/default_utf8&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/xml/default_utf8
validTime is:3
startTime is:1472718116.88
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:åäº¬å¸æ¸¸æè®¾è®¡æéè´£ä»»å¬å¸
    contentName:æ¤æçå°é¸
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:56.890" starttime="20160901 16:21:56.862"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/utf8.xml</arg>
<arg>encoding=utf-8</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.891" level="TRACE">Arguments: [ 'Template/utf8.xml' | encoding='utf-8' ]</msg>
<msg timestamp="20160901 16:21:56.891" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.xml"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\utf8.xml&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:56.892" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
'</msg>
<msg timestamp="20160901 16:21:56.892" level="INFO">${unicode_request_body} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    ...</msg>
<status status="PASS" endtime="20160901 16:21:56.893" starttime="20160901 16:21:56.891"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:56.894" level="TRACE">Arguments: [ 'customheader1=12345' ]</msg>
<msg timestamp="20160901 16:21:56.894" level="TRACE">Return: {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:56.894" level="INFO">${custom_headers} = {u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:56.894" starttime="20160901 16:21:56.893"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:20002/test/xml/default_utf8</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=utf-8</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.901" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:20002/test/xml/default_utf8' | ${request_body}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='utf-8' | ${custom_headers}={'customheader1': '12345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:56.902" level="TRACE">Arguments: [ 'http://127.0.0.1:20002/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:56.903" level="TRACE">Return: '127.0.0.1:20002'</msg>
<msg timestamp="20160901 16:21:56.903" level="INFO">${host} = 127.0.0.1:20002</msg>
<status status="PASS" endtime="20160901 16:21:56.903" starttime="20160901 16:21:56.902"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:56.904" level="TRACE">Arguments: [ 'http://127.0.0.1:20002/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:56.904" level="TRACE">Return: '/test/xml/default_utf8'</msg>
<msg timestamp="20160901 16:21:56.904" level="INFO">${uri} = /test/xml/default_utf8</msg>
<status status="PASS" endtime="20160901 16:21:56.904" starttime="20160901 16:21:56.903"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.905" level="TRACE">Arguments: [ ${host}='127.0.0.1:20002' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.906" level="TRACE">Arguments: [ '127.0.0.1:20002' | 'http' ]</msg>
<msg timestamp="20160901 16:21:56.906" level="INFO">Host for next HTTP request set to '127.0.0.1:20002'</msg>
<msg timestamp="20160901 16:21:56.906" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:56.906" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.906" starttime="20160901 16:21:56.905"></status>
</kw>
<msg timestamp="20160901 16:21:56.906" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.907" starttime="20160901 16:21:56.904"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:56.908" level="TRACE">Arguments: [ {'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:56.908" level="TRACE">Return: {'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:56.908" level="INFO">${customs_headers_dict} = {u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:56.908" starttime="20160901 16:21:56.907"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:56.909" level="TRACE">Arguments: [ {'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:56.909" level="TRACE">Return: ['customheader1']</msg>
<msg timestamp="20160901 16:21:56.910" level="INFO">@{key_list} = [ customheader1 ]</msg>
<status status="PASS" endtime="20160901 16:21:56.910" starttime="20160901 16:21:56.909"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:56.911" level="TRACE">Arguments: [ {'customheader1': '12345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:56.911" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:56.911" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:56.912" starttime="20160901 16:21:56.911"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.912" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.913" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:56.914" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:56.914" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.914" starttime="20160901 16:21:56.913"></status>
</kw>
<msg timestamp="20160901 16:21:56.914" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.914" starttime="20160901 16:21:56.912"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:56.914" starttime="20160901 16:21:56.910"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:56.914" starttime="20160901 16:21:56.910"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.915" level="TRACE">Arguments: [ ${body}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='utf-8' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.916" level="TRACE">Arguments: [ 'utf-8' ]</msg>
<msg timestamp="20160901 16:21:56.916" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:56.916" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:56.917" level="INFO">&lt;HttpLibrary.HTTP instance at 0x0468EAD0&gt;</msg>
<msg timestamp="20160901 16:21:56.917" level="INFO">utf-8</msg>
<msg timestamp="20160901 16:21:56.917" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.917" starttime="20160901 16:21:56.916"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.918" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' ]</msg>
<msg timestamp="20160901 16:21:56.918" level="INFO">Request body set to "&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
".</msg>
<msg timestamp="20160901 16:21:56.918" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.918" starttime="20160901 16:21:56.917"></status>
</kw>
<msg timestamp="20160901 16:21:56.918" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.918" starttime="20160901 16:21:56.915"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.919" level="TRACE">Arguments: [ ${url}='/test/xml/default_utf8' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.920" level="TRACE">Arguments: [ '/test/xml/default_utf8' ]</msg>
<msg timestamp="20160901 16:21:56.920" level="DEBUG">Performing POST request on http://127.0.0.1:20002/test/xml/default_utf8</msg>
<msg timestamp="20160901 16:21:56.920" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:56.920" level="DEBUG">Host: 127.0.0.1:20002</msg>
<msg timestamp="20160901 16:21:56.920" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:56.920" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:56.921" level="DEBUG">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
</msg>
<msg timestamp="20160901 16:21:56.985" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:56.985" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:56.985" level="DEBUG">date: Thu, 01 Sep 2016 08:21:56 GMT</msg>
<msg timestamp="20160901 16:21:56.985" level="DEBUG">content-length: 418</msg>
<msg timestamp="20160901 16:21:56.985" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:56.985" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:56.985" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:56.986" level="DEBUG">&lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;
    &lt;processTime&gt;20141010103801&lt;/processTime&gt;
    &lt;returnCode&gt;0&lt;/returnCode&gt;
    &lt;apkType&gt;0&lt;/apkType&gt;
&lt;/resultInfo&gt;
&lt;/resultInfos&gt;
&lt;/Response&gt;</msg>
<msg timestamp="20160901 16:21:56.986" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.987" starttime="20160901 16:21:56.920"></status>
</kw>
<msg timestamp="20160901 16:21:56.987" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.987" starttime="20160901 16:21:56.919"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.988" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:56.988" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:56.988" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:56.989" level="INFO">${Response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<status status="PASS" endtime="20160901 16:21:56.989" starttime="20160901 16:21:56.988"></status>
</kw>
<msg timestamp="20160901 16:21:56.990" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:56.991" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<status status="PASS" endtime="20160901 16:21:56.991" starttime="20160901 16:21:56.987"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.991" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:56.994" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe...</msg>
<msg timestamp="20160901 16:21:56.994" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.994" starttime="20160901 16:21:56.991"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:56.995" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:56.995" level="INFO">${custom_headers} = {u'customheader1': u'12345'}</msg>
<msg timestamp="20160901 16:21:56.996" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:56.996" starttime="20160901 16:21:56.995"></status>
</kw>
<msg timestamp="20160901 16:21:56.996" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='UTF-8'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<status status="PASS" endtime="20160901 16:21:56.996" starttime="20160901 16:21:56.900"></status>
</kw>
<kw name="获取response_body编码" library="NNN接口">
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:56.997" level="TRACE">Arguments: [  ]</msg>
<kw name="Detect Encoding" library="detectEncoding">
<doc>获取test变量resposne_body字符串的encoding，转为大写返回，例如UTF-8</doc>
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:56.998" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:57.009" level="TRACE">Return: b'UTF-8'</msg>
<msg timestamp="20160901 16:21:57.009" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20160901 16:21:57.009" starttime="20160901 16:21:56.998"></status>
</kw>
<msg timestamp="20160901 16:21:57.009" level="TRACE">Return: b'UTF-8'</msg>
<msg timestamp="20160901 16:21:57.009" level="INFO">${encoding} = UTF-8</msg>
<status status="PASS" endtime="20160901 16:21:57.010" starttime="20160901 16:21:56.997"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${encoding}</arg>
<arg>UTF-8</arg>
</arguments>
<msg timestamp="20160901 16:21:57.011" level="TRACE">Arguments: [ b'UTF-8' | 'UTF-8' ]</msg>
<msg timestamp="20160901 16:21:57.011" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:57.011" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.011" starttime="20160901 16:21:57.010"></status>
</kw>
<doc>Mock的system.xml中，http server如果不配置编码，则缺省按utf-8处理。这样可以兼容以前的Mock V1</doc>
<status status="PASS" endtime="20160901 16:21:57.012" critical="yes" starttime="20160901 16:21:56.854"></status>
</test>
<test id="s1-s2-s3-t3" name="服务端设置编码为gbk_包头和包体编码一致">
<kw name="模拟器调用_test_xml_gbk接口" library="NNN接口">
<arguments>
<arg>123456789012</arg>
<arg>愤怒的小鸟</arg>
<arg>123456</arg>
<arg>南京市游戏设计有限责任公司</arg>
<arg>0</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:57.024" level="TRACE">Arguments: [ ${contentId}='123456789012' | ${contentName}='愤怒的小鸟' | ${cpId}='123456' | ${cpName}='南京市游戏设计有限责任公司' | ${Infos_returnCode}='0' | ${Info_returnCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"contentId":"${contentId}","contentName":"${contentName}","cpId":"${cpId}","cpName":"${cpName}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:57.025" level="TRACE">Arguments: [ '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' ]</msg>
<msg timestamp="20160901 16:21:57.025" level="TRACE">Return: '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}'</msg>
<msg timestamp="20160901 16:21:57.026" level="INFO">${request} = {"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<status status="PASS" endtime="20160901 16:21:57.026" starttime="20160901 16:21:57.025"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Infos_returnCode":"${Infos_returnCode}","Info_returnCode":"${Info_returnCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:57.027" level="TRACE">Arguments: [ '{"Infos_returnCode":"0","Info_returnCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:57.027" level="TRACE">Return: '{"Infos_returnCode":"0","Info_returnCode":"0"}'</msg>
<msg timestamp="20160901 16:21:57.027" level="INFO">${response} = {"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:57.027" starttime="20160901 16:21:57.026"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/xml/gbk</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:57.029" level="TRACE">Arguments: [ ${msgType}='/test/xml/gbk' | ${timeOut}='3' | ${request}='{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | ${response}='{"Infos_returnCode":"0","Info_returnCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:57.031" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/xml/gbk' | '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | '{"Infos_returnCode":"0","Info_returnCode":"0"}' | '0' | b'' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:57.032" level="INFO">{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<msg timestamp="20160901 16:21:57.032" level="INFO">{"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<msg timestamp="20160901 16:21:57.032" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:57.032" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;12...</msg>
<status status="PASS" endtime="20160901 16:21:57.033" starttime="20160901 16:21:57.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.033" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:57.033" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:57.034" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.034" starttime="20160901 16:21:57.033"></status>
</kw>
<msg timestamp="20160901 16:21:57.034" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:57.034" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;12...</msg>
<status status="PASS" endtime="20160901 16:21:57.034" starttime="20160901 16:21:57.027"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:57.035" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:57.036" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:57.037" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:57.037" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:57.037" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:57.037" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:57.044" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/xml/gbk
validTime is:3
startTime is:1472718117.04
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8
    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
</msg>
<msg timestamp="20160901 16:21:57.044" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/gbk\nvalidTime is:3\nstartTime is:1472718117.04\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:57.045" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/xml/gbk
validTime is:3
startTime is:1472718117.04
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:...</msg>
<status status="PASS" endtime="20160901 16:21:57.045" starttime="20160901 16:21:57.036"></status>
</kw>
<msg timestamp="20160901 16:21:57.046" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/gbk\nvalidTime is:3\nstartTime is:1472718117.04\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:57.047" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/xml/gbk
validTime is:3
startTime is:1472718117.04
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:...</msg>
<status status="PASS" endtime="20160901 16:21:57.047" starttime="20160901 16:21:57.035"></status>
</kw>
<msg timestamp="20160901 16:21:57.047" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/xml/gbk
validTime is:3
startTime is:1472718117.04
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:åäº¬å¸æ¸¸æè®¾è®¡æéè´£ä»»å¬å¸
    contentName:æ¤æçå°é¸
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:57.048" starttime="20160901 16:21:57.023"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/gbk.xml</arg>
<arg>encoding=GBK</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:57.051" level="TRACE">Arguments: [ 'Template/gbk.xml' | encoding='GBK' ]</msg>
<msg timestamp="20160901 16:21:57.051" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\gbk.xml"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\gbk.xml&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:57.052" level="TRACE">Return: '&lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
'</msg>
<msg timestamp="20160901 16:21:57.052" level="INFO">${unicode_request_body} = &lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;c...</msg>
<status status="PASS" endtime="20160901 16:21:57.052" starttime="20160901 16:21:57.050"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
<arg>Content-Type=xml/text;charset=gbk</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:57.053" level="TRACE">Arguments: [ 'customheader1=12345' | 'Content-Type=xml/text;charset=gbk' ]</msg>
<msg timestamp="20160901 16:21:57.054" level="TRACE">Return: {'Content-Type': 'xml/text;charset=gbk', 'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:57.054" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'Content-Type': u'xml/text;charset=gbk'}</msg>
<status status="PASS" endtime="20160901 16:21:57.054" starttime="20160901 16:21:57.053"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:20003/test/xml/gbk</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=gbk</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.060" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:20003/test/xml/gbk' | ${request_body}='&lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='gbk' | ${custom_headers}={'Content-Type': 'xml/text;charset=gbk', 'customheader1': '12345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:57.061" level="TRACE">Arguments: [ 'http://127.0.0.1:20003/test/xml/gbk' ]</msg>
<msg timestamp="20160901 16:21:57.062" level="TRACE">Return: '127.0.0.1:20003'</msg>
<msg timestamp="20160901 16:21:57.062" level="INFO">${host} = 127.0.0.1:20003</msg>
<status status="PASS" endtime="20160901 16:21:57.062" starttime="20160901 16:21:57.061"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:57.062" level="TRACE">Arguments: [ 'http://127.0.0.1:20003/test/xml/gbk' ]</msg>
<msg timestamp="20160901 16:21:57.063" level="TRACE">Return: '/test/xml/gbk'</msg>
<msg timestamp="20160901 16:21:57.063" level="INFO">${uri} = /test/xml/gbk</msg>
<status status="PASS" endtime="20160901 16:21:57.063" starttime="20160901 16:21:57.062"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.064" level="TRACE">Arguments: [ ${host}='127.0.0.1:20003' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.065" level="TRACE">Arguments: [ '127.0.0.1:20003' | 'http' ]</msg>
<msg timestamp="20160901 16:21:57.065" level="INFO">Host for next HTTP request set to '127.0.0.1:20003'</msg>
<msg timestamp="20160901 16:21:57.065" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:57.065" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.065" starttime="20160901 16:21:57.064"></status>
</kw>
<msg timestamp="20160901 16:21:57.066" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.066" starttime="20160901 16:21:57.063"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:57.066" level="TRACE">Arguments: [ {'Content-Type': 'xml/text;charset=gbk', 'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:57.067" level="TRACE">Return: {'Content-Type': 'xml/text;charset=gbk', 'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:57.067" level="INFO">${customs_headers_dict} = {u'Content-Type': u'xml/text;charset=gbk', u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:57.067" starttime="20160901 16:21:57.066"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:57.068" level="TRACE">Arguments: [ {'Content-Type': 'xml/text;charset=gbk', 'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:57.068" level="TRACE">Return: ['Content-Type', 'customheader1']</msg>
<msg timestamp="20160901 16:21:57.068" level="INFO">@{key_list} = [ Content-Type | customheader1 ]</msg>
<status status="PASS" endtime="20160901 16:21:57.068" starttime="20160901 16:21:57.067"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = Content-Type">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:57.070" level="TRACE">Arguments: [ {'Content-Type': 'xml/text;charset=gbk', 'customheader1': '12345'} | 'Content-Type' ]</msg>
<msg timestamp="20160901 16:21:57.070" level="TRACE">Return: 'xml/text;charset=gbk'</msg>
<msg timestamp="20160901 16:21:57.070" level="INFO">${value} = xml/text;charset=gbk</msg>
<status status="PASS" endtime="20160901 16:21:57.070" starttime="20160901 16:21:57.069"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.071" level="TRACE">Arguments: [ ${header_name}='Content-Type' | ${header_value}='xml/text;charset=gbk' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.072" level="TRACE">Arguments: [ 'Content-Type' | 'xml/text;charset=gbk' ]</msg>
<msg timestamp="20160901 16:21:57.073" level="INFO">Set request header "Content-Type" to "xml/text;charset=gbk"</msg>
<msg timestamp="20160901 16:21:57.073" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.073" starttime="20160901 16:21:57.072"></status>
</kw>
<msg timestamp="20160901 16:21:57.073" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.073" starttime="20160901 16:21:57.071"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:57.073" starttime="20160901 16:21:57.069"></status>
</kw>
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:57.074" level="TRACE">Arguments: [ {'Content-Type': 'xml/text;charset=gbk', 'customheader1': '12345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:57.074" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:57.075" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:57.075" starttime="20160901 16:21:57.074"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.076" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.077" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:57.077" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:57.077" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.077" starttime="20160901 16:21:57.076"></status>
</kw>
<msg timestamp="20160901 16:21:57.077" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.077" starttime="20160901 16:21:57.075"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:57.078" starttime="20160901 16:21:57.073"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:57.078" starttime="20160901 16:21:57.069"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.079" level="TRACE">Arguments: [ ${body}='&lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='gbk' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.079" level="TRACE">Arguments: [ 'gbk' ]</msg>
<msg timestamp="20160901 16:21:57.080" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:57.080" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:57.080" level="INFO">&lt;HttpLibrary.HTTP instance at 0x0468EAD0&gt;</msg>
<msg timestamp="20160901 16:21:57.080" level="INFO">gbk</msg>
<msg timestamp="20160901 16:21:57.080" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.080" starttime="20160901 16:21:57.079"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.081" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' ]</msg>
<msg timestamp="20160901 16:21:57.081" level="INFO">Request body set to "&lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
".</msg>
<msg timestamp="20160901 16:21:57.081" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.081" starttime="20160901 16:21:57.081"></status>
</kw>
<msg timestamp="20160901 16:21:57.082" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.082" starttime="20160901 16:21:57.078"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.082" level="TRACE">Arguments: [ ${url}='/test/xml/gbk' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.083" level="TRACE">Arguments: [ '/test/xml/gbk' ]</msg>
<msg timestamp="20160901 16:21:57.084" level="DEBUG">Performing POST request on http://127.0.0.1:20003/test/xml/gbk</msg>
<msg timestamp="20160901 16:21:57.084" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:57.084" level="DEBUG">Host: 127.0.0.1:20003</msg>
<msg timestamp="20160901 16:21:57.084" level="DEBUG">Content-Type: xml/text;charset=gbk</msg>
<msg timestamp="20160901 16:21:57.084" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:57.084" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:57.084" level="DEBUG">&lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
</msg>
<msg timestamp="20160901 16:21:57.167" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:57.167" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:57.167" level="DEBUG">date: Thu, 01 Sep 2016 08:21:57 GMT</msg>
<msg timestamp="20160901 16:21:57.167" level="DEBUG">content-length: 398</msg>
<msg timestamp="20160901 16:21:57.168" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:57.168" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:57.168" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:57.168" level="DEBUG">&lt;?xml version='1.0' encoding='GBK'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;processTime&gt;20141010103801&lt;/processTime&gt;
    &lt;returnCode&gt;0&lt;/returnCode&gt;
    &lt;apkType&gt;0&lt;/apkType&gt;
&lt;/resultInfo&gt;
&lt;/resultInfos&gt;
&lt;/Response&gt;</msg>
<msg timestamp="20160901 16:21:57.168" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.168" starttime="20160901 16:21:57.083"></status>
</kw>
<msg timestamp="20160901 16:21:57.168" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.168" starttime="20160901 16:21:57.082"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:57.169" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:57.170" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:57.170" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='GBK'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xb7\xdf\xc5\xad\xb5\xc4\xd0\xa1\xc4\xf1&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xc4\xcf\xbe\xa9\xca\xd0\xd3\xce\xcf\xb7\xc9\xe8\xbc\xc6\xd3\xd0\xcf\xde\xd4\xf0\xc8\xce\xb9\xab\xcb\xbe&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:57.170" level="INFO">${Response_body} = &lt;?xml version='1.0' encoding='GBK'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpI...</msg>
<status status="PASS" endtime="20160901 16:21:57.170" starttime="20160901 16:21:57.170"></status>
</kw>
<msg timestamp="20160901 16:21:57.171" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='GBK'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xb7\xdf\xc5\xad\xb5\xc4\xd0\xa1\xc4\xf1&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xc4\xcf\xbe\xa9\xca\xd0\xd3\xce\xcf\xb7\xc9\xe8\xbc\xc6\xd3\xd0\xcf\xde\xd4\xf0\xc8\xce\xb9\xab\xcb\xbe&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:57.171" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='GBK'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpI...</msg>
<status status="PASS" endtime="20160901 16:21:57.171" starttime="20160901 16:21:57.169"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.171" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:57.172" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='GBK'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpI...</msg>
<msg timestamp="20160901 16:21:57.172" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.172" starttime="20160901 16:21:57.171"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.173" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:57.173" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'Content-Type': u'xml/text;charset=gbk'}</msg>
<msg timestamp="20160901 16:21:57.173" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.174" starttime="20160901 16:21:57.173"></status>
</kw>
<msg timestamp="20160901 16:21:57.174" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='GBK'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xb7\xdf\xc5\xad\xb5\xc4\xd0\xa1\xc4\xf1&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xc4\xcf\xbe\xa9\xca\xd0\xd3\xce\xcf\xb7\xc9\xe8\xbc\xc6\xd3\xd0\xcf\xde\xd4\xf0\xc8\xce\xb9\xab\xcb\xbe&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<status status="PASS" endtime="20160901 16:21:57.174" starttime="20160901 16:21:57.059"></status>
</kw>
<kw name="获取response_body编码" library="NNN接口">
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:57.175" level="TRACE">Arguments: [  ]</msg>
<kw name="Detect Encoding" library="detectEncoding">
<doc>获取test变量resposne_body字符串的encoding，转为大写返回，例如UTF-8</doc>
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:57.176" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:57.194" level="TRACE">Return: b'GB2312'</msg>
<msg timestamp="20160901 16:21:57.195" level="INFO">${encoding} = GB2312</msg>
<status status="PASS" endtime="20160901 16:21:57.195" starttime="20160901 16:21:57.176"></status>
</kw>
<msg timestamp="20160901 16:21:57.195" level="TRACE">Return: b'GB2312'</msg>
<msg timestamp="20160901 16:21:57.195" level="INFO">${encoding} = GB2312</msg>
<status status="PASS" endtime="20160901 16:21:57.195" starttime="20160901 16:21:57.175"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${encoding}</arg>
<arg>GB2312</arg>
</arguments>
<msg timestamp="20160901 16:21:57.197" level="TRACE">Arguments: [ b'GB2312' | 'GB2312' ]</msg>
<msg timestamp="20160901 16:21:57.197" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:57.197" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.197" starttime="20160901 16:21:57.196"></status>
</kw>
<doc>目前Mock不对http包头判断，只判断包体的encoding</doc>
<status status="PASS" endtime="20160901 16:21:57.198" critical="yes" starttime="20160901 16:21:57.015"></status>
</test>
<test id="s1-s2-s3-t4" name="服务端设置编码为gbk_未指定包头编码">
<kw name="模拟器调用_test_xml_gbk接口" library="NNN接口">
<arguments>
<arg>123456789012</arg>
<arg>愤怒的小鸟</arg>
<arg>123456</arg>
<arg>南京市游戏设计有限责任公司</arg>
<arg>0</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:57.208" level="TRACE">Arguments: [ ${contentId}='123456789012' | ${contentName}='愤怒的小鸟' | ${cpId}='123456' | ${cpName}='南京市游戏设计有限责任公司' | ${Infos_returnCode}='0' | ${Info_returnCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"contentId":"${contentId}","contentName":"${contentName}","cpId":"${cpId}","cpName":"${cpName}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:57.210" level="TRACE">Arguments: [ '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' ]</msg>
<msg timestamp="20160901 16:21:57.210" level="TRACE">Return: '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}'</msg>
<msg timestamp="20160901 16:21:57.210" level="INFO">${request} = {"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<status status="PASS" endtime="20160901 16:21:57.210" starttime="20160901 16:21:57.209"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Infos_returnCode":"${Infos_returnCode}","Info_returnCode":"${Info_returnCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:57.211" level="TRACE">Arguments: [ '{"Infos_returnCode":"0","Info_returnCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:57.211" level="TRACE">Return: '{"Infos_returnCode":"0","Info_returnCode":"0"}'</msg>
<msg timestamp="20160901 16:21:57.212" level="INFO">${response} = {"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:57.212" starttime="20160901 16:21:57.211"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/xml/gbk</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:57.213" level="TRACE">Arguments: [ ${msgType}='/test/xml/gbk' | ${timeOut}='3' | ${request}='{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | ${response}='{"Infos_returnCode":"0","Info_returnCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:57.216" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/xml/gbk' | '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | '{"Infos_returnCode":"0","Info_returnCode":"0"}' | '0' | b'' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:57.216" level="INFO">{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<msg timestamp="20160901 16:21:57.217" level="INFO">{"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<msg timestamp="20160901 16:21:57.217" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:57.217" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;12...</msg>
<status status="PASS" endtime="20160901 16:21:57.217" starttime="20160901 16:21:57.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.218" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:57.218" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:57.218" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.218" starttime="20160901 16:21:57.217"></status>
</kw>
<msg timestamp="20160901 16:21:57.219" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:57.219" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;12...</msg>
<status status="PASS" endtime="20160901 16:21:57.219" starttime="20160901 16:21:57.212"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:57.220" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:57.221" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:57.221" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:57.221" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:57.222" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:57.222" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:57.229" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/xml/gbk
validTime is:3
startTime is:1472718117.23
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8
    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
</msg>
<msg timestamp="20160901 16:21:57.229" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/gbk\nvalidTime is:3\nstartTime is:1472718117.23\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:57.230" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/xml/gbk
validTime is:3
startTime is:1472718117.23
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:...</msg>
<status status="PASS" endtime="20160901 16:21:57.230" starttime="20160901 16:21:57.221"></status>
</kw>
<msg timestamp="20160901 16:21:57.230" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/gbk\nvalidTime is:3\nstartTime is:1472718117.23\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:57.231" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/xml/gbk
validTime is:3
startTime is:1472718117.23
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:...</msg>
<status status="PASS" endtime="20160901 16:21:57.231" starttime="20160901 16:21:57.219"></status>
</kw>
<msg timestamp="20160901 16:21:57.232" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/gbk&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/xml/gbk
validTime is:3
startTime is:1472718117.23
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:åäº¬å¸æ¸¸æè®¾è®¡æéè´£ä»»å¬å¸
    contentName:æ¤æçå°é¸
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:57.232" starttime="20160901 16:21:57.207"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/gbk.xml</arg>
<arg>encoding=GBK</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:57.235" level="TRACE">Arguments: [ 'Template/gbk.xml' | encoding='GBK' ]</msg>
<msg timestamp="20160901 16:21:57.236" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\gbk.xml"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\gbk.xml&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:57.236" level="TRACE">Return: '&lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
'</msg>
<msg timestamp="20160901 16:21:57.237" level="INFO">${unicode_request_body} = &lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;c...</msg>
<status status="PASS" endtime="20160901 16:21:57.237" starttime="20160901 16:21:57.235"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
<arg>Content-Type=xml/text</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:57.238" level="TRACE">Arguments: [ 'customheader1=12345' | 'Content-Type=xml/text' ]</msg>
<msg timestamp="20160901 16:21:57.238" level="TRACE">Return: {'Content-Type': 'xml/text', 'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:57.239" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'Content-Type': u'xml/text'}</msg>
<status status="PASS" endtime="20160901 16:21:57.239" starttime="20160901 16:21:57.238"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:20003/test/xml/gbk</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=gbk</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.245" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:20003/test/xml/gbk' | ${request_body}='&lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='gbk' | ${custom_headers}={'Content-Type': 'xml/text', 'customheader1': '12345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:57.246" level="TRACE">Arguments: [ 'http://127.0.0.1:20003/test/xml/gbk' ]</msg>
<msg timestamp="20160901 16:21:57.247" level="TRACE">Return: '127.0.0.1:20003'</msg>
<msg timestamp="20160901 16:21:57.247" level="INFO">${host} = 127.0.0.1:20003</msg>
<status status="PASS" endtime="20160901 16:21:57.247" starttime="20160901 16:21:57.246"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:57.248" level="TRACE">Arguments: [ 'http://127.0.0.1:20003/test/xml/gbk' ]</msg>
<msg timestamp="20160901 16:21:57.248" level="TRACE">Return: '/test/xml/gbk'</msg>
<msg timestamp="20160901 16:21:57.248" level="INFO">${uri} = /test/xml/gbk</msg>
<status status="PASS" endtime="20160901 16:21:57.248" starttime="20160901 16:21:57.247"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.249" level="TRACE">Arguments: [ ${host}='127.0.0.1:20003' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.250" level="TRACE">Arguments: [ '127.0.0.1:20003' | 'http' ]</msg>
<msg timestamp="20160901 16:21:57.250" level="INFO">Host for next HTTP request set to '127.0.0.1:20003'</msg>
<msg timestamp="20160901 16:21:57.250" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:57.250" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.251" starttime="20160901 16:21:57.249"></status>
</kw>
<msg timestamp="20160901 16:21:57.251" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.251" starttime="20160901 16:21:57.248"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:57.252" level="TRACE">Arguments: [ {'Content-Type': 'xml/text', 'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:57.252" level="TRACE">Return: {'Content-Type': 'xml/text', 'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:57.252" level="INFO">${customs_headers_dict} = {u'Content-Type': u'xml/text', u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:57.252" starttime="20160901 16:21:57.251"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:57.253" level="TRACE">Arguments: [ {'Content-Type': 'xml/text', 'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:57.253" level="TRACE">Return: ['Content-Type', 'customheader1']</msg>
<msg timestamp="20160901 16:21:57.254" level="INFO">@{key_list} = [ Content-Type | customheader1 ]</msg>
<status status="PASS" endtime="20160901 16:21:57.254" starttime="20160901 16:21:57.253"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = Content-Type">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:57.255" level="TRACE">Arguments: [ {'Content-Type': 'xml/text', 'customheader1': '12345'} | 'Content-Type' ]</msg>
<msg timestamp="20160901 16:21:57.255" level="TRACE">Return: 'xml/text'</msg>
<msg timestamp="20160901 16:21:57.256" level="INFO">${value} = xml/text</msg>
<status status="PASS" endtime="20160901 16:21:57.256" starttime="20160901 16:21:57.255"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.257" level="TRACE">Arguments: [ ${header_name}='Content-Type' | ${header_value}='xml/text' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.258" level="TRACE">Arguments: [ 'Content-Type' | 'xml/text' ]</msg>
<msg timestamp="20160901 16:21:57.258" level="INFO">Set request header "Content-Type" to "xml/text"</msg>
<msg timestamp="20160901 16:21:57.258" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.258" starttime="20160901 16:21:57.257"></status>
</kw>
<msg timestamp="20160901 16:21:57.258" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.258" starttime="20160901 16:21:57.256"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:57.258" starttime="20160901 16:21:57.254"></status>
</kw>
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:57.259" level="TRACE">Arguments: [ {'Content-Type': 'xml/text', 'customheader1': '12345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:57.260" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:57.260" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:57.260" starttime="20160901 16:21:57.259"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.261" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.262" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:57.262" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:57.262" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.262" starttime="20160901 16:21:57.261"></status>
</kw>
<msg timestamp="20160901 16:21:57.262" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.262" starttime="20160901 16:21:57.260"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:57.262" starttime="20160901 16:21:57.259"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:57.263" starttime="20160901 16:21:57.254"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.263" level="TRACE">Arguments: [ ${body}='&lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='gbk' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.265" level="TRACE">Arguments: [ 'gbk' ]</msg>
<msg timestamp="20160901 16:21:57.265" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:57.265" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:57.265" level="INFO">&lt;HttpLibrary.HTTP instance at 0x0468EAD0&gt;</msg>
<msg timestamp="20160901 16:21:57.265" level="INFO">gbk</msg>
<msg timestamp="20160901 16:21:57.265" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.265" starttime="20160901 16:21:57.264"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.266" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' ]</msg>
<msg timestamp="20160901 16:21:57.266" level="INFO">Request body set to "&lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
".</msg>
<msg timestamp="20160901 16:21:57.266" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.267" starttime="20160901 16:21:57.266"></status>
</kw>
<msg timestamp="20160901 16:21:57.267" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.267" starttime="20160901 16:21:57.263"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.267" level="TRACE">Arguments: [ ${url}='/test/xml/gbk' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.268" level="TRACE">Arguments: [ '/test/xml/gbk' ]</msg>
<msg timestamp="20160901 16:21:57.268" level="DEBUG">Performing POST request on http://127.0.0.1:20003/test/xml/gbk</msg>
<msg timestamp="20160901 16:21:57.269" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:57.269" level="DEBUG">Host: 127.0.0.1:20003</msg>
<msg timestamp="20160901 16:21:57.269" level="DEBUG">Content-Type: xml/text</msg>
<msg timestamp="20160901 16:21:57.269" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:57.269" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:57.269" level="DEBUG">&lt;?xml version="1.0" encoding="GBK" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
</msg>
<msg timestamp="20160901 16:21:57.351" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:57.351" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:57.351" level="DEBUG">date: Thu, 01 Sep 2016 08:21:57 GMT</msg>
<msg timestamp="20160901 16:21:57.351" level="DEBUG">content-length: 398</msg>
<msg timestamp="20160901 16:21:57.352" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:57.352" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:57.352" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:57.352" level="DEBUG">&lt;?xml version='1.0' encoding='GBK'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;processTime&gt;20141010103801&lt;/processTime&gt;
    &lt;returnCode&gt;0&lt;/returnCode&gt;
    &lt;apkType&gt;0&lt;/apkType&gt;
&lt;/resultInfo&gt;
&lt;/resultInfos&gt;
&lt;/Response&gt;</msg>
<msg timestamp="20160901 16:21:57.352" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.352" starttime="20160901 16:21:57.268"></status>
</kw>
<msg timestamp="20160901 16:21:57.352" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.352" starttime="20160901 16:21:57.267"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:57.353" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:57.354" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:57.354" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='GBK'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xb7\xdf\xc5\xad\xb5\xc4\xd0\xa1\xc4\xf1&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xc4\xcf\xbe\xa9\xca\xd0\xd3\xce\xcf\xb7\xc9\xe8\xbc\xc6\xd3\xd0\xcf\xde\xd4\xf0\xc8\xce\xb9\xab\xcb\xbe&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:57.354" level="INFO">${Response_body} = &lt;?xml version='1.0' encoding='GBK'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpI...</msg>
<status status="PASS" endtime="20160901 16:21:57.354" starttime="20160901 16:21:57.353"></status>
</kw>
<msg timestamp="20160901 16:21:57.355" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='GBK'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xb7\xdf\xc5\xad\xb5\xc4\xd0\xa1\xc4\xf1&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xc4\xcf\xbe\xa9\xca\xd0\xd3\xce\xcf\xb7\xc9\xe8\xbc\xc6\xd3\xd0\xcf\xde\xd4\xf0\xc8\xce\xb9\xab\xcb\xbe&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<msg timestamp="20160901 16:21:57.355" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='GBK'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpI...</msg>
<status status="PASS" endtime="20160901 16:21:57.355" starttime="20160901 16:21:57.353"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.355" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:57.356" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='GBK'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpI...</msg>
<msg timestamp="20160901 16:21:57.356" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.356" starttime="20160901 16:21:57.355"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.357" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:57.357" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'Content-Type': u'xml/text'}</msg>
<msg timestamp="20160901 16:21:57.357" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.357" starttime="20160901 16:21:57.357"></status>
</kw>
<msg timestamp="20160901 16:21:57.358" level="TRACE">Return: b"&lt;?xml version='1.0' encoding='GBK'?&gt;\n&lt;Response&gt;\n&lt;resultInfos&gt;\n&lt;returnCode&gt;0&lt;/returnCode&gt;\n&lt;resultInfo&gt;\n    &lt;contentId&gt;123456789012&lt;/contentId&gt;\n    &lt;contentName&gt;\xb7\xdf\xc5\xad\xb5\xc4\xd0\xa1\xc4\xf1&lt;/contentName&gt;\n    &lt;cpId&gt;123456&lt;/cpId&gt;\n    &lt;cpName&gt;\xc4\xcf\xbe\xa9\xca\xd0\xd3\xce\xcf\xb7\xc9\xe8\xbc\xc6\xd3\xd0\xcf\xde\xd4\xf0\xc8\xce\xb9\xab\xcb\xbe&lt;/cpName&gt;\n    &lt;processTime&gt;20141010103801&lt;/processTime&gt;\n    &lt;returnCode&gt;0&lt;/returnCode&gt;\n    &lt;apkType&gt;0&lt;/apkType&gt;\n&lt;/resultInfo&gt;\n&lt;/resultInfos&gt;\n&lt;/Response&gt;"</msg>
<status status="PASS" endtime="20160901 16:21:57.358" starttime="20160901 16:21:57.244"></status>
</kw>
<kw name="获取response_body编码" library="NNN接口">
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:57.360" level="TRACE">Arguments: [  ]</msg>
<kw name="Detect Encoding" library="detectEncoding">
<doc>获取test变量resposne_body字符串的encoding，转为大写返回，例如UTF-8</doc>
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:57.360" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:57.379" level="TRACE">Return: b'GB2312'</msg>
<msg timestamp="20160901 16:21:57.379" level="INFO">${encoding} = GB2312</msg>
<status status="PASS" endtime="20160901 16:21:57.379" starttime="20160901 16:21:57.360"></status>
</kw>
<msg timestamp="20160901 16:21:57.379" level="TRACE">Return: b'GB2312'</msg>
<msg timestamp="20160901 16:21:57.380" level="INFO">${encoding} = GB2312</msg>
<status status="PASS" endtime="20160901 16:21:57.380" starttime="20160901 16:21:57.359"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${encoding}</arg>
<arg>GB2312</arg>
</arguments>
<msg timestamp="20160901 16:21:57.382" level="TRACE">Arguments: [ b'GB2312' | 'GB2312' ]</msg>
<msg timestamp="20160901 16:21:57.382" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:57.382" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.382" starttime="20160901 16:21:57.381"></status>
</kw>
<doc>目前Mock不对http包头判断，只判断包体的encoding</doc>
<status status="PASS" endtime="20160901 16:21:57.383" critical="yes" starttime="20160901 16:21:57.201"></status>
</test>
<test id="s1-s2-s3-t5" name="服务端设置编码为UTF-16LE">
<kw name="模拟器调用_test_xml_utf16le接口" library="NNN接口">
<arguments>
<arg>123456789012</arg>
<arg>愤怒的小鸟</arg>
<arg>123456</arg>
<arg>南京市游戏设计有限责任公司</arg>
<arg>0</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20160901 16:21:57.400" level="TRACE">Arguments: [ ${contentId}='123456789012' | ${contentName}='愤怒的小鸟' | ${cpId}='123456' | ${cpName}='南京市游戏设计有限责任公司' | ${Infos_returnCode}='0' | ${Info_returnCode}='0' | ${validTime}='3' | ${delay}='0' ]</msg>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"contentId":"${contentId}","contentName":"${contentName}","cpId":"${cpId}","cpName":"${cpName}"}</arg>
</arguments>
<assign>
<var>${request}</var>
</assign>
<msg timestamp="20160901 16:21:57.402" level="TRACE">Arguments: [ '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' ]</msg>
<msg timestamp="20160901 16:21:57.402" level="TRACE">Return: '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}'</msg>
<msg timestamp="20160901 16:21:57.402" level="INFO">${request} = {"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<status status="PASS" endtime="20160901 16:21:57.402" starttime="20160901 16:21:57.401"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"Infos_returnCode":"${Infos_returnCode}","Info_returnCode":"${Info_returnCode}"}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20160901 16:21:57.403" level="TRACE">Arguments: [ '{"Infos_returnCode":"0","Info_returnCode":"0"}' ]</msg>
<msg timestamp="20160901 16:21:57.404" level="TRACE">Return: '{"Infos_returnCode":"0","Info_returnCode":"0"}'</msg>
<msg timestamp="20160901 16:21:57.404" level="INFO">${response} = {"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<status status="PASS" endtime="20160901 16:21:57.404" starttime="20160901 16:21:57.403"></status>
</kw>
<kw name="模拟器调用请求包构造" library="simoper">
<arguments>
<arg>/test/xml/unicode</arg>
<arg>${validTime}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
</arguments>
<assign>
<var>${OrderServInfoReq}</var>
</assign>
<msg timestamp="20160901 16:21:57.405" level="TRACE">Arguments: [ ${msgType}='/test/xml/unicode' | ${timeOut}='3' | ${request}='{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | ${response}='{"Infos_returnCode":"0","Info_returnCode":"0"}' | ${delay}='0' | ${custom_header}=b'' | ${verifyMode}='NORMAL' | ${respMode}='NORMAL' ]</msg>
<kw name="Sim Req Pkg" library="simClient">
<arguments>
<arg>${被测系统ip}</arg>
<arg>${timeOut}</arg>
<arg>${msgType}</arg>
<arg>${request}</arg>
<arg>${response}</arg>
<arg>${delay}</arg>
<arg>${custom_header}</arg>
<arg>${verifyMode}</arg>
<arg>${respMode}</arg>
</arguments>
<assign>
<var>${simPkg}</var>
</assign>
<msg timestamp="20160901 16:21:57.408" level="TRACE">Arguments: [ '127.0.0.1' | '3' | '/test/xml/unicode' | '{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}' | '{"Infos_returnCode":"0","Info_returnCode":"0"}' | '0' | b'' | 'NORMAL' | 'NORMAL' ]</msg>
<msg timestamp="20160901 16:21:57.408" level="INFO">{"contentId":"123456789012","contentName":"愤怒的小鸟","cpId":"123456","cpName":"南京市游戏设计有限责任公司"}</msg>
<msg timestamp="20160901 16:21:57.408" level="INFO">{"Infos_returnCode":"0","Info_returnCode":"0"}</msg>
<msg timestamp="20160901 16:21:57.408" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:57.409" level="INFO">${simPkg} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentI...</msg>
<status status="PASS" endtime="20160901 16:21:57.409" starttime="20160901 16:21:57.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${simPkg}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.409" level="TRACE">Arguments: [ '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:57.410" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:57.410" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.410" starttime="20160901 16:21:57.409"></status>
</kw>
<msg timestamp="20160901 16:21:57.410" level="TRACE">Return: '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
'</msg>
<msg timestamp="20160901 16:21:57.411" level="INFO">${OrderServInfoReq} = &lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentI...</msg>
<status status="PASS" endtime="20160901 16:21:57.411" starttime="20160901 16:21:57.404"></status>
</kw>
<kw name="模拟器调用请求" library="simoper">
<arguments>
<arg>${OrderServInfoReq}</arg>
</arguments>
<assign>
<var>${OrderServInfoRsp}</var>
</assign>
<msg timestamp="20160901 16:21:57.411" level="TRACE">Arguments: [ ${req_data}='&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<kw name="Http Post" library="httpLibrary">
<arguments>
<arg>${sim_set_url}</arg>
<arg>${req_data}</arg>
</arguments>
<assign>
<var>${rspStr}</var>
</assign>
<msg timestamp="20160901 16:21:57.413" level="TRACE">Arguments: [ 'http://127.0.0.1:8000/simSet' | '&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
' ]</msg>
<msg timestamp="20160901 16:21:57.413" level="INFO">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
</msg>
<msg timestamp="20160901 16:21:57.413" level="INFO">&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:57.413" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:57.413" level="INFO">path:/simSet</msg>
<msg timestamp="20160901 16:21:57.421" level="INFO">Receive response is:
hostIp is: 127.0.0.1
msgType is: /test/xml/unicode
validTime is:3
startTime is:1472718117.42
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8
    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
</msg>
<msg timestamp="20160901 16:21:57.421" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/unicode\nvalidTime is:3\nstartTime is:1472718117.42\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:57.422" level="INFO">${rspStr} = hostIp is: 127.0.0.1
msgType is: /test/xml/unicode
validTime is:3
startTime is:1472718117.42
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    conten...</msg>
<status status="PASS" endtime="20160901 16:21:57.422" starttime="20160901 16:21:57.412"></status>
</kw>
<msg timestamp="20160901 16:21:57.423" level="TRACE">Return: b'hostIp is: 127.0.0.1\nmsgType is: /test/xml/unicode\nvalidTime is:3\nstartTime is:1472718117.42\nmatchStatus: False\ndelay: 0\ncustom_header:{}\nrequest verifyMode is \nrequest parameter total of 4\n    contentId:123456789012\n    cpId:123456\n    cpName:\xe5\x8d\x97\xe4\xba\xac\xe5\xb8\x82\xe6\xb8\xb8\xe6\x88\x8f\xe8\xae\xbe\xe8\xae\xa1\xe6\x9c\x89\xe9\x99\x90\xe8\xb4\xa3\xe4\xbb\xbb\xe5\x85\xac\xe5\x8f\xb8\n    contentName:\xe6\x84\xa4\xe6\x80\x92\xe7\x9a\x84\xe5\xb0\x8f\xe9\xb8\x9f\nresponse parameter  total of 2\n    Info_returnCode:0\n    Infos_returnCode:0\n'</msg>
<msg timestamp="20160901 16:21:57.424" level="INFO">${OrderServInfoRsp} = hostIp is: 127.0.0.1
msgType is: /test/xml/unicode
validTime is:3
startTime is:1472718117.42
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    conten...</msg>
<status status="PASS" endtime="20160901 16:21:57.424" starttime="20160901 16:21:57.411"></status>
</kw>
<msg timestamp="20160901 16:21:57.424" level="TRACE">Return: ['&lt;?xml version="1.0" encoding="UTF-8" ?&gt;&lt;message&gt;
&lt;hostIp&gt;127.0.0.1&lt;/hostIp&gt;
&lt;validTime&gt;3&lt;/validTime&gt;
&lt;msgType&gt;/test/xml/unicode&lt;/msgType&gt;
&lt;delay&gt;0&lt;/delay&gt;
&lt;request verifyMode="NORMAL"&gt;
&lt;contentId&gt;123456789012&lt;/contentId&gt;&lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;&lt;cpId&gt;123456&lt;/cpId&gt;&lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;&lt;/request&gt;
&lt;response respMode="NORMAL"&gt;
&lt;Info_returnCode&gt;0&lt;/Info_returnCode&gt;&lt;Infos_returnCode&gt;0&lt;/Infos_returnCode&gt;&lt;/response&gt;
&lt;/message&gt;
',
 b'hostIp is: 127.0.0.1
msgType is: /test/xml/unicode
validTime is:3
startTime is:1472718117.42
matchStatus: False
delay: 0
custom_header:{}
request verifyMode is 
request parameter total of 4
    contentId:123456789012
    cpId:123456
    cpName:åäº¬å¸æ¸¸æè®¾è®¡æéè´£ä»»å¬å¸
    contentName:æ¤æçå°é¸
response parameter  total of 2
    Info_returnCode:0
    Infos_returnCode:0
']</msg>
<status status="PASS" endtime="20160901 16:21:57.425" starttime="20160901 16:21:57.399"></status>
</kw>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>Template/unicode.xml</arg>
<arg>encoding=UTF-16LE</arg>
</arguments>
<assign>
<var>${unicode_request_body}</var>
</assign>
<msg timestamp="20160901 16:21:57.427" level="TRACE">Arguments: [ 'Template/unicode.xml' | encoding='UTF-16LE' ]</msg>
<msg timestamp="20160901 16:21:57.428" html="yes" level="INFO">Getting file '&lt;a href="file://D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\unicode.xml"&gt;D:\project\SVN\mock\mockv1\SimServer\docs\Demo\Template\unicode.xml&lt;/a&gt;'.</msg>
<msg timestamp="20160901 16:21:57.428" level="TRACE">Return: '﻿&lt;?xml version="1.0" encoding="UTF-16LE" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
'</msg>
<msg timestamp="20160901 16:21:57.429" level="INFO">${unicode_request_body} = ﻿&lt;?xml version="1.0" encoding="UTF-16LE" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
...</msg>
<status status="PASS" endtime="20160901 16:21:57.429" starttime="20160901 16:21:57.427"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on given items.</doc>
<arguments>
<arg>customheader1=12345</arg>
<arg>Content-Type=xml/text;charset=UTF-16LE</arg>
</arguments>
<assign>
<var>${custom_headers}</var>
</assign>
<msg timestamp="20160901 16:21:57.430" level="TRACE">Arguments: [ 'customheader1=12345' | 'Content-Type=xml/text;charset=UTF-16LE' ]</msg>
<msg timestamp="20160901 16:21:57.431" level="TRACE">Return: {'Content-Type': 'xml/text;charset=UTF-16LE', 'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:57.432" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'Content-Type': u'xml/text;charset=UTF-16LE'}</msg>
<status status="PASS" endtime="20160901 16:21:57.432" starttime="20160901 16:21:57.430"></status>
</kw>
<kw name="custom_post" library="HttpLibrary.HTTP">
<doc>对httplibrary.HTTP做一个一元的post的封装</doc>
<arguments>
<arg>http://127.0.0.1:20004/test/xml/unicode</arg>
<arg>${unicode_request_body}</arg>
<arg>encoding=UTF-16LE</arg>
<arg>custom_headers=${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.438" level="TRACE">Arguments: [ ${url}='http://127.0.0.1:20004/test/xml/unicode' | ${request_body}='﻿&lt;?xml version="1.0" encoding="UTF-16LE" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='UTF-16LE' | ${custom_headers}={'Content-Type': 'xml/text;charset=UTF-16LE', 'customheader1': '12345'} ]</msg>
<kw name="Get Host By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${host}</var>
</assign>
<msg timestamp="20160901 16:21:57.439" level="TRACE">Arguments: [ 'http://127.0.0.1:20004/test/xml/unicode' ]</msg>
<msg timestamp="20160901 16:21:57.439" level="TRACE">Return: '127.0.0.1:20004'</msg>
<msg timestamp="20160901 16:21:57.440" level="INFO">${host} = 127.0.0.1:20004</msg>
<status status="PASS" endtime="20160901 16:21:57.440" starttime="20160901 16:21:57.439"></status>
</kw>
<kw name="Get Uri By Url" library="httpLibrary">
<arguments>
<arg>${url}</arg>
</arguments>
<assign>
<var>${uri}</var>
</assign>
<msg timestamp="20160901 16:21:57.440" level="TRACE">Arguments: [ 'http://127.0.0.1:20004/test/xml/unicode' ]</msg>
<msg timestamp="20160901 16:21:57.441" level="TRACE">Return: '/test/xml/unicode'</msg>
<msg timestamp="20160901 16:21:57.441" level="INFO">${uri} = /test/xml/unicode</msg>
<status status="PASS" endtime="20160901 16:21:57.441" starttime="20160901 16:21:57.440"></status>
</kw>
<kw name="创建连接" library="HttpLibrary.HTTP">
<arguments>
<arg>${host}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.442" level="TRACE">Arguments: [ ${host}='127.0.0.1:20004' | ${scheme}='http' ]</msg>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${host}</arg>
<arg>${scheme}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.442" level="TRACE">Arguments: [ '127.0.0.1:20004' | 'http' ]</msg>
<msg timestamp="20160901 16:21:57.443" level="INFO">Host for next HTTP request set to '127.0.0.1:20004'</msg>
<msg timestamp="20160901 16:21:57.443" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<msg timestamp="20160901 16:21:57.443" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.443" starttime="20160901 16:21:57.442"></status>
</kw>
<msg timestamp="20160901 16:21:57.443" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.443" starttime="20160901 16:21:57.441"></status>
</kw>
<kw name="Convert To Dictionary" library="Collections">
<doc>Converts the given ``item`` to a Python ``dict`` type.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<assign>
<var>${customs_headers_dict}</var>
</assign>
<msg timestamp="20160901 16:21:57.444" level="TRACE">Arguments: [ {'Content-Type': 'xml/text;charset=UTF-16LE', 'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:57.444" level="TRACE">Return: {'Content-Type': 'xml/text;charset=UTF-16LE', 'customheader1': '12345'}</msg>
<msg timestamp="20160901 16:21:57.445" level="INFO">${customs_headers_dict} = {u'Content-Type': u'xml/text;charset=UTF-16LE', u'customheader1': u'12345'}</msg>
<status status="PASS" endtime="20160901 16:21:57.445" starttime="20160901 16:21:57.444"></status>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<doc>Returns keys of the given ``dictionary``.</doc>
<arguments>
<arg>${customs_headers_dict}</arg>
</arguments>
<assign>
<var>@{key_list}</var>
</assign>
<msg timestamp="20160901 16:21:57.446" level="TRACE">Arguments: [ {'Content-Type': 'xml/text;charset=UTF-16LE', 'customheader1': '12345'} ]</msg>
<msg timestamp="20160901 16:21:57.446" level="TRACE">Return: ['Content-Type', 'customheader1']</msg>
<msg timestamp="20160901 16:21:57.446" level="INFO">@{key_list} = [ Content-Type | customheader1 ]</msg>
<status status="PASS" endtime="20160901 16:21:57.446" starttime="20160901 16:21:57.445"></status>
</kw>
<kw type="for" name="${key} IN [ @{key_list} ]">
<kw type="foritem" name="${key} = Content-Type">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:57.447" level="TRACE">Arguments: [ {'Content-Type': 'xml/text;charset=UTF-16LE', 'customheader1': '12345'} | 'Content-Type' ]</msg>
<msg timestamp="20160901 16:21:57.448" level="TRACE">Return: 'xml/text;charset=UTF-16LE'</msg>
<msg timestamp="20160901 16:21:57.448" level="INFO">${value} = xml/text;charset=UTF-16LE</msg>
<status status="PASS" endtime="20160901 16:21:57.448" starttime="20160901 16:21:57.447"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.449" level="TRACE">Arguments: [ ${header_name}='Content-Type' | ${header_value}='xml/text;charset=UTF-16LE' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.450" level="TRACE">Arguments: [ 'Content-Type' | 'xml/text;charset=UTF-16LE' ]</msg>
<msg timestamp="20160901 16:21:57.451" level="INFO">Set request header "Content-Type" to "xml/text;charset=UTF-16LE"</msg>
<msg timestamp="20160901 16:21:57.451" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.451" starttime="20160901 16:21:57.450"></status>
</kw>
<msg timestamp="20160901 16:21:57.451" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.451" starttime="20160901 16:21:57.448"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:57.451" starttime="20160901 16:21:57.447"></status>
</kw>
<kw type="foritem" name="${key} = customheader1">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${custom_headers}</arg>
<arg>${key}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20160901 16:21:57.452" level="TRACE">Arguments: [ {'Content-Type': 'xml/text;charset=UTF-16LE', 'customheader1': '12345'} | 'customheader1' ]</msg>
<msg timestamp="20160901 16:21:57.453" level="TRACE">Return: '12345'</msg>
<msg timestamp="20160901 16:21:57.453" level="INFO">${value} = 12345</msg>
<status status="PASS" endtime="20160901 16:21:57.453" starttime="20160901 16:21:57.452"></status>
</kw>
<kw name="设置请求头" library="HttpLibrary.HTTP">
<arguments>
<arg>${key}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.454" level="TRACE">Arguments: [ ${header_name}='customheader1' | ${header_value}='12345' ]</msg>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>${header_name}</arg>
<arg>${header_value}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.455" level="TRACE">Arguments: [ 'customheader1' | '12345' ]</msg>
<msg timestamp="20160901 16:21:57.455" level="INFO">Set request header "customheader1" to "12345"</msg>
<msg timestamp="20160901 16:21:57.455" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.455" starttime="20160901 16:21:57.454"></status>
</kw>
<msg timestamp="20160901 16:21:57.455" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.456" starttime="20160901 16:21:57.453"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:57.456" starttime="20160901 16:21:57.451"></status>
</kw>
<status status="PASS" endtime="20160901 16:21:57.456" starttime="20160901 16:21:57.446"></status>
</kw>
<kw name="设置请求包" library="HttpLibrary.HTTP">
<doc>body采用unicode， encoding是指请求包需要采用的编码方式（缺省utf-8)</doc>
<arguments>
<arg>${request_body}</arg>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.457" level="TRACE">Arguments: [ ${body}='﻿&lt;?xml version="1.0" encoding="UTF-16LE" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' | ${encoding}='UTF-16LE' ]</msg>
<kw name="Set Httplibrary Request Encoding" library="robotPatch">
<doc>在原有的库上加方法，根据RF当前的情况，是没有办法直接patch的，所以采用mylibrary的方式处理</doc>
<arguments>
<arg>${encoding}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.458" level="TRACE">Arguments: [ 'UTF-16LE' ]</msg>
<msg timestamp="20160901 16:21:57.458" level="INFO">***********</msg>
<msg timestamp="20160901 16:21:57.458" level="INFO">['Context', 'DELETE', 'GET', 'HEAD', 'POST', 'PUT', 'ROBOT_LIBRARY_SCOPE', 'ROBOT_LIBRARY_VERSION', '__doc__', '__init__', '__module__', '_contexts', '_path_from_url_or_path', 'app', 'context', 'create_http_context', 'follow_response', 'get_json_value', 'get_response_body', 'get_response_header', 'get_response_status', 'http_request', 'json_value_should_equal', 'json_value_should_not_equal', 'log_json', 'log_response_body', 'log_response_headers', 'log_response_status', 'next_request_may_not_succeed', 'next_request_should_have_status_code', 'next_request_should_not_succeed', 'next_request_should_succeed', 'parse_json', 'response', 'response_body_should_contain', 'response_header_should_equal', 'response_header_should_not_equal', 'response_should_have_header', 'response_should_not_have_header', 'response_status_code_should_equal', 'response_status_code_should_not_equal', 'restore_http_context', 'set_basic_auth', 'set_http_host', 'set_json_value', 'set_request_body', 'set_request_header', 'should_be_valid_json', 'show_response_body_in_browser', 'stringify_json']</msg>
<msg timestamp="20160901 16:21:57.458" level="INFO">&lt;HttpLibrary.HTTP instance at 0x0468EAD0&gt;</msg>
<msg timestamp="20160901 16:21:57.458" level="INFO">UTF-16LE</msg>
<msg timestamp="20160901 16:21:57.459" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.459" starttime="20160901 16:21:57.457"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${body}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.459" level="TRACE">Arguments: [ '﻿&lt;?xml version="1.0" encoding="UTF-16LE" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
' ]</msg>
<msg timestamp="20160901 16:21:57.460" level="INFO">Request body set to "﻿&lt;?xml version="1.0" encoding="UTF-16LE" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;愤怒的小鸟&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;南京市游戏设计有限责任公司&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
".</msg>
<msg timestamp="20160901 16:21:57.460" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.460" starttime="20160901 16:21:57.459"></status>
</kw>
<msg timestamp="20160901 16:21:57.460" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.460" starttime="20160901 16:21:57.456"></status>
</kw>
<kw name="提交POST请求" library="HttpLibrary.HTTP">
<arguments>
<arg>${uri}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.461" level="TRACE">Arguments: [ ${url}='/test/xml/unicode' ]</msg>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${url}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.462" level="TRACE">Arguments: [ '/test/xml/unicode' ]</msg>
<msg timestamp="20160901 16:21:57.462" level="DEBUG">Performing POST request on http://127.0.0.1:20004/test/xml/unicode</msg>
<msg timestamp="20160901 16:21:57.462" level="DEBUG">Request headers:</msg>
<msg timestamp="20160901 16:21:57.462" level="DEBUG">Host: 127.0.0.1:20004</msg>
<msg timestamp="20160901 16:21:57.462" level="DEBUG">Content-Type: xml/text;charset=UTF-16LE</msg>
<msg timestamp="20160901 16:21:57.462" level="DEBUG">customheader1: 12345</msg>
<msg timestamp="20160901 16:21:57.462" level="DEBUG">Request body:</msg>
<msg timestamp="20160901 16:21:57.464" level="DEBUG">\xff\xfe&lt;?xml version="1.0" encoding="UTF-16LE" ?&gt;
&lt;Request&gt;
&lt;apkInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;$a`\x84v\\x9e&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;WS\xacN^8nb\xbe\x8b\xa1\x8b	gP\x96#\x8d\xfbNlQ\xf8S&lt;/cpName&gt;
    &lt;contentType&gt;01&lt;/contentType&gt;
    &lt;filePath&gt;FTP://192.168.0.1/XXX.apk&lt;/filePath&gt;
    &lt;notifyURL&gt;http://ip:port/webservice/interfaces/XXX&lt;/notifyURL&gt;
    &lt;priorityLevel&gt;1&lt;/priorityLevel&gt;
&lt;/apkInfo&gt;
&lt;/Request&gt;
</msg>
<msg timestamp="20160901 16:21:57.546" level="DEBUG">Response status line: 200 OK</msg>
<msg timestamp="20160901 16:21:57.546" level="DEBUG">Response headers:</msg>
<msg timestamp="20160901 16:21:57.546" level="DEBUG">date: Thu, 01 Sep 2016 08:21:57 GMT</msg>
<msg timestamp="20160901 16:21:57.546" level="DEBUG">content-length: 770</msg>
<msg timestamp="20160901 16:21:57.546" level="DEBUG">content-type: text/html</msg>
<msg timestamp="20160901 16:21:57.546" level="DEBUG">server: TwistedWeb/16.3.0</msg>
<msg timestamp="20160901 16:21:57.546" level="DEBUG">Response body:</msg>
<msg timestamp="20160901 16:21:57.548" level="DEBUG">&lt;?xml version='1.0' encoding='UTF-16LE'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resultInfo&gt;
    &lt;contentId&gt;123456789012&lt;/contentId&gt;
    &lt;contentName&gt;$a`\x84v\\x9e&lt;/contentName&gt;
    &lt;cpId&gt;123456&lt;/cpId&gt;
    &lt;cpName&gt;WS\xacN^8nb\xbe\x8b\xa1\x8b	gP\x96#\x8d\xfbNlQ\xf8S&lt;/cpName&gt;
    &lt;processTime&gt;20141010103801&lt;/processTime&gt;
    &lt;returnCode&gt;0&lt;/returnCode&gt;
    &lt;apkType&gt;0&lt;/apkType&gt;
&lt;/resultInfo&gt;
&lt;/resultInfos&gt;
&lt;/Response&gt;</msg>
<msg timestamp="20160901 16:21:57.549" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.549" starttime="20160901 16:21:57.461"></status>
</kw>
<msg timestamp="20160901 16:21:57.549" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.549" starttime="20160901 16:21:57.460"></status>
</kw>
<kw name="获取返回包" library="HttpLibrary.HTTP">
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20160901 16:21:57.550" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${Response_body}</var>
</assign>
<msg timestamp="20160901 16:21:57.550" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:57.550" level="TRACE">Return: b"&lt;\x00?\x00x\x00m\x00l\x00 \x00v\x00e\x00r\x00s\x00i\x00o\x00n\x00=\x00'\x001\x00.\x000\x00'\x00 \x00e\x00n\x00c\x00o\x00d\x00i\x00n\x00g\x00=\x00'\x00U\x00T\x00F\x00-\x001\x006\x00L\x00E\x00'\x00?\x00&gt;\x00\n\x00&lt;\x00R\x00e\x00s\x00p\x00o\x00n\x00s\x00e\x00&gt;\x00\n\x00&lt;\x00r\x00e\x00s\x00u\x00l\x00t\x00I\x00n\x00f\x00o\x00s\x00&gt;\x00\n\x00&lt;\x00r\x00e\x00t\x00u\x00r\x00n\x00C\x00o\x00d\x00e\x00&gt;\x000\x00&lt;\x00/\x00r\x00e\x00t\x00u\x00r\x00n\x00C\x00o\x00d\x00e\x00&gt;\x00\n\x00&lt;\x00r\x00e\x00s\x00u\x00l\x00t\x00I\x00n\x00f\x00o\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00c\x00o\x00n\x00t\x00e\x00n\x00t\x00I\x00d\x00&gt;\x001\x002\x003\x004\x005\x006\x007\x008\x009\x000\x001\x002\x00&lt;\x00/\x00c\x00o\x00n\x00t\x00e\x00n\x00t\x00I\x00d\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00c\x00o\x00n\x00t\x00e\x00n\x00t\x00N\x00a\x00m\x00e\x00&gt;\x00$a\x12`\x84v\x0f\\\x1f\x9e&lt;\x00/\x00c\x00o\x00n\x00t\x00e\x00n\x00t\x00N\x00a\x00m\x00e\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00c\x00p\x00I\x00d\x00&gt;\x001\x002\x003\x004\x005\x006\x00&lt;\x00/\x00c\x00p\x00I\x00d\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00c\x00p\x00N\x00a\x00m\x00e\x00&gt;\x00WS\xacN\x02^8n\x0fb\xbe\x8b\xa1\x8b\tgP\x96#\x8d\xfbNlQ\xf8S&lt;\x00/\x00c\x00p\x00N\x00a\x00m\x00e\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00p\x00r\x00o\x00c\x00e\x00s\x00s\x00T\x00i\x00m\x00e\x00&gt;\x002\x000\x001\x004\x001\x000\x001\x000\x001\x000\x003\x008\x000\x001\x00&lt;\x00/\x00p\x00r\x00o\x00c\x00e\x00s\x00s\x00T\x00i\x00m\x00e\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00r\x00e\x00t\x00u\x00r\x00n\x00C\x00o\x00d\x00e\x00&gt;\x000\x00&lt;\x00/\x00r\x00e\x00t\x00u\x00r\x00n\x00C\x00o\x00d\x00e\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00a\x00p\x00k\x00T\x00y\x00p\x00e\x00&gt;\x000\x00&lt;\x00/\x00a\x00p\x00k\x00T\x00y\x00p\x00e\x00&gt;\x00\n\x00&lt;\x00/\x00r\x00e\x00s\x00u\x00l\x00t\x00I\x00n\x00f\x00o\x00&gt;\x00\n\x00&lt;\x00/\x00r\x00e\x00s\x00u\x00l\x00t\x00I\x00n\x00f\x00o\x00s\x00&gt;\x00\n\x00&lt;\x00/\x00R\x00e\x00s\x00p\x00o\x00n\x00s\x00e\x00&gt;\x00"</msg>
<msg timestamp="20160901 16:21:57.552" level="INFO">${Response_body} = &lt;?xml version='1.0' encoding='UTF-16LE'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resul...</msg>
<status status="PASS" endtime="20160901 16:21:57.552" starttime="20160901 16:21:57.550"></status>
</kw>
<msg timestamp="20160901 16:21:57.552" level="TRACE">Return: b"&lt;\x00?\x00x\x00m\x00l\x00 \x00v\x00e\x00r\x00s\x00i\x00o\x00n\x00=\x00'\x001\x00.\x000\x00'\x00 \x00e\x00n\x00c\x00o\x00d\x00i\x00n\x00g\x00=\x00'\x00U\x00T\x00F\x00-\x001\x006\x00L\x00E\x00'\x00?\x00&gt;\x00\n\x00&lt;\x00R\x00e\x00s\x00p\x00o\x00n\x00s\x00e\x00&gt;\x00\n\x00&lt;\x00r\x00e\x00s\x00u\x00l\x00t\x00I\x00n\x00f\x00o\x00s\x00&gt;\x00\n\x00&lt;\x00r\x00e\x00t\x00u\x00r\x00n\x00C\x00o\x00d\x00e\x00&gt;\x000\x00&lt;\x00/\x00r\x00e\x00t\x00u\x00r\x00n\x00C\x00o\x00d\x00e\x00&gt;\x00\n\x00&lt;\x00r\x00e\x00s\x00u\x00l\x00t\x00I\x00n\x00f\x00o\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00c\x00o\x00n\x00t\x00e\x00n\x00t\x00I\x00d\x00&gt;\x001\x002\x003\x004\x005\x006\x007\x008\x009\x000\x001\x002\x00&lt;\x00/\x00c\x00o\x00n\x00t\x00e\x00n\x00t\x00I\x00d\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00c\x00o\x00n\x00t\x00e\x00n\x00t\x00N\x00a\x00m\x00e\x00&gt;\x00$a\x12`\x84v\x0f\\\x1f\x9e&lt;\x00/\x00c\x00o\x00n\x00t\x00e\x00n\x00t\x00N\x00a\x00m\x00e\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00c\x00p\x00I\x00d\x00&gt;\x001\x002\x003\x004\x005\x006\x00&lt;\x00/\x00c\x00p\x00I\x00d\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00c\x00p\x00N\x00a\x00m\x00e\x00&gt;\x00WS\xacN\x02^8n\x0fb\xbe\x8b\xa1\x8b\tgP\x96#\x8d\xfbNlQ\xf8S&lt;\x00/\x00c\x00p\x00N\x00a\x00m\x00e\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00p\x00r\x00o\x00c\x00e\x00s\x00s\x00T\x00i\x00m\x00e\x00&gt;\x002\x000\x001\x004\x001\x000\x001\x000\x001\x000\x003\x008\x000\x001\x00&lt;\x00/\x00p\x00r\x00o\x00c\x00e\x00s\x00s\x00T\x00i\x00m\x00e\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00r\x00e\x00t\x00u\x00r\x00n\x00C\x00o\x00d\x00e\x00&gt;\x000\x00&lt;\x00/\x00r\x00e\x00t\x00u\x00r\x00n\x00C\x00o\x00d\x00e\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00a\x00p\x00k\x00T\x00y\x00p\x00e\x00&gt;\x000\x00&lt;\x00/\x00a\x00p\x00k\x00T\x00y\x00p\x00e\x00&gt;\x00\n\x00&lt;\x00/\x00r\x00e\x00s\x00u\x00l\x00t\x00I\x00n\x00f\x00o\x00&gt;\x00\n\x00&lt;\x00/\x00r\x00e\x00s\x00u\x00l\x00t\x00I\x00n\x00f\x00o\x00s\x00&gt;\x00\n\x00&lt;\x00/\x00R\x00e\x00s\x00p\x00o\x00n\x00s\x00e\x00&gt;\x00"</msg>
<msg timestamp="20160901 16:21:57.554" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-16LE'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resul...</msg>
<status status="PASS" endtime="20160901 16:21:57.554" starttime="20160901 16:21:57.549"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.555" level="TRACE">Arguments: [ '${response_body}' ]</msg>
<msg timestamp="20160901 16:21:57.558" level="INFO">${response_body} = &lt;?xml version='1.0' encoding='UTF-16LE'?&gt;
&lt;Response&gt;
&lt;resultInfos&gt;
&lt;returnCode&gt;0&lt;/returnCode&gt;
&lt;resul...</msg>
<msg timestamp="20160901 16:21:57.558" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.558" starttime="20160901 16:21:57.555"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${custom_headers}</arg>
</arguments>
<msg timestamp="20160901 16:21:57.559" level="TRACE">Arguments: [ '${custom_headers}' ]</msg>
<msg timestamp="20160901 16:21:57.559" level="INFO">${custom_headers} = {u'customheader1': u'12345', u'Content-Type': u'xml/text;charset=UTF-16LE'}</msg>
<msg timestamp="20160901 16:21:57.560" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.560" starttime="20160901 16:21:57.559"></status>
</kw>
<msg timestamp="20160901 16:21:57.560" level="TRACE">Return: b"&lt;\x00?\x00x\x00m\x00l\x00 \x00v\x00e\x00r\x00s\x00i\x00o\x00n\x00=\x00'\x001\x00.\x000\x00'\x00 \x00e\x00n\x00c\x00o\x00d\x00i\x00n\x00g\x00=\x00'\x00U\x00T\x00F\x00-\x001\x006\x00L\x00E\x00'\x00?\x00&gt;\x00\n\x00&lt;\x00R\x00e\x00s\x00p\x00o\x00n\x00s\x00e\x00&gt;\x00\n\x00&lt;\x00r\x00e\x00s\x00u\x00l\x00t\x00I\x00n\x00f\x00o\x00s\x00&gt;\x00\n\x00&lt;\x00r\x00e\x00t\x00u\x00r\x00n\x00C\x00o\x00d\x00e\x00&gt;\x000\x00&lt;\x00/\x00r\x00e\x00t\x00u\x00r\x00n\x00C\x00o\x00d\x00e\x00&gt;\x00\n\x00&lt;\x00r\x00e\x00s\x00u\x00l\x00t\x00I\x00n\x00f\x00o\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00c\x00o\x00n\x00t\x00e\x00n\x00t\x00I\x00d\x00&gt;\x001\x002\x003\x004\x005\x006\x007\x008\x009\x000\x001\x002\x00&lt;\x00/\x00c\x00o\x00n\x00t\x00e\x00n\x00t\x00I\x00d\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00c\x00o\x00n\x00t\x00e\x00n\x00t\x00N\x00a\x00m\x00e\x00&gt;\x00$a\x12`\x84v\x0f\\\x1f\x9e&lt;\x00/\x00c\x00o\x00n\x00t\x00e\x00n\x00t\x00N\x00a\x00m\x00e\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00c\x00p\x00I\x00d\x00&gt;\x001\x002\x003\x004\x005\x006\x00&lt;\x00/\x00c\x00p\x00I\x00d\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00c\x00p\x00N\x00a\x00m\x00e\x00&gt;\x00WS\xacN\x02^8n\x0fb\xbe\x8b\xa1\x8b\tgP\x96#\x8d\xfbNlQ\xf8S&lt;\x00/\x00c\x00p\x00N\x00a\x00m\x00e\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00p\x00r\x00o\x00c\x00e\x00s\x00s\x00T\x00i\x00m\x00e\x00&gt;\x002\x000\x001\x004\x001\x000\x001\x000\x001\x000\x003\x008\x000\x001\x00&lt;\x00/\x00p\x00r\x00o\x00c\x00e\x00s\x00s\x00T\x00i\x00m\x00e\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00r\x00e\x00t\x00u\x00r\x00n\x00C\x00o\x00d\x00e\x00&gt;\x000\x00&lt;\x00/\x00r\x00e\x00t\x00u\x00r\x00n\x00C\x00o\x00d\x00e\x00&gt;\x00\n\x00 \x00 \x00 \x00 \x00&lt;\x00a\x00p\x00k\x00T\x00y\x00p\x00e\x00&gt;\x000\x00&lt;\x00/\x00a\x00p\x00k\x00T\x00y\x00p\x00e\x00&gt;\x00\n\x00&lt;\x00/\x00r\x00e\x00s\x00u\x00l\x00t\x00I\x00n\x00f\x00o\x00&gt;\x00\n\x00&lt;\x00/\x00r\x00e\x00s\x00u\x00l\x00t\x00I\x00n\x00f\x00o\x00s\x00&gt;\x00\n\x00&lt;\x00/\x00R\x00e\x00s\x00p\x00o\x00n\x00s\x00e\x00&gt;\x00"</msg>
<status status="PASS" endtime="20160901 16:21:57.560" starttime="20160901 16:21:57.437"></status>
</kw>
<kw name="获取response_body编码" library="NNN接口">
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:57.562" level="TRACE">Arguments: [  ]</msg>
<kw name="Detect Encoding" library="detectEncoding">
<doc>获取test变量resposne_body字符串的encoding，转为大写返回，例如UTF-8</doc>
<assign>
<var>${encoding}</var>
</assign>
<msg timestamp="20160901 16:21:57.563" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20160901 16:21:57.596" level="TRACE">Return: b'UTF-16LE'</msg>
<msg timestamp="20160901 16:21:57.596" level="INFO">${encoding} = UTF-16LE</msg>
<status status="PASS" endtime="20160901 16:21:57.597" starttime="20160901 16:21:57.562"></status>
</kw>
<msg timestamp="20160901 16:21:57.597" level="TRACE">Return: b'UTF-16LE'</msg>
<msg timestamp="20160901 16:21:57.597" level="INFO">${encoding} = UTF-16LE</msg>
<status status="PASS" endtime="20160901 16:21:57.597" starttime="20160901 16:21:57.562"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${encoding}</arg>
<arg>UTF-16LE</arg>
</arguments>
<msg timestamp="20160901 16:21:57.599" level="TRACE">Arguments: [ b'UTF-16LE' | 'UTF-16LE' ]</msg>
<msg timestamp="20160901 16:21:57.599" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20160901 16:21:57.599" level="TRACE">Return: None</msg>
<status status="PASS" endtime="20160901 16:21:57.600" starttime="20160901 16:21:57.599"></status>
</kw>
<doc>试验用，用charset来指定实际发出的包的编码,可以看出，还是可以指定以UTF-16LE发出的，但是需要在接收端做转码，参见下面：
datas  = datas.decode('UTF-16LE').encode('UTF-8'),这样就转成了带BOM的UTF-8格式，可以存盘</doc>
<status status="PASS" endtime="20160901 16:21:57.601" critical="yes" starttime="20160901 16:21:57.388"></status>
</test>
<doc>XML的常见自定义编码为UTF-8(缺省), gbk, gb2312</doc>
<status status="PASS" endtime="20160901 16:21:57.606" starttime="20160901 16:21:56.661"></status>
</suite>
<status status="PASS" endtime="20160901 16:21:57.617" starttime="20160901 16:21:55.882"></status>
</suite>
<status status="PASS" endtime="20160901 16:21:57.626" starttime="20160901 16:21:52.429"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="17">Critical Tests</stat>
<stat fail="0" pass="17">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="接口案例" pass="17">接口案例</stat>
<stat fail="0" id="s1-s1" name="Json" pass="8">接口案例.Json</stat>
<stat fail="0" id="s1-s1-s1" name="01.HTTP简单请求测试" pass="1">接口案例.Json.01.HTTP简单请求测试</stat>
<stat fail="0" id="s1-s1-s2" name="02.自定义头" pass="2">接口案例.Json.02.自定义头</stat>
<stat fail="0" id="s1-s1-s3" name="03.自定义编码" pass="5">接口案例.Json.03.自定义编码</stat>
<stat fail="0" id="s1-s2" name="Xml" pass="9">接口案例.Xml</stat>
<stat fail="0" id="s1-s2-s1" name="01.HTTP简单请求测试" pass="2">接口案例.Xml.01.HTTP简单请求测试</stat>
<stat fail="0" id="s1-s2-s2" name="02.自定义头" pass="2">接口案例.Xml.02.自定义头</stat>
<stat fail="0" id="s1-s2-s3" name="03.自定义编码" pass="5">接口案例.Xml.03.自定义编码</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
